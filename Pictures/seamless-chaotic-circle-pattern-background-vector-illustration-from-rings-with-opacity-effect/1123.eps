%!PS-Adobe-3.1 EPSF-3.0
%ADO_DSC_Encoding: Windows Roman
%%Title: g_bcgr_geom_opac_003_023.eps
%%Creator: Adobe Illustrator(R) 16.0
%%For: Zydd
%%CreationDate: 6/12/2017
%%BoundingBox: 0 0 1000 1000
%%HiResBoundingBox: 0 0 1000 1000
%%CropBox: 0 0 1000 1000
%%LanguageLevel: 3
%%DocumentData: Clean7Bit
%ADOBeginClientInjection: DocumentHeader "AI11EPS"
%%AI8_CreatorVersion: 16.0.0%AI9_PrintingDataBegin%ADO_BuildNumber: Adobe Illustrator(R) 16.0.0 x682 R agm 4.6676 ct 5.2591%ADO_ContainsXMP: MainFirst
%ADOEndClientInjection: DocumentHeader "AI11EPS"
%%Pages: 1
%%DocumentNeededResources: 
%%DocumentSuppliedResources: procset Adobe_AGM_Image 1.0 0
%%+ procset Adobe_CoolType_Utility_T42 1.0 0
%%+ procset Adobe_CoolType_Utility_MAKEOCF 1.23 0
%%+ procset Adobe_CoolType_Core 2.31 0
%%+ procset Adobe_AGM_Core 2.0 0
%%+ procset Adobe_AGM_Utils 1.0 0
%%DocumentFonts: 
%%DocumentNeededFonts: 
%%DocumentNeededFeatures: 
%%DocumentSuppliedFeatures: 
%%DocumentCustomColors: 
%%CMYKCustomColor: 
%%RGBCustomColor: 
%%EndComments
         
                                                                                                                                                                                                                                                         
                                                                                                                                                                                                                                                         
                                                                                                                                                                                                                                                         
                                                                                                                                                                                                                                                         
                                                                                                                                                                                                                                                         
                                                                                                                                                                                                                                                         
%%BeginDefaults
%%ViewingOrientation: 1 0 0 1
%%EndDefaults
%%BeginProlog
%%BeginResource: procset Adobe_AGM_Utils 1.0 0
%%Version: 1.0 0
%%Copyright: Copyright(C)2000-2006 Adobe Systems, Inc. All Rights Reserved.
systemdict/setpacking known
{currentpacking	true setpacking}if
userdict/Adobe_AGM_Utils 75 dict dup begin put
/bdf
{bind def}bind def
/nd{null def}bdf
/xdf
{exch def}bdf
/ldf 
{load def}bdf
/ddf
{put}bdf	
/xddf
{3 -1 roll put}bdf	
/xpt
{exch put}bdf
/ndf
{
	exch dup where{
		pop pop pop
	}{
		xdf
	}ifelse
}def
/cdndf
{
	exch dup currentdict exch known{
		pop pop
	}{
		exch def
	}ifelse
}def
/gx
{get exec}bdf
/ps_level
	/languagelevel where{
		pop systemdict/languagelevel gx
	}{
		1
	}ifelse
def
/level2 
	ps_level 2 ge
def
/level3 
	ps_level 3 ge
def
/ps_version
	{version cvr}stopped{-1}if
def
/set_gvm
{currentglobal exch setglobal}bdf
/reset_gvm
{setglobal}bdf
/makereadonlyarray
{
	/packedarray where{pop packedarray
	}{
		array astore readonly}ifelse
}bdf
/map_reserved_ink_name
{
	dup type/stringtype eq{
		dup/Red eq{
			pop(_Red_)
		}{
			dup/Green eq{
				pop(_Green_)
			}{
				dup/Blue eq{
					pop(_Blue_)
				}{
					dup()cvn eq{
						pop(Process)
					}if
				}ifelse
			}ifelse
		}ifelse
	}if
}bdf
/AGMUTIL_GSTATE 22 dict def
/get_gstate
{
	AGMUTIL_GSTATE begin
	/AGMUTIL_GSTATE_clr_spc currentcolorspace def
	/AGMUTIL_GSTATE_clr_indx 0 def
	/AGMUTIL_GSTATE_clr_comps 12 array def
	mark currentcolor counttomark
		{AGMUTIL_GSTATE_clr_comps AGMUTIL_GSTATE_clr_indx 3 -1 roll put
		/AGMUTIL_GSTATE_clr_indx AGMUTIL_GSTATE_clr_indx 1 add def}repeat pop
	/AGMUTIL_GSTATE_fnt rootfont def
	/AGMUTIL_GSTATE_lw currentlinewidth def
	/AGMUTIL_GSTATE_lc currentlinecap def
	/AGMUTIL_GSTATE_lj currentlinejoin def
	/AGMUTIL_GSTATE_ml currentmiterlimit def
	currentdash/AGMUTIL_GSTATE_do xdf/AGMUTIL_GSTATE_da xdf
	/AGMUTIL_GSTATE_sa currentstrokeadjust def
	/AGMUTIL_GSTATE_clr_rnd currentcolorrendering def
	/AGMUTIL_GSTATE_op currentoverprint def
	/AGMUTIL_GSTATE_bg currentblackgeneration cvlit def
	/AGMUTIL_GSTATE_ucr currentundercolorremoval cvlit def
	currentcolortransfer cvlit/AGMUTIL_GSTATE_gy_xfer xdf cvlit/AGMUTIL_GSTATE_b_xfer xdf
		cvlit/AGMUTIL_GSTATE_g_xfer xdf cvlit/AGMUTIL_GSTATE_r_xfer xdf
	/AGMUTIL_GSTATE_ht currenthalftone def
	/AGMUTIL_GSTATE_flt currentflat def
	end
}def
/set_gstate
{
	AGMUTIL_GSTATE begin
	AGMUTIL_GSTATE_clr_spc setcolorspace
	AGMUTIL_GSTATE_clr_indx{AGMUTIL_GSTATE_clr_comps AGMUTIL_GSTATE_clr_indx 1 sub get
	/AGMUTIL_GSTATE_clr_indx AGMUTIL_GSTATE_clr_indx 1 sub def}repeat setcolor
	AGMUTIL_GSTATE_fnt setfont
	AGMUTIL_GSTATE_lw setlinewidth
	AGMUTIL_GSTATE_lc setlinecap
	AGMUTIL_GSTATE_lj setlinejoin
	AGMUTIL_GSTATE_ml setmiterlimit
	AGMUTIL_GSTATE_da AGMUTIL_GSTATE_do setdash
	AGMUTIL_GSTATE_sa setstrokeadjust
	AGMUTIL_GSTATE_clr_rnd setcolorrendering
	AGMUTIL_GSTATE_op setoverprint
	AGMUTIL_GSTATE_bg cvx setblackgeneration
	AGMUTIL_GSTATE_ucr cvx setundercolorremoval
	AGMUTIL_GSTATE_r_xfer cvx AGMUTIL_GSTATE_g_xfer cvx AGMUTIL_GSTATE_b_xfer cvx
		AGMUTIL_GSTATE_gy_xfer cvx setcolortransfer
	AGMUTIL_GSTATE_ht/HalftoneType get dup 9 eq exch 100 eq or
		{
		currenthalftone/HalftoneType get AGMUTIL_GSTATE_ht/HalftoneType get ne
			{
			 mark AGMUTIL_GSTATE_ht{sethalftone}stopped cleartomark
			}if
		}{
		AGMUTIL_GSTATE_ht sethalftone
		}ifelse
	AGMUTIL_GSTATE_flt setflat
	end
}def
/get_gstate_and_matrix
{
	AGMUTIL_GSTATE begin
	/AGMUTIL_GSTATE_ctm matrix currentmatrix def
	end
	get_gstate
}def
/set_gstate_and_matrix
{
	set_gstate
	AGMUTIL_GSTATE begin
	AGMUTIL_GSTATE_ctm setmatrix
	end
}def
/AGMUTIL_str256 256 string def
/AGMUTIL_src256 256 string def
/AGMUTIL_dst64 64 string def
/AGMUTIL_srcLen nd
/AGMUTIL_ndx nd
/AGMUTIL_cpd nd
/capture_cpd{
	//Adobe_AGM_Utils/AGMUTIL_cpd currentpagedevice ddf
}def
/thold_halftone
{
	level3
		{sethalftone currenthalftone}
		{
			dup/HalftoneType get 3 eq
			{
				sethalftone currenthalftone
			}{
				begin
				Width Height mul{
					Thresholds read{pop}if
				}repeat
				end
				currenthalftone
			}ifelse
		}ifelse
}def 
/rdcmntline
{
	currentfile AGMUTIL_str256 readline pop
	(%)anchorsearch{pop}if
}bdf
/filter_cmyk
{	
	dup type/filetype ne{
		exch()/SubFileDecode filter
	}{
		exch pop
	}
	ifelse
	[
	exch
	{
		AGMUTIL_src256 readstring pop
		dup length/AGMUTIL_srcLen exch def
		/AGMUTIL_ndx 0 def
		AGMCORE_plate_ndx 4 AGMUTIL_srcLen 1 sub{
			1 index exch get
			AGMUTIL_dst64 AGMUTIL_ndx 3 -1 roll put
			/AGMUTIL_ndx AGMUTIL_ndx 1 add def
		}for
		pop
		AGMUTIL_dst64 0 AGMUTIL_ndx getinterval
	}
	bind
	/exec cvx
	]cvx
}bdf
/filter_indexed_devn
{
	cvi Names length mul names_index add Lookup exch get
}bdf
/filter_devn
{	
	4 dict begin
	/srcStr xdf
	/dstStr xdf
	dup type/filetype ne{
		0()/SubFileDecode filter
	}if
	[
	exch
		[
			/devicen_colorspace_dict/AGMCORE_gget cvx/begin cvx
			currentdict/srcStr get/readstring cvx/pop cvx
			/dup cvx/length cvx 0/gt cvx[
				Adobe_AGM_Utils/AGMUTIL_ndx 0/ddf cvx
				names_index Names length currentdict/srcStr get length 1 sub{
					1/index cvx/exch cvx/get cvx
					currentdict/dstStr get/AGMUTIL_ndx/load cvx 3 -1/roll cvx/put cvx
					Adobe_AGM_Utils/AGMUTIL_ndx/AGMUTIL_ndx/load cvx 1/add cvx/ddf cvx
				}for
				currentdict/dstStr get 0/AGMUTIL_ndx/load cvx/getinterval cvx
			]cvx/if cvx
			/end cvx
		]cvx
		bind
		/exec cvx
	]cvx
	end
}bdf
/AGMUTIL_imagefile nd
/read_image_file
{
	AGMUTIL_imagefile 0 setfileposition
	10 dict begin
	/imageDict xdf
	/imbufLen Width BitsPerComponent mul 7 add 8 idiv def
	/imbufIdx 0 def
	/origDataSource imageDict/DataSource get def
	/origMultipleDataSources imageDict/MultipleDataSources get def
	/origDecode imageDict/Decode get def
	/dstDataStr imageDict/Width get colorSpaceElemCnt mul string def
	imageDict/MultipleDataSources known{MultipleDataSources}{false}ifelse
	{
		/imbufCnt imageDict/DataSource get length def
		/imbufs imbufCnt array def
		0 1 imbufCnt 1 sub{
			/imbufIdx xdf
			imbufs imbufIdx imbufLen string put
			imageDict/DataSource get imbufIdx[AGMUTIL_imagefile imbufs imbufIdx get/readstring cvx/pop cvx]cvx put
		}for
		DeviceN_PS2{
			imageDict begin
		 	/DataSource[DataSource/devn_sep_datasource cvx]cvx def
			/MultipleDataSources false def
			/Decode[0 1]def
			end
		}if
	}{
		/imbuf imbufLen string def
		Indexed_DeviceN level3 not and DeviceN_NoneName or{
			/srcDataStrs[imageDict begin
				currentdict/MultipleDataSources known{MultipleDataSources{DataSource length}{1}ifelse}{1}ifelse
				{
					Width Decode length 2 div mul cvi string
				}repeat
				end]def		
			imageDict begin
		 	/DataSource[AGMUTIL_imagefile Decode BitsPerComponent false 1/filter_indexed_devn load dstDataStr srcDataStrs devn_alt_datasource/exec cvx]cvx def
			/Decode[0 1]def
			end
		}{
			imageDict/DataSource[1 string dup 0 AGMUTIL_imagefile Decode length 2 idiv string/readstring cvx/pop cvx names_index/get cvx/put cvx]cvx put
			imageDict/Decode[0 1]put
		}ifelse
	}ifelse
	imageDict exch
	load exec
	imageDict/DataSource origDataSource put
	imageDict/MultipleDataSources origMultipleDataSources put
	imageDict/Decode origDecode put	
	end
}bdf
/write_image_file
{
	begin
	{(AGMUTIL_imagefile)(w+)file}stopped{
		false
	}{
		Adobe_AGM_Utils/AGMUTIL_imagefile xddf 
		2 dict begin
		/imbufLen Width BitsPerComponent mul 7 add 8 idiv def
		MultipleDataSources{DataSource 0 get}{DataSource}ifelse type/filetype eq{
			/imbuf imbufLen string def
		}if
		1 1 Height MultipleDataSources not{Decode length 2 idiv mul}if{
			pop
			MultipleDataSources{
			 	0 1 DataSource length 1 sub{
					DataSource type dup
					/arraytype eq{
						pop DataSource exch gx
					}{
						/filetype eq{
							DataSource exch get imbuf readstring pop
						}{
							DataSource exch get
						}ifelse
					}ifelse
					AGMUTIL_imagefile exch writestring
				}for
			}{
				DataSource type dup
				/arraytype eq{
					pop DataSource exec
				}{
					/filetype eq{
						DataSource imbuf readstring pop
					}{
						DataSource
					}ifelse
				}ifelse
				AGMUTIL_imagefile exch writestring
			}ifelse
		}for
		end
		true
	}ifelse
	end
}bdf
/close_image_file
{
	AGMUTIL_imagefile closefile(AGMUTIL_imagefile)deletefile
}def
statusdict/product known userdict/AGMP_current_show known not and{
	/pstr statusdict/product get def
	pstr(HP LaserJet 2200)eq 	
	pstr(HP LaserJet 4000 Series)eq or
	pstr(HP LaserJet 4050 Series )eq or
	pstr(HP LaserJet 8000 Series)eq or
	pstr(HP LaserJet 8100 Series)eq or
	pstr(HP LaserJet 8150 Series)eq or
	pstr(HP LaserJet 5000 Series)eq or
	pstr(HP LaserJet 5100 Series)eq or
	pstr(HP Color LaserJet 4500)eq or
	pstr(HP Color LaserJet 4600)eq or
	pstr(HP LaserJet 5Si)eq or
	pstr(HP LaserJet 1200 Series)eq or
	pstr(HP LaserJet 1300 Series)eq or
	pstr(HP LaserJet 4100 Series)eq or 
	{
 		userdict/AGMP_current_show/show load put
		userdict/show{
		 currentcolorspace 0 get
		 /Pattern eq
		 {false charpath f}
		 {AGMP_current_show}ifelse
		}put
	}if
	currentdict/pstr undef
}if
/consumeimagedata
{
	begin
	AGMIMG_init_common
	currentdict/MultipleDataSources known not
		{/MultipleDataSources false def}if
	MultipleDataSources
		{
		DataSource 0 get type
		dup/filetype eq
			{
			1 dict begin
			/flushbuffer Width cvi string def
			1 1 Height cvi
				{
				pop
				0 1 DataSource length 1 sub
					{
					DataSource exch get
					flushbuffer readstring pop pop
					}for
				}for
			end
			}if
		dup/arraytype eq exch/packedarraytype eq or DataSource 0 get xcheck and
			{
			Width Height mul cvi
				{
				0 1 DataSource length 1 sub
					{dup DataSource exch gx length exch 0 ne{pop}if}for
				dup 0 eq
					{pop exit}if
				sub dup 0 le
					{exit}if
				}loop
			pop
			}if		
		}
		{
		/DataSource load type 
		dup/filetype eq
			{
			1 dict begin
			/flushbuffer Width Decode length 2 idiv mul cvi string def
			1 1 Height{pop DataSource flushbuffer readstring pop pop}for
			end
			}if
		dup/arraytype eq exch/packedarraytype eq or/DataSource load xcheck and
			{
				Height Width BitsPerComponent mul 8 BitsPerComponent sub add 8 idiv Decode length 2 idiv mul mul
					{
					DataSource length dup 0 eq
						{pop exit}if
					sub dup 0 le
						{exit}if
					}loop
				pop
			}if
		}ifelse
	end
}bdf
/addprocs
{
	 2{/exec load}repeat
	 3 1 roll
	 [5 1 roll]bind cvx
}def
/modify_halftone_xfer
{
	currenthalftone dup length dict copy begin
	 currentdict 2 index known{
	 	1 index load dup length dict copy begin
		currentdict/TransferFunction known{
			/TransferFunction load
		}{
			currenttransfer
		}ifelse
		 addprocs/TransferFunction xdf 
		 currentdict end def
		currentdict end sethalftone
	}{
		currentdict/TransferFunction known{
			/TransferFunction load 
		}{
			currenttransfer
		}ifelse
		addprocs/TransferFunction xdf
		currentdict end sethalftone		
		pop
	}ifelse
}def
/clonearray
{
	dup xcheck exch
	dup length array exch
	Adobe_AGM_Core/AGMCORE_tmp -1 ddf 
	{
	Adobe_AGM_Core/AGMCORE_tmp 2 copy get 1 add ddf 
	dup type/dicttype eq
		{
			Adobe_AGM_Core/AGMCORE_tmp get
			exch
			clonedict
			Adobe_AGM_Core/AGMCORE_tmp 4 -1 roll ddf 
		}if
	dup type/arraytype eq
		{
			Adobe_AGM_Core/AGMCORE_tmp get exch
			clonearray
			Adobe_AGM_Core/AGMCORE_tmp 4 -1 roll ddf 
		}if
	exch dup
	Adobe_AGM_Core/AGMCORE_tmp get 4 -1 roll put
	}forall
	exch{cvx}if
}bdf
/clonedict
{
	dup length dict
	begin
	{
		dup type/dicttype eq
			{clonedict}if
		dup type/arraytype eq
			{clonearray}if
		def
	}forall
	currentdict
	end
}bdf
/DeviceN_PS2
{
	/currentcolorspace AGMCORE_gget 0 get/DeviceN eq level3 not and
}bdf
/Indexed_DeviceN
{
	/indexed_colorspace_dict AGMCORE_gget dup null ne{
		dup/CSDBase known{
			/CSDBase get/CSD get_res/Names known 
		}{
			pop false
		}ifelse
	}{
		pop false
	}ifelse
}bdf
/DeviceN_NoneName
{	
	/Names where{
		pop
		false Names
		{
			(None)eq or
		}forall
	}{
		false
	}ifelse
}bdf
/DeviceN_PS2_inRip_seps
{
	/AGMCORE_in_rip_sep where
	{
		pop dup type dup/arraytype eq exch/packedarraytype eq or
		{
			dup 0 get/DeviceN eq level3 not and AGMCORE_in_rip_sep and
			{
				/currentcolorspace exch AGMCORE_gput
				false
			}{
				true
			}ifelse
		}{
			true
		}ifelse
	}{
		true
	}ifelse
}bdf
/base_colorspace_type
{
	dup type/arraytype eq{0 get}if
}bdf
/currentdistillerparams where{pop currentdistillerparams/CoreDistVersion get 5000 lt}{true}ifelse
{
	/pdfmark_5{cleartomark}bind def
}{
	/pdfmark_5{pdfmark}bind def
}ifelse
/ReadBypdfmark_5
{
	currentfile exch 0 exch/SubFileDecode filter
	/currentdistillerparams where 
	{pop currentdistillerparams/CoreDistVersion get 5000 lt}{true}ifelse
	{flushfile cleartomark}
	{/PUT pdfmark}ifelse 	
}bdf
/ReadBypdfmark_5_string
{
	2 dict begin
	/makerString exch def string/tmpString exch def
	{
		currentfile tmpString readline not{pop exit}if
		makerString anchorsearch
		{
			pop pop cleartomark exit
		}{
			3 copy/PUT pdfmark_5 pop 2 copy(\n)/PUT pdfmark_5
		}ifelse
	}loop
	end
}bdf
/xpdfm
{
	{
		dup 0 get/Label eq
		{
			aload length[exch 1 add 1 roll/PAGELABEL
		}{
			aload pop
			[{ThisPage}<<5 -2 roll>>/PUT
		}ifelse
		pdfmark_5
	}forall
}bdf
/lmt{
	dup 2 index le{exch}if pop dup 2 index ge{exch}if pop
}bdf
/int{
	dup 2 index sub 3 index 5 index sub div 6 -2 roll sub mul exch pop add exch pop
}bdf
/ds{
	Adobe_AGM_Utils begin
}bdf
/dt{
	currentdict Adobe_AGM_Utils eq{
		end
	}if
}bdf
systemdict/setpacking known
{setpacking}if
%%EndResource
%%BeginResource: procset Adobe_AGM_Core 2.0 0
%%Version: 2.0 0
%%Copyright: Copyright(C)1997-2007 Adobe Systems, Inc. All Rights Reserved.
systemdict/setpacking known
{
	currentpacking
	true setpacking
}if
userdict/Adobe_AGM_Core 209 dict dup begin put
/Adobe_AGM_Core_Id/Adobe_AGM_Core_2.0_0 def
/AGMCORE_str256 256 string def
/AGMCORE_save nd
/AGMCORE_graphicsave nd
/AGMCORE_c 0 def
/AGMCORE_m 0 def
/AGMCORE_y 0 def
/AGMCORE_k 0 def
/AGMCORE_cmykbuf 4 array def
/AGMCORE_screen[currentscreen]cvx def
/AGMCORE_tmp 0 def
/AGMCORE_&setgray nd
/AGMCORE_&setcolor nd
/AGMCORE_&setcolorspace nd
/AGMCORE_&setcmykcolor nd
/AGMCORE_cyan_plate nd
/AGMCORE_magenta_plate nd
/AGMCORE_yellow_plate nd
/AGMCORE_black_plate nd
/AGMCORE_plate_ndx nd
/AGMCORE_get_ink_data nd
/AGMCORE_is_cmyk_sep nd
/AGMCORE_host_sep nd
/AGMCORE_avoid_L2_sep_space nd
/AGMCORE_distilling nd
/AGMCORE_composite_job nd
/AGMCORE_producing_seps nd
/AGMCORE_ps_level -1 def
/AGMCORE_ps_version -1 def
/AGMCORE_environ_ok nd
/AGMCORE_CSD_cache 0 dict def
/AGMCORE_currentoverprint false def
/AGMCORE_deltaX nd
/AGMCORE_deltaY nd
/AGMCORE_name nd
/AGMCORE_sep_special nd
/AGMCORE_err_strings 4 dict def
/AGMCORE_cur_err nd
/AGMCORE_current_spot_alias false def
/AGMCORE_inverting false def
/AGMCORE_feature_dictCount nd
/AGMCORE_feature_opCount nd
/AGMCORE_feature_ctm nd
/AGMCORE_ConvertToProcess false def
/AGMCORE_Default_CTM matrix def
/AGMCORE_Default_PageSize nd
/AGMCORE_Default_flatness nd
/AGMCORE_currentbg nd
/AGMCORE_currentucr nd
/AGMCORE_pattern_paint_type 0 def
/knockout_unitsq nd
currentglobal true setglobal
[/CSA/Gradient/Procedure]
{
	/Generic/Category findresource dup length dict copy/Category defineresource pop
}forall
setglobal
/AGMCORE_key_known
{
	where{
		/Adobe_AGM_Core_Id known
	}{
		false
	}ifelse
}ndf
/flushinput
{
	save
	2 dict begin
	/CompareBuffer 3 -1 roll def
	/readbuffer 256 string def
	mark
	{
	currentfile readbuffer{readline}stopped
		{cleartomark mark}
		{
		not
			{pop exit}
		if
		CompareBuffer eq
			{exit}
		if
		}ifelse
	}loop
	cleartomark
	end
	restore
}bdf
/getspotfunction
{
	AGMCORE_screen exch pop exch pop
	dup type/dicttype eq{
		dup/HalftoneType get 1 eq{
			/SpotFunction get
		}{
			dup/HalftoneType get 2 eq{
				/GraySpotFunction get
			}{
				pop
				{
					abs exch abs 2 copy add 1 gt{
						1 sub dup mul exch 1 sub dup mul add 1 sub
					}{
						dup mul exch dup mul add 1 exch sub
					}ifelse
				}bind
			}ifelse
		}ifelse
	}if
}def
/np
{newpath}bdf
/clp_npth
{clip np}def
/eoclp_npth
{eoclip np}def
/npth_clp
{np clip}def
/graphic_setup
{
	/AGMCORE_graphicsave save store
	concat
	0 setgray
	0 setlinecap
	0 setlinejoin
	1 setlinewidth
	[]0 setdash
	10 setmiterlimit
	np
	false setoverprint
	false setstrokeadjust
	//Adobe_AGM_Core/spot_alias gx
	/Adobe_AGM_Image where{
		pop
		Adobe_AGM_Image/spot_alias 2 copy known{
			gx
		}{
			pop pop
		}ifelse
	}if
	/sep_colorspace_dict null AGMCORE_gput
	100 dict begin
	/dictstackcount countdictstack def
	/showpage{}def
	mark
}def
/graphic_cleanup
{
	cleartomark
	dictstackcount 1 countdictstack 1 sub{end}for
	end
	AGMCORE_graphicsave restore
}def
/compose_error_msg
{
	grestoreall initgraphics	
	/Helvetica findfont 10 scalefont setfont
	/AGMCORE_deltaY 100 def
	/AGMCORE_deltaX 310 def
	clippath pathbbox np pop pop 36 add exch 36 add exch moveto
	0 AGMCORE_deltaY rlineto AGMCORE_deltaX 0 rlineto
	0 AGMCORE_deltaY neg rlineto AGMCORE_deltaX neg 0 rlineto closepath
	0 AGMCORE_&setgray
	gsave 1 AGMCORE_&setgray fill grestore 
	1 setlinewidth gsave stroke grestore
	currentpoint AGMCORE_deltaY 15 sub add exch 8 add exch moveto
	/AGMCORE_deltaY 12 def
	/AGMCORE_tmp 0 def
	AGMCORE_err_strings exch get
		{
		dup 32 eq
			{
			pop
			AGMCORE_str256 0 AGMCORE_tmp getinterval
			stringwidth pop currentpoint pop add AGMCORE_deltaX 28 add gt
				{
				currentpoint AGMCORE_deltaY sub exch pop
				clippath pathbbox pop pop pop 44 add exch moveto
				}if
			AGMCORE_str256 0 AGMCORE_tmp getinterval show( )show
			0 1 AGMCORE_str256 length 1 sub
				{
				AGMCORE_str256 exch 0 put
				}for
			/AGMCORE_tmp 0 def
			}{
				AGMCORE_str256 exch AGMCORE_tmp xpt
				/AGMCORE_tmp AGMCORE_tmp 1 add def
			}ifelse
		}forall
}bdf
/AGMCORE_CMYKDeviceNColorspaces[
	[/Separation/None/DeviceCMYK{0 0 0}]
	[/Separation(Black)/DeviceCMYK{0 0 0 4 -1 roll}bind]
	[/Separation(Yellow)/DeviceCMYK{0 0 3 -1 roll 0}bind]
	[/DeviceN[(Yellow)(Black)]/DeviceCMYK{0 0 4 2 roll}bind]
	[/Separation(Magenta)/DeviceCMYK{0 exch 0 0}bind]
	[/DeviceN[(Magenta)(Black)]/DeviceCMYK{0 3 1 roll 0 exch}bind]
	[/DeviceN[(Magenta)(Yellow)]/DeviceCMYK{0 3 1 roll 0}bind]
	[/DeviceN[(Magenta)(Yellow)(Black)]/DeviceCMYK{0 4 1 roll}bind]
	[/Separation(Cyan)/DeviceCMYK{0 0 0}]
	[/DeviceN[(Cyan)(Black)]/DeviceCMYK{0 0 3 -1 roll}bind]
	[/DeviceN[(Cyan)(Yellow)]/DeviceCMYK{0 exch 0}bind]
	[/DeviceN[(Cyan)(Yellow)(Black)]/DeviceCMYK{0 3 1 roll}bind]
	[/DeviceN[(Cyan)(Magenta)]/DeviceCMYK{0 0}]
	[/DeviceN[(Cyan)(Magenta)(Black)]/DeviceCMYK{0 exch}bind]
	[/DeviceN[(Cyan)(Magenta)(Yellow)]/DeviceCMYK{0}]
	[/DeviceCMYK]
]def
/ds{
	Adobe_AGM_Core begin
	/currentdistillerparams where
		{
		pop currentdistillerparams/CoreDistVersion get 5000 lt
			{<</DetectBlends false>>setdistillerparams}if
		}if	
	/AGMCORE_ps_version xdf
	/AGMCORE_ps_level xdf
	errordict/AGM_handleerror known not{
		errordict/AGM_handleerror errordict/handleerror get put
		errordict/handleerror{
			Adobe_AGM_Core begin
			$error/newerror get AGMCORE_cur_err null ne and{
				$error/newerror false put
				AGMCORE_cur_err compose_error_msg
			}if
			$error/newerror true put
			end
			errordict/AGM_handleerror get exec
			}bind put
		}if
	/AGMCORE_environ_ok 
		ps_level AGMCORE_ps_level ge
		ps_version AGMCORE_ps_version ge and 
		AGMCORE_ps_level -1 eq or
	def
	AGMCORE_environ_ok not
		{/AGMCORE_cur_err/AGMCORE_bad_environ def}if
	/AGMCORE_&setgray systemdict/setgray get def
	level2{
		/AGMCORE_&setcolor systemdict/setcolor get def
		/AGMCORE_&setcolorspace systemdict/setcolorspace get def
	}if
	/AGMCORE_currentbg currentblackgeneration def
	/AGMCORE_currentucr currentundercolorremoval def
	/AGMCORE_Default_flatness currentflat def
	/AGMCORE_distilling
		/product where{
			pop systemdict/setdistillerparams known product(Adobe PostScript Parser)ne and
		}{
			false
		}ifelse
	def
	/AGMCORE_GSTATE AGMCORE_key_known not{
		/AGMCORE_GSTATE 21 dict def
		/AGMCORE_tmpmatrix matrix def
		/AGMCORE_gstack 32 array def
		/AGMCORE_gstackptr 0 def
		/AGMCORE_gstacksaveptr 0 def
		/AGMCORE_gstackframekeys 14 def
		/AGMCORE_&gsave/gsave ldf
		/AGMCORE_&grestore/grestore ldf
		/AGMCORE_&grestoreall/grestoreall ldf
		/AGMCORE_&save/save ldf
		/AGMCORE_&setoverprint/setoverprint ldf
		/AGMCORE_gdictcopy{
			begin
			{def}forall
			end
		}def
		/AGMCORE_gput{
			AGMCORE_gstack AGMCORE_gstackptr get
			3 1 roll
			put
		}def
		/AGMCORE_gget{
			AGMCORE_gstack AGMCORE_gstackptr get
			exch
			get
		}def
		/gsave{
			AGMCORE_&gsave
			AGMCORE_gstack AGMCORE_gstackptr get
			AGMCORE_gstackptr 1 add
			dup 32 ge{limitcheck}if
			/AGMCORE_gstackptr exch store
			AGMCORE_gstack AGMCORE_gstackptr get
			AGMCORE_gdictcopy
		}def
		/grestore{
			AGMCORE_&grestore
			AGMCORE_gstackptr 1 sub
			dup AGMCORE_gstacksaveptr lt{1 add}if
			dup AGMCORE_gstack exch get dup/AGMCORE_currentoverprint known
				{/AGMCORE_currentoverprint get setoverprint}{pop}ifelse
			/AGMCORE_gstackptr exch store
		}def
		/grestoreall{
			AGMCORE_&grestoreall
			/AGMCORE_gstackptr AGMCORE_gstacksaveptr store 
		}def
		/save{
			AGMCORE_&save
			AGMCORE_gstack AGMCORE_gstackptr get
			AGMCORE_gstackptr 1 add
			dup 32 ge{limitcheck}if
			/AGMCORE_gstackptr exch store
			/AGMCORE_gstacksaveptr AGMCORE_gstackptr store
			AGMCORE_gstack AGMCORE_gstackptr get
			AGMCORE_gdictcopy
		}def
		/setoverprint{
			dup/AGMCORE_currentoverprint exch AGMCORE_gput AGMCORE_&setoverprint
		}def	
		0 1 AGMCORE_gstack length 1 sub{
				AGMCORE_gstack exch AGMCORE_gstackframekeys dict put
		}for
	}if
	level3/AGMCORE_&sysshfill AGMCORE_key_known not and
	{
		/AGMCORE_&sysshfill systemdict/shfill get def
		/AGMCORE_&sysmakepattern systemdict/makepattern get def
		/AGMCORE_&usrmakepattern/makepattern load def
	}if
	/currentcmykcolor[0 0 0 0]AGMCORE_gput
	/currentstrokeadjust false AGMCORE_gput
	/currentcolorspace[/DeviceGray]AGMCORE_gput
	/sep_tint 0 AGMCORE_gput
	/devicen_tints[0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0]AGMCORE_gput
	/sep_colorspace_dict null AGMCORE_gput
	/devicen_colorspace_dict null AGMCORE_gput
	/indexed_colorspace_dict null AGMCORE_gput
	/currentcolor_intent()AGMCORE_gput
	/customcolor_tint 1 AGMCORE_gput
	/absolute_colorimetric_crd null AGMCORE_gput
	/relative_colorimetric_crd null AGMCORE_gput
	/saturation_crd null AGMCORE_gput
	/perceptual_crd null AGMCORE_gput
	currentcolortransfer cvlit/AGMCore_gray_xfer xdf cvlit/AGMCore_b_xfer xdf
		 cvlit/AGMCore_g_xfer xdf cvlit/AGMCore_r_xfer xdf
	<<
	/MaxPatternItem currentsystemparams/MaxPatternCache get
	>>
	setuserparams
	end
}def
/ps
{
	/setcmykcolor where{
		pop
		Adobe_AGM_Core/AGMCORE_&setcmykcolor/setcmykcolor load put
	}if
	Adobe_AGM_Core begin
	/setcmykcolor
	{
		4 copy AGMCORE_cmykbuf astore/currentcmykcolor exch AGMCORE_gput
		1 sub 4 1 roll
		3{
			3 index add neg dup 0 lt{
				pop 0
			}if
			3 1 roll
		}repeat
		setrgbcolor pop
	}ndf
	/currentcmykcolor
	{
		/currentcmykcolor AGMCORE_gget aload pop
	}ndf
	/setoverprint
	{pop}ndf
	/currentoverprint
	{false}ndf
	/AGMCORE_cyan_plate 1 0 0 0 test_cmyk_color_plate def
	/AGMCORE_magenta_plate 0 1 0 0 test_cmyk_color_plate def
	/AGMCORE_yellow_plate 0 0 1 0 test_cmyk_color_plate def
	/AGMCORE_black_plate 0 0 0 1 test_cmyk_color_plate def
	/AGMCORE_plate_ndx 
		AGMCORE_cyan_plate{
			0
		}{
			AGMCORE_magenta_plate{
				1
			}{
				AGMCORE_yellow_plate{
					2
				}{
					AGMCORE_black_plate{
						3
					}{
						4
					}ifelse
				}ifelse
			}ifelse
		}ifelse
		def
	/AGMCORE_have_reported_unsupported_color_space false def
	/AGMCORE_report_unsupported_color_space
	{
		AGMCORE_have_reported_unsupported_color_space false eq
		{
			(Warning: Job contains content that cannot be separated with on-host methods. This content appears on the black plate, and knocks out all other plates.)==
			Adobe_AGM_Core/AGMCORE_have_reported_unsupported_color_space true ddf
		}if
	}def
	/AGMCORE_composite_job
		AGMCORE_cyan_plate AGMCORE_magenta_plate and AGMCORE_yellow_plate and AGMCORE_black_plate and def
	/AGMCORE_in_rip_sep
		/AGMCORE_in_rip_sep where{
			pop AGMCORE_in_rip_sep
		}{
			AGMCORE_distilling 
			{
				false
			}{
				userdict/Adobe_AGM_OnHost_Seps known{
					false
				}{
					level2{
						currentpagedevice/Separations 2 copy known{
							get
						}{
							pop pop false
						}ifelse
					}{
						false
					}ifelse
				}ifelse
			}ifelse
		}ifelse
	def
	/AGMCORE_producing_seps AGMCORE_composite_job not AGMCORE_in_rip_sep or def
	/AGMCORE_host_sep AGMCORE_producing_seps AGMCORE_in_rip_sep not and def
	/AGM_preserve_spots 
		/AGM_preserve_spots where{
			pop AGM_preserve_spots
		}{
			AGMCORE_distilling AGMCORE_producing_seps or
		}ifelse
	def
	/AGM_is_distiller_preserving_spotimages
	{
		currentdistillerparams/PreserveOverprintSettings known
		{
			currentdistillerparams/PreserveOverprintSettings get
				{
					currentdistillerparams/ColorConversionStrategy known
					{
						currentdistillerparams/ColorConversionStrategy get
						/sRGB ne
					}{
						true
					}ifelse
				}{
					false
				}ifelse
		}{
			false
		}ifelse
	}def
	/convert_spot_to_process where{pop}{
		/convert_spot_to_process
		{
			//Adobe_AGM_Core begin
			dup map_alias{
				/Name get exch pop
			}if
			dup dup(None)eq exch(All)eq or
				{
				pop false
				}{
				AGMCORE_host_sep
				{
					gsave
					1 0 0 0 setcmykcolor currentgray 1 exch sub
					0 1 0 0 setcmykcolor currentgray 1 exch sub
					0 0 1 0 setcmykcolor currentgray 1 exch sub
					0 0 0 1 setcmykcolor currentgray 1 exch sub
					add add add 0 eq
					{
						pop false
					}{
						false setoverprint
						current_spot_alias false set_spot_alias
						1 1 1 1 6 -1 roll findcmykcustomcolor 1 setcustomcolor
						set_spot_alias
						currentgray 1 ne
					}ifelse
					grestore
				}{
					AGMCORE_distilling
					{
						pop AGM_is_distiller_preserving_spotimages not
					}{
						//Adobe_AGM_Core/AGMCORE_name xddf
						false
						//Adobe_AGM_Core/AGMCORE_pattern_paint_type get 0 eq
						AGMUTIL_cpd/OverrideSeparations known and
						{
							AGMUTIL_cpd/OverrideSeparations get
							{
								/HqnSpots/ProcSet resourcestatus
								{
									pop pop pop true
								}if
							}if
						}if					
						{
							AGMCORE_name/HqnSpots/ProcSet findresource/TestSpot gx not
						}{
							gsave
							[/Separation AGMCORE_name/DeviceGray{}]AGMCORE_&setcolorspace
							false
							AGMUTIL_cpd/SeparationColorNames 2 copy known
							{
								get
								{AGMCORE_name eq or}forall
								not
							}{
								pop pop pop true
							}ifelse
							grestore
						}ifelse
					}ifelse
				}ifelse
			}ifelse
			end
		}def
	}ifelse
	/convert_to_process where{pop}{
		/convert_to_process
		{
			dup length 0 eq
				{
				pop false
				}{
				AGMCORE_host_sep
				{
				dup true exch
					{
					dup(Cyan)eq exch
					dup(Magenta)eq 3 -1 roll or exch
					dup(Yellow)eq 3 -1 roll or exch
					dup(Black)eq 3 -1 roll or
						{pop}
						{convert_spot_to_process and}ifelse
					}
				forall
					{
					true exch
						{
						dup(Cyan)eq exch
						dup(Magenta)eq 3 -1 roll or exch
						dup(Yellow)eq 3 -1 roll or exch
						(Black)eq or and
						}forall
						not
					}{pop false}ifelse
				}{
				false exch
					{
					/PhotoshopDuotoneList where{pop false}{true}ifelse
						{
						dup(Cyan)eq exch
						dup(Magenta)eq 3 -1 roll or exch
						dup(Yellow)eq 3 -1 roll or exch
						dup(Black)eq 3 -1 roll or
						{pop}
						{convert_spot_to_process or}ifelse
						}
						{
						convert_spot_to_process or
						}
					ifelse
					}
				forall
				}ifelse
			}ifelse
		}def
	}ifelse	
	/AGMCORE_avoid_L2_sep_space 
		version cvr 2012 lt 
		level2 and 
		AGMCORE_producing_seps not and
	def
	/AGMCORE_is_cmyk_sep
		AGMCORE_cyan_plate AGMCORE_magenta_plate or AGMCORE_yellow_plate or AGMCORE_black_plate or
	def
	/AGM_avoid_0_cmyk where{
		pop AGM_avoid_0_cmyk
	}{
		AGM_preserve_spots 
		userdict/Adobe_AGM_OnHost_Seps known 
		userdict/Adobe_AGM_InRip_Seps known or
		not and
	}ifelse
	{
		/setcmykcolor[
			{
				4 copy add add add 0 eq currentoverprint and{
					pop 0.0005
				}if
			}/exec cvx
			/AGMCORE_&setcmykcolor load dup type/operatortype ne{
				/exec cvx
			}if
		]cvx def
	}if
	/AGMCORE_IsSeparationAProcessColor
		{
		dup(Cyan)eq exch dup(Magenta)eq exch dup(Yellow)eq exch(Black)eq or or or
		}def
	AGMCORE_host_sep{
		/setcolortransfer
		{
			AGMCORE_cyan_plate{
				pop pop pop
			}{
			 	AGMCORE_magenta_plate{
			 		4 3 roll pop pop pop
			 	}{
			 		AGMCORE_yellow_plate{
			 			4 2 roll pop pop pop
			 		}{
			 			4 1 roll pop pop pop
			 		}ifelse
			 	}ifelse
			}ifelse
			settransfer 
		}	
		def
		/AGMCORE_get_ink_data
			AGMCORE_cyan_plate{
				{pop pop pop}
			}{
			 	AGMCORE_magenta_plate{
			 		{4 3 roll pop pop pop}
			 	}{
			 		AGMCORE_yellow_plate{
			 			{4 2 roll pop pop pop}
			 		}{
			 			{4 1 roll pop pop pop}
			 		}ifelse
			 	}ifelse
			}ifelse
		def
		/AGMCORE_RemoveProcessColorNames
			{
			1 dict begin
			/filtername
				{
				dup/Cyan eq 1 index(Cyan)eq or
					{pop(_cyan_)}if
				dup/Magenta eq 1 index(Magenta)eq or
					{pop(_magenta_)}if
				dup/Yellow eq 1 index(Yellow)eq or
					{pop(_yellow_)}if
				dup/Black eq 1 index(Black)eq or
					{pop(_black_)}if
				}def
			dup type/arraytype eq
				{[exch{filtername}forall]}
				{filtername}ifelse
			end
			}def
		level3{
			/AGMCORE_IsCurrentColor
				{
				dup AGMCORE_IsSeparationAProcessColor
					{
					AGMCORE_plate_ndx 0 eq
						{dup(Cyan)eq exch/Cyan eq or}if
					AGMCORE_plate_ndx 1 eq
						{dup(Magenta)eq exch/Magenta eq or}if
					AGMCORE_plate_ndx 2 eq
						{dup(Yellow)eq exch/Yellow eq or}if
					AGMCORE_plate_ndx 3 eq
						{dup(Black)eq exch/Black eq or}if
					AGMCORE_plate_ndx 4 eq
						{pop false}if
					}{
					gsave
					false setoverprint
					current_spot_alias false set_spot_alias
					1 1 1 1 6 -1 roll findcmykcustomcolor 1 setcustomcolor
					set_spot_alias
					currentgray 1 ne
					grestore
					}ifelse
				}def
			/AGMCORE_filter_functiondatasource
				{	
				5 dict begin
				/data_in xdf
				data_in type/stringtype eq
					{
					/ncomp xdf
					/comp xdf
					/string_out data_in length ncomp idiv string def
					0 ncomp data_in length 1 sub
						{
						string_out exch dup ncomp idiv exch data_in exch ncomp getinterval comp get 255 exch sub put
						}for
					string_out
					}{
					string/string_in xdf
					/string_out 1 string def
					/component xdf
					[
					data_in string_in/readstring cvx
						[component/get cvx 255/exch cvx/sub cvx string_out/exch cvx 0/exch cvx/put cvx string_out]cvx
						[/pop cvx()]cvx/ifelse cvx
					]cvx/ReusableStreamDecode filter
				}ifelse
				end
				}def
			/AGMCORE_separateShadingFunction
				{
				2 dict begin
				/paint? xdf
				/channel xdf
				dup type/dicttype eq
					{
					begin
					FunctionType 0 eq
						{
						/DataSource channel Range length 2 idiv DataSource AGMCORE_filter_functiondatasource def
						currentdict/Decode known
							{/Decode Decode channel 2 mul 2 getinterval def}if
						paint? not
							{/Decode[1 1]def}if
						}if
					FunctionType 2 eq
						{
						paint?
							{
							/C0[C0 channel get 1 exch sub]def
							/C1[C1 channel get 1 exch sub]def
							}{
							/C0[1]def
							/C1[1]def
							}ifelse			
						}if
					FunctionType 3 eq
						{
						/Functions[Functions{channel paint? AGMCORE_separateShadingFunction}forall]def			
						}if
					currentdict/Range known
						{/Range[0 1]def}if
					currentdict
					end}{
					channel get 0 paint? AGMCORE_separateShadingFunction
					}ifelse
				end
				}def
			/AGMCORE_separateShading
				{
				3 -1 roll begin
				currentdict/Function known
					{
					currentdict/Background known
						{[1 index{Background 3 index get 1 exch sub}{1}ifelse]/Background xdf}if
					Function 3 1 roll AGMCORE_separateShadingFunction/Function xdf
					/ColorSpace[/DeviceGray]def
					}{
					ColorSpace dup type/arraytype eq{0 get}if/DeviceCMYK eq
						{
						/ColorSpace[/DeviceN[/_cyan_/_magenta_/_yellow_/_black_]/DeviceCMYK{}]def
						}{
						ColorSpace dup 1 get AGMCORE_RemoveProcessColorNames 1 exch put
						}ifelse
					ColorSpace 0 get/Separation eq
						{
							{
								[1/exch cvx/sub cvx]cvx
							}{
								[/pop cvx 1]cvx
							}ifelse
							ColorSpace 3 3 -1 roll put
							pop
						}{
							{
								[exch ColorSpace 1 get length 1 sub exch sub/index cvx 1/exch cvx/sub cvx ColorSpace 1 get length 1 add 1/roll cvx ColorSpace 1 get length{/pop cvx}repeat]cvx
							}{
								pop[ColorSpace 1 get length{/pop cvx}repeat cvx 1]cvx
							}ifelse
							ColorSpace 3 3 -1 roll bind put
						}ifelse
					ColorSpace 2/DeviceGray put																		
					}ifelse
				end
				}def
			/AGMCORE_separateShadingDict
				{
				dup/ColorSpace get
				dup type/arraytype ne
					{[exch]}if
				dup 0 get/DeviceCMYK eq
					{
					exch begin 
					currentdict
					AGMCORE_cyan_plate
						{0 true}if
					AGMCORE_magenta_plate
						{1 true}if
					AGMCORE_yellow_plate
						{2 true}if
					AGMCORE_black_plate
						{3 true}if
					AGMCORE_plate_ndx 4 eq
						{0 false}if		
					dup not currentoverprint and
						{/AGMCORE_ignoreshade true def}if
					AGMCORE_separateShading
					currentdict
					end exch
					}if
				dup 0 get/Separation eq
					{
					exch begin
					ColorSpace 1 get dup/None ne exch/All ne and
						{
						ColorSpace 1 get AGMCORE_IsCurrentColor AGMCORE_plate_ndx 4 lt and ColorSpace 1 get AGMCORE_IsSeparationAProcessColor not and
							{
							ColorSpace 2 get dup type/arraytype eq{0 get}if/DeviceCMYK eq 
								{
								/ColorSpace
									[
									/Separation
									ColorSpace 1 get
									/DeviceGray
										[
										ColorSpace 3 get/exec cvx
										4 AGMCORE_plate_ndx sub -1/roll cvx
										4 1/roll cvx
										3[/pop cvx]cvx/repeat cvx
										1/exch cvx/sub cvx
										]cvx									
									]def
								}{
								AGMCORE_report_unsupported_color_space
								AGMCORE_black_plate not
									{
									currentdict 0 false AGMCORE_separateShading
									}if
								}ifelse
							}{
							currentdict ColorSpace 1 get AGMCORE_IsCurrentColor
							0 exch 
							dup not currentoverprint and
								{/AGMCORE_ignoreshade true def}if
							AGMCORE_separateShading
							}ifelse	
						}if			
					currentdict
					end exch
					}if
				dup 0 get/DeviceN eq
					{
					exch begin
					ColorSpace 1 get convert_to_process
						{
						ColorSpace 2 get dup type/arraytype eq{0 get}if/DeviceCMYK eq 
							{
							/ColorSpace
								[
								/DeviceN
								ColorSpace 1 get
								/DeviceGray
									[
									ColorSpace 3 get/exec cvx
									4 AGMCORE_plate_ndx sub -1/roll cvx
									4 1/roll cvx
									3[/pop cvx]cvx/repeat cvx
									1/exch cvx/sub cvx
									]cvx									
								]def
							}{
							AGMCORE_report_unsupported_color_space
							AGMCORE_black_plate not
								{
								currentdict 0 false AGMCORE_separateShading
								/ColorSpace[/DeviceGray]def
								}if
							}ifelse
						}{
						currentdict
						false -1 ColorSpace 1 get
							{
							AGMCORE_IsCurrentColor
								{
								1 add
								exch pop true exch exit
								}if
							1 add
							}forall
						exch 
						dup not currentoverprint and
							{/AGMCORE_ignoreshade true def}if
						AGMCORE_separateShading
						}ifelse
					currentdict
					end exch
					}if
				dup 0 get dup/DeviceCMYK eq exch dup/Separation eq exch/DeviceN eq or or not
					{
					exch begin
					ColorSpace dup type/arraytype eq
						{0 get}if
					/DeviceGray ne
						{
						AGMCORE_report_unsupported_color_space
						AGMCORE_black_plate not
							{
							ColorSpace 0 get/CIEBasedA eq
								{
								/ColorSpace[/Separation/_ciebaseda_/DeviceGray{}]def
								}if
							ColorSpace 0 get dup/CIEBasedABC eq exch dup/CIEBasedDEF eq exch/DeviceRGB eq or or
								{
								/ColorSpace[/DeviceN[/_red_/_green_/_blue_]/DeviceRGB{}]def
								}if
							ColorSpace 0 get/CIEBasedDEFG eq
								{
								/ColorSpace[/DeviceN[/_cyan_/_magenta_/_yellow_/_black_]/DeviceCMYK{}]def
								}if
							currentdict 0 false AGMCORE_separateShading
							}if
						}if
					currentdict
					end exch
					}if
				pop
				dup/AGMCORE_ignoreshade known
					{
					begin
					/ColorSpace[/Separation(None)/DeviceGray{}]def
					currentdict end
					}if
				}def
			/shfill
				{
				AGMCORE_separateShadingDict 
				dup/AGMCORE_ignoreshade known
					{pop}
					{AGMCORE_&sysshfill}ifelse
				}def
			/makepattern
				{
				exch
				dup/PatternType get 2 eq
					{
					clonedict
					begin
					/Shading Shading AGMCORE_separateShadingDict def
					Shading/AGMCORE_ignoreshade known
					currentdict end exch
					{pop<</PatternType 1/PaintProc{pop}/BBox[0 0 1 1]/XStep 1/YStep 1/PaintType 1/TilingType 3>>}if
					exch AGMCORE_&sysmakepattern
					}{
					exch AGMCORE_&usrmakepattern
					}ifelse
				}def
		}if
	}if
	AGMCORE_in_rip_sep{
		/setcustomcolor
		{
			exch aload pop
			dup 7 1 roll inRip_spot_has_ink not	{
				4{4 index mul 4 1 roll}
				repeat
				/DeviceCMYK setcolorspace
				6 -2 roll pop pop
			}{
				//Adobe_AGM_Core begin
					/AGMCORE_k xdf/AGMCORE_y xdf/AGMCORE_m xdf/AGMCORE_c xdf
				end
				[/Separation 4 -1 roll/DeviceCMYK
				{dup AGMCORE_c mul exch dup AGMCORE_m mul exch dup AGMCORE_y mul exch AGMCORE_k mul}
				]
				setcolorspace
			}ifelse
			setcolor
		}ndf
		/setseparationgray
		{
			[/Separation(All)/DeviceGray{}]setcolorspace_opt
			1 exch sub setcolor
		}ndf
	}{
		/setseparationgray
		{
			AGMCORE_&setgray
		}ndf
	}ifelse
	/findcmykcustomcolor
	{
		5 makereadonlyarray
	}ndf
	/setcustomcolor
	{
		exch aload pop pop
		4{4 index mul 4 1 roll}repeat
		setcmykcolor pop
	}ndf
	/has_color
		/colorimage where{
			AGMCORE_producing_seps{
				pop true
			}{
				systemdict eq
			}ifelse
		}{
			false
		}ifelse
	def
	/map_index
	{
		1 index mul exch getinterval{255 div}forall
	}bdf
	/map_indexed_devn
	{
		Lookup Names length 3 -1 roll cvi map_index
	}bdf
	/n_color_components
	{
		base_colorspace_type
		dup/DeviceGray eq{
			pop 1
		}{
			/DeviceCMYK eq{
				4
			}{
				3
			}ifelse
		}ifelse
	}bdf
	level2{
		/mo/moveto ldf
		/li/lineto ldf
		/cv/curveto ldf
		/knockout_unitsq
		{
			1 setgray
			0 0 1 1 rectfill
		}def
		level2/setcolorspace AGMCORE_key_known not and{
			/AGMCORE_&&&setcolorspace/setcolorspace ldf
			/AGMCORE_ReplaceMappedColor
			{
				dup type dup/arraytype eq exch/packedarraytype eq or
				{
					/AGMCORE_SpotAliasAry2 where{
						begin
						dup 0 get dup/Separation eq
						{
							pop
							dup length array copy
							dup dup 1 get
							current_spot_alias
							{
								dup map_alias
								{
									false set_spot_alias
									dup 1 exch setsepcolorspace
									true set_spot_alias
									begin
									/sep_colorspace_dict currentdict AGMCORE_gput
									pop pop	pop
									[
										/Separation Name 
										CSA map_csa
										MappedCSA 
										/sep_colorspace_proc load
									]
									dup Name
									end
								}if
							}if
							map_reserved_ink_name 1 xpt
						}{
							/DeviceN eq 
							{
								dup length array copy
								dup dup 1 get[
									exch{
										current_spot_alias{
											dup map_alias{
												/Name get exch pop
											}if
										}if
										map_reserved_ink_name
									}forall 
								]1 xpt
							}if
						}ifelse
						end
					}if
				}if
			}def
			/setcolorspace
			{
				dup type dup/arraytype eq exch/packedarraytype eq or
				{
					dup 0 get/Indexed eq
					{
						AGMCORE_distilling
						{
							/PhotoshopDuotoneList where
							{
								pop false
							}{
								true
							}ifelse
						}{
							true
						}ifelse
						{
							aload pop 3 -1 roll
							AGMCORE_ReplaceMappedColor
							3 1 roll 4 array astore
						}if
					}{
						AGMCORE_ReplaceMappedColor
					}ifelse
				}if
				DeviceN_PS2_inRip_seps{AGMCORE_&&&setcolorspace}if
			}def
		}if	
	}{
		/adj
		{
			currentstrokeadjust{
				transform
				0.25 sub round 0.25 add exch
				0.25 sub round 0.25 add exch
				itransform
			}if
		}def
		/mo{
			adj moveto
		}def
		/li{
			adj lineto
		}def
		/cv{
			6 2 roll adj
			6 2 roll adj
			6 2 roll adj curveto
		}def
		/knockout_unitsq
		{
			1 setgray
			8 8 1[8 0 0 8 0 0]{<ffffffffffffffff>}image
		}def
		/currentstrokeadjust{
			/currentstrokeadjust AGMCORE_gget
		}def
		/setstrokeadjust{
			/currentstrokeadjust exch AGMCORE_gput
		}def
		/setcolorspace
		{
			/currentcolorspace exch AGMCORE_gput
		}def
		/currentcolorspace
		{
			/currentcolorspace AGMCORE_gget
		}def
		/setcolor_devicecolor
		{
			base_colorspace_type
			dup/DeviceGray eq{
				pop setgray
			}{
				/DeviceCMYK eq{
					setcmykcolor
				}{
					setrgbcolor
				}ifelse
			}ifelse
		}def
		/setcolor
		{
			currentcolorspace 0 get
			dup/DeviceGray ne{
				dup/DeviceCMYK ne{
					dup/DeviceRGB ne{
						dup/Separation eq{
							pop
							currentcolorspace 3 gx
							currentcolorspace 2 get
						}{
							dup/Indexed eq{
								pop
								currentcolorspace 3 get dup type/stringtype eq{
									currentcolorspace 1 get n_color_components
									3 -1 roll map_index
								}{
									exec
								}ifelse
								currentcolorspace 1 get
							}{
								/AGMCORE_cur_err/AGMCORE_invalid_color_space def
								AGMCORE_invalid_color_space
							}ifelse
						}ifelse
					}if
				}if
			}if
			setcolor_devicecolor
		}def
	}ifelse
	/sop/setoverprint ldf
	/lw/setlinewidth ldf
	/lc/setlinecap ldf
	/lj/setlinejoin ldf
	/ml/setmiterlimit ldf
	/dsh/setdash ldf
	/sadj/setstrokeadjust ldf
	/gry/setgray ldf
	/rgb/setrgbcolor ldf
	/cmyk[
		/currentcolorspace[/DeviceCMYK]/AGMCORE_gput cvx
		/setcmykcolor load dup type/operatortype ne{/exec cvx}if
	]cvx bdf
	level3 AGMCORE_host_sep not and{
		/nzopmsc{
			6 dict begin
			/kk exch def
			/yy exch def
			/mm exch def
			/cc exch def
			/sum 0 def
			cc 0 ne{/sum sum 2#1000 or def cc}if
			mm 0 ne{/sum sum 2#0100 or def mm}if
			yy 0 ne{/sum sum 2#0010 or def yy}if
			kk 0 ne{/sum sum 2#0001 or def kk}if
			AGMCORE_CMYKDeviceNColorspaces sum get setcolorspace
			sum 0 eq{0}if
			end
			setcolor
		}bdf
	}{
		/nzopmsc/cmyk ldf
	}ifelse
	/sep/setsepcolor ldf
	/devn/setdevicencolor ldf
	/idx/setindexedcolor ldf
	/colr/setcolor ldf
	/csacrd/set_csa_crd ldf
	/sepcs/setsepcolorspace ldf
	/devncs/setdevicencolorspace ldf
	/idxcs/setindexedcolorspace ldf
	/cp/closepath ldf
	/clp/clp_npth ldf
	/eclp/eoclp_npth ldf
	/f/fill ldf
	/ef/eofill ldf
	/@/stroke ldf
	/nclp/npth_clp ldf
	/gset/graphic_setup ldf
	/gcln/graphic_cleanup ldf
	/ct/concat ldf
	/cf/currentfile ldf
	/fl/filter ldf
	/rs/readstring ldf
	/AGMCORE_def_ht currenthalftone def
	/clonedict Adobe_AGM_Utils begin/clonedict load end def
	/clonearray Adobe_AGM_Utils begin/clonearray load end def
	currentdict{
		dup xcheck 1 index type dup/arraytype eq exch/packedarraytype eq or and{
			bind
		}if
		def
	}forall
	/getrampcolor
	{
		/indx exch def
		0 1 NumComp 1 sub
		{
			dup
			Samples exch get
			dup type/stringtype eq{indx get}if
			exch
			Scaling exch get aload pop
			3 1 roll
			mul add
		}for
		ColorSpaceFamily/Separation eq 
		{sep}
		{
			ColorSpaceFamily/DeviceN eq
			{devn}{setcolor}ifelse
		}ifelse
	}bdf
	/sssetbackground{
		aload pop 
		ColorSpaceFamily/Separation eq 
		{sep}
		{
			ColorSpaceFamily/DeviceN eq
			{devn}{setcolor}ifelse
		}ifelse	
	}bdf
	/RadialShade
	{
		40 dict begin
		/ColorSpaceFamily xdf
		/background xdf
		/ext1 xdf
		/ext0 xdf
		/BBox xdf
		/r2 xdf
		/c2y xdf
		/c2x xdf
		/r1 xdf
		/c1y xdf
		/c1x xdf
		/rampdict xdf
		/setinkoverprint where{pop/setinkoverprint{pop}def}if
		gsave
		BBox length 0 gt
		{
			np
			BBox 0 get BBox 1 get moveto
			BBox 2 get BBox 0 get sub 0 rlineto
			0 BBox 3 get BBox 1 get sub rlineto
			BBox 2 get BBox 0 get sub neg 0 rlineto
			closepath
			clip
			np
		}if
		c1x c2x eq
		{
			c1y c2y lt{/theta 90 def}{/theta 270 def}ifelse
		}{
			/slope c2y c1y sub c2x c1x sub div def
			/theta slope 1 atan def
			c2x c1x lt c2y c1y ge and{/theta theta 180 sub def}if
			c2x c1x lt c2y c1y lt and{/theta theta 180 add def}if
		}ifelse
		gsave
		clippath
		c1x c1y translate
		theta rotate
		-90 rotate
		{pathbbox}stopped
		{0 0 0 0}if
		/yMax xdf
		/xMax xdf
		/yMin xdf
		/xMin xdf
		grestore
		xMax xMin eq yMax yMin eq or
		{
			grestore
			end
		}{
			/max{2 copy gt{pop}{exch pop}ifelse}bdf
			/min{2 copy lt{pop}{exch pop}ifelse}bdf
			rampdict begin
			40 dict begin
			background length 0 gt{background sssetbackground gsave clippath fill grestore}if
			gsave
			c1x c1y translate
			theta rotate
			-90 rotate
			/c2y c1x c2x sub dup mul c1y c2y sub dup mul add sqrt def
			/c1y 0 def
			/c1x 0 def
			/c2x 0 def
			ext0
			{
				0 getrampcolor
				c2y r2 add r1 sub 0.0001 lt
				{
					c1x c1y r1 360 0 arcn
					pathbbox
					/aymax exch def
					/axmax exch def
					/aymin exch def
					/axmin exch def
					/bxMin xMin axmin min def
					/byMin yMin aymin min def
					/bxMax xMax axmax max def
					/byMax yMax aymax max def
					bxMin byMin moveto
					bxMax byMin lineto
					bxMax byMax lineto
					bxMin byMax lineto
					bxMin byMin lineto
					eofill
				}{
					c2y r1 add r2 le
					{
						c1x c1y r1 0 360 arc
						fill
					}
					{
						c2x c2y r2 0 360 arc fill
						r1 r2 eq
						{
							/p1x r1 neg def
							/p1y c1y def
							/p2x r1 def
							/p2y c1y def
							p1x p1y moveto p2x p2y lineto p2x yMin lineto p1x yMin lineto
							fill
						}{
							/AA r2 r1 sub c2y div def
							AA -1 eq
							{/theta 89.99 def}
							{/theta AA 1 AA dup mul sub sqrt div 1 atan def}
							ifelse
							/SS1 90 theta add dup sin exch cos div def
							/p1x r1 SS1 SS1 mul SS1 SS1 mul 1 add div sqrt mul neg def
							/p1y p1x SS1 div neg def
							/SS2 90 theta sub dup sin exch cos div def
							/p2x r1 SS2 SS2 mul SS2 SS2 mul 1 add div sqrt mul def
							/p2y p2x SS2 div neg def
							r1 r2 gt
							{
								/L1maxX p1x yMin p1y sub SS1 div add def
								/L2maxX p2x yMin p2y sub SS2 div add def
							}{
								/L1maxX 0 def
								/L2maxX 0 def
							}ifelse
							p1x p1y moveto p2x p2y lineto L2maxX L2maxX p2x sub SS2 mul p2y add lineto
							L1maxX L1maxX p1x sub SS1 mul p1y add lineto
							fill
						}ifelse
					}ifelse
				}ifelse
			}if
		c1x c2x sub dup mul
		c1y c2y sub dup mul
		add 0.5 exp
		0 dtransform
		dup mul exch dup mul add 0.5 exp 72 div
		0 72 matrix defaultmatrix dtransform dup mul exch dup mul add sqrt
		72 0 matrix defaultmatrix dtransform dup mul exch dup mul add sqrt
		1 index 1 index lt{exch}if pop
		/hires xdf
		hires mul
		/numpix xdf
		/numsteps NumSamples def
		/rampIndxInc 1 def
		/subsampling false def
		numpix 0 ne
		{
			NumSamples numpix div 0.5 gt
			{
				/numsteps numpix 2 div round cvi dup 1 le{pop 2}if def
				/rampIndxInc NumSamples 1 sub numsteps div def
				/subsampling true def
			}if
		}if
		/xInc c2x c1x sub numsteps div def
		/yInc c2y c1y sub numsteps div def
		/rInc r2 r1 sub numsteps div def
		/cx c1x def
		/cy c1y def
		/radius r1 def
		np
		xInc 0 eq yInc 0 eq rInc 0 eq and and
		{
			0 getrampcolor
			cx cy radius 0 360 arc
			stroke
			NumSamples 1 sub getrampcolor
			cx cy radius 72 hires div add 0 360 arc
			0 setlinewidth
			stroke
		}{
			0
			numsteps
			{
				dup
				subsampling{round cvi}if
				getrampcolor
				cx cy radius 0 360 arc
				/cx cx xInc add def
				/cy cy yInc add def
				/radius radius rInc add def
				cx cy radius 360 0 arcn
				eofill
				rampIndxInc add
			}repeat
			pop
		}ifelse
		ext1
		{
			c2y r2 add r1 lt
			{
				c2x c2y r2 0 360 arc
				fill
			}{
				c2y r1 add r2 sub 0.0001 le
				{
					c2x c2y r2 360 0 arcn
					pathbbox
					/aymax exch def
					/axmax exch def
					/aymin exch def
					/axmin exch def
					/bxMin xMin axmin min def
					/byMin yMin aymin min def
					/bxMax xMax axmax max def
					/byMax yMax aymax max def
					bxMin byMin moveto
					bxMax byMin lineto
					bxMax byMax lineto
					bxMin byMax lineto
					bxMin byMin lineto
					eofill
				}{
					c2x c2y r2 0 360 arc fill
					r1 r2 eq
					{
						/p1x r2 neg def
						/p1y c2y def
						/p2x r2 def
						/p2y c2y def
						p1x p1y moveto p2x p2y lineto p2x yMax lineto p1x yMax lineto
						fill
					}{
						/AA r2 r1 sub c2y div def
						AA -1 eq
						{/theta 89.99 def}
						{/theta AA 1 AA dup mul sub sqrt div 1 atan def}
						ifelse
						/SS1 90 theta add dup sin exch cos div def
						/p1x r2 SS1 SS1 mul SS1 SS1 mul 1 add div sqrt mul neg def
						/p1y c2y p1x SS1 div sub def
						/SS2 90 theta sub dup sin exch cos div def
						/p2x r2 SS2 SS2 mul SS2 SS2 mul 1 add div sqrt mul def
						/p2y c2y p2x SS2 div sub def
						r1 r2 lt
						{
							/L1maxX p1x yMax p1y sub SS1 div add def
							/L2maxX p2x yMax p2y sub SS2 div add def
						}{
							/L1maxX 0 def
							/L2maxX 0 def
						}ifelse
						p1x p1y moveto p2x p2y lineto L2maxX L2maxX p2x sub SS2 mul p2y add lineto
						L1maxX L1maxX p1x sub SS1 mul p1y add lineto
						fill
					}ifelse
				}ifelse
			}ifelse
		}if
		grestore
		grestore
		end
		end
		end
		}ifelse
	}bdf
	/GenStrips
	{
		40 dict begin
		/ColorSpaceFamily xdf
		/background xdf
		/ext1 xdf
		/ext0 xdf
		/BBox xdf
		/y2 xdf
		/x2 xdf
		/y1 xdf
		/x1 xdf
		/rampdict xdf
		/setinkoverprint where{pop/setinkoverprint{pop}def}if
		gsave
		BBox length 0 gt
		{
			np
			BBox 0 get BBox 1 get moveto
			BBox 2 get BBox 0 get sub 0 rlineto
			0 BBox 3 get BBox 1 get sub rlineto
			BBox 2 get BBox 0 get sub neg 0 rlineto
			closepath
			clip
			np
		}if
		x1 x2 eq
		{
			y1 y2 lt{/theta 90 def}{/theta 270 def}ifelse
		}{
			/slope y2 y1 sub x2 x1 sub div def
			/theta slope 1 atan def
			x2 x1 lt y2 y1 ge and{/theta theta 180 sub def}if
			x2 x1 lt y2 y1 lt and{/theta theta 180 add def}if
		}
		ifelse
		gsave
		clippath
		x1 y1 translate
		theta rotate
		{pathbbox}stopped
		{0 0 0 0}if
		/yMax exch def
		/xMax exch def
		/yMin exch def
		/xMin exch def
		grestore
		xMax xMin eq yMax yMin eq or
		{
			grestore
			end
		}{
			rampdict begin
			20 dict begin
			background length 0 gt{background sssetbackground gsave clippath fill grestore}if
			gsave
			x1 y1 translate
			theta rotate
			/xStart 0 def
			/xEnd x2 x1 sub dup mul y2 y1 sub dup mul add 0.5 exp def
			/ySpan yMax yMin sub def
			/numsteps NumSamples def
			/rampIndxInc 1 def
			/subsampling false def
			xStart 0 transform
			xEnd 0 transform
			3 -1 roll
			sub dup mul
			3 1 roll
			sub dup mul
			add 0.5 exp 72 div
			0 72 matrix defaultmatrix dtransform dup mul exch dup mul add sqrt
			72 0 matrix defaultmatrix dtransform dup mul exch dup mul add sqrt
			1 index 1 index lt{exch}if pop
			mul
			/numpix xdf
			numpix 0 ne
			{
				NumSamples numpix div 0.5 gt
				{
					/numsteps numpix 2 div round cvi dup 1 le{pop 2}if def
					/rampIndxInc NumSamples 1 sub numsteps div def
					/subsampling true def
				}if
			}if
			ext0
			{
				0 getrampcolor
				xMin xStart lt
				{
					xMin yMin xMin neg ySpan rectfill
				}if
			}if
			/xInc xEnd xStart sub numsteps div def
			/x xStart def
			0
			numsteps
			{
				dup
				subsampling{round cvi}if
				getrampcolor
				x yMin xInc ySpan rectfill
				/x x xInc add def
				rampIndxInc add
			}repeat
			pop
			ext1{
				xMax xEnd gt
				{
					xEnd yMin xMax xEnd sub ySpan rectfill
				}if
			}if
			grestore
			grestore
			end
			end
			end
		}ifelse
	}bdf
}def
/pt
{
	end
}def
/dt{
}def
/pgsv{
	//Adobe_AGM_Core/AGMCORE_save save put
}def
/pgrs{
	//Adobe_AGM_Core/AGMCORE_save get restore
}def
systemdict/findcolorrendering known{
	/findcolorrendering systemdict/findcolorrendering get def
}if
systemdict/setcolorrendering known{
	/setcolorrendering systemdict/setcolorrendering get def
}if
/test_cmyk_color_plate
{
	gsave
	setcmykcolor currentgray 1 ne
	grestore
}def
/inRip_spot_has_ink
{
	dup//Adobe_AGM_Core/AGMCORE_name xddf
	convert_spot_to_process not
}def
/map255_to_range
{
	1 index sub
	3 -1 roll 255 div mul add
}def
/set_csa_crd
{
	/sep_colorspace_dict null AGMCORE_gput
	begin
		CSA get_csa_by_name setcolorspace_opt
		set_crd
	end
}
def
/map_csa
{
	currentdict/MappedCSA known{MappedCSA null ne}{false}ifelse
	{pop}{get_csa_by_name/MappedCSA xdf}ifelse
}def
/setsepcolor
{
	/sep_colorspace_dict AGMCORE_gget begin
		dup/sep_tint exch AGMCORE_gput
		TintProc
	end
}def
/setdevicencolor
{
	/devicen_colorspace_dict AGMCORE_gget begin
		Names length copy
		Names length 1 sub -1 0
		{
			/devicen_tints AGMCORE_gget 3 1 roll xpt
		}for
		TintProc
	end
}def
/sep_colorspace_proc
{
	/AGMCORE_tmp exch store
	/sep_colorspace_dict AGMCORE_gget begin
	currentdict/Components known{
		Components aload pop 
		TintMethod/Lab eq{
			2{AGMCORE_tmp mul NComponents 1 roll}repeat
			LMax sub AGMCORE_tmp mul LMax add NComponents 1 roll
		}{
			TintMethod/Subtractive eq{
				NComponents{
					AGMCORE_tmp mul NComponents 1 roll
				}repeat
			}{
				NComponents{
					1 sub AGMCORE_tmp mul 1 add NComponents 1 roll
				}repeat
			}ifelse
		}ifelse
	}{
		ColorLookup AGMCORE_tmp ColorLookup length 1 sub mul round cvi get
		aload pop
	}ifelse
	end
}def
/sep_colorspace_gray_proc
{
	/AGMCORE_tmp exch store
	/sep_colorspace_dict AGMCORE_gget begin
	GrayLookup AGMCORE_tmp GrayLookup length 1 sub mul round cvi get
	end
}def
/sep_proc_name
{
	dup 0 get 
	dup/DeviceRGB eq exch/DeviceCMYK eq or level2 not and has_color not and{
		pop[/DeviceGray]
		/sep_colorspace_gray_proc
	}{
		/sep_colorspace_proc
	}ifelse
}def
/setsepcolorspace
{
	current_spot_alias{
		dup begin
			Name map_alias{
				exch pop
			}if
		end
	}if
	dup/sep_colorspace_dict exch AGMCORE_gput
	begin
	CSA map_csa
	/AGMCORE_sep_special Name dup()eq exch(All)eq or store
	AGMCORE_avoid_L2_sep_space{
		[/Indexed MappedCSA sep_proc_name 255 exch 
			{255 div}/exec cvx 3 -1 roll[4 1 roll load/exec cvx]cvx 
		]setcolorspace_opt
		/TintProc{
			255 mul round cvi setcolor
		}bdf
	}{
		MappedCSA 0 get/DeviceCMYK eq 
		currentdict/Components known and 
		AGMCORE_sep_special not and{
			/TintProc[
				Components aload pop Name findcmykcustomcolor 
				/exch cvx/setcustomcolor cvx
			]cvx bdf
		}{
 			AGMCORE_host_sep Name(All)eq and{
 				/TintProc{
					1 exch sub setseparationgray 
				}bdf
 			}{
				AGMCORE_in_rip_sep MappedCSA 0 get/DeviceCMYK eq and 
				AGMCORE_host_sep or
				Name()eq and{
					/TintProc[
						MappedCSA sep_proc_name exch 0 get/DeviceCMYK eq{
							cvx/setcmykcolor cvx
						}{
							cvx/setgray cvx
						}ifelse
					]cvx bdf
				}{
					AGMCORE_producing_seps MappedCSA 0 get dup/DeviceCMYK eq exch/DeviceGray eq or and AGMCORE_sep_special not and{
	 					/TintProc[
							/dup cvx
							MappedCSA sep_proc_name cvx exch
							0 get/DeviceGray eq{
								1/exch cvx/sub cvx 0 0 0 4 -1/roll cvx
							}if
							/Name cvx/findcmykcustomcolor cvx/exch cvx
							AGMCORE_host_sep{
								AGMCORE_is_cmyk_sep
								/Name cvx 
								/AGMCORE_IsSeparationAProcessColor load/exec cvx
								/not cvx/and cvx 
							}{
								Name inRip_spot_has_ink not
							}ifelse
							[
		 						/pop cvx 1
							]cvx/if cvx
							/setcustomcolor cvx
						]cvx bdf
 					}{
						/TintProc{setcolor}bdf
						[/Separation Name MappedCSA sep_proc_name load]setcolorspace_opt
					}ifelse
				}ifelse
			}ifelse
		}ifelse
	}ifelse
	set_crd
	setsepcolor
	end
}def
/additive_blend
{
 	3 dict begin
 	/numarrays xdf
 	/numcolors xdf
 	0 1 numcolors 1 sub
 		{
 		/c1 xdf
 		1
 		0 1 numarrays 1 sub
 			{
			1 exch add/index cvx
 			c1/get cvx/mul cvx
 			}for
 		numarrays 1 add 1/roll cvx 
 		}for
 	numarrays[/pop cvx]cvx/repeat cvx
 	end
}def
/subtractive_blend
{
	3 dict begin
	/numarrays xdf
	/numcolors xdf
	0 1 numcolors 1 sub
		{
		/c1 xdf
		1 1
		0 1 numarrays 1 sub
			{
			1 3 3 -1 roll add/index cvx 
			c1/get cvx/sub cvx/mul cvx
			}for
		/sub cvx
		numarrays 1 add 1/roll cvx
		}for
	numarrays[/pop cvx]cvx/repeat cvx
	end
}def
/exec_tint_transform
{
	/TintProc[
		/TintTransform cvx/setcolor cvx
	]cvx bdf
	MappedCSA setcolorspace_opt
}bdf
/devn_makecustomcolor
{
	2 dict begin
	/names_index xdf
	/Names xdf
	1 1 1 1 Names names_index get findcmykcustomcolor
	/devicen_tints AGMCORE_gget names_index get setcustomcolor
	Names length{pop}repeat
	end
}bdf
/setdevicencolorspace
{
	dup/AliasedColorants known{false}{true}ifelse 
	current_spot_alias and{
		7 dict begin
		/names_index 0 def
		dup/names_len exch/Names get length def
		/new_names names_len array def
		/new_LookupTables names_len array def
		/alias_cnt 0 def
		dup/Names get
		{
			dup map_alias{
				exch pop
				dup/ColorLookup known{
					dup begin
					new_LookupTables names_index ColorLookup put
					end
				}{
					dup/Components known{
						dup begin
						new_LookupTables names_index Components put
						end
					}{
						dup begin
						new_LookupTables names_index[null null null null]put
						end
					}ifelse
				}ifelse
				new_names names_index 3 -1 roll/Name get put
				/alias_cnt alias_cnt 1 add def 
			}{
				/name xdf				
				new_names names_index name put
				dup/LookupTables known{
					dup begin
					new_LookupTables names_index LookupTables names_index get put
					end
				}{
					dup begin
					new_LookupTables names_index[null null null null]put
					end
				}ifelse
			}ifelse
			/names_index names_index 1 add def 
		}forall
		alias_cnt 0 gt{
			/AliasedColorants true def
			/lut_entry_len new_LookupTables 0 get dup length 256 ge{0 get length}{length}ifelse def
			0 1 names_len 1 sub{
				/names_index xdf
				new_LookupTables names_index get dup length 256 ge{0 get length}{length}ifelse lut_entry_len ne{
					/AliasedColorants false def
					exit
				}{
					new_LookupTables names_index get 0 get null eq{
						dup/Names get names_index get/name xdf
						name(Cyan)eq name(Magenta)eq name(Yellow)eq name(Black)eq
						or or or not{
							/AliasedColorants false def
							exit
						}if
					}if
				}ifelse
			}for
			lut_entry_len 1 eq{
				/AliasedColorants false def
			}if
			AliasedColorants{
				dup begin
				/Names new_names def
				/LookupTables new_LookupTables def
				/AliasedColorants true def
				/NComponents lut_entry_len def
				/TintMethod NComponents 4 eq{/Subtractive}{/Additive}ifelse def
				/MappedCSA TintMethod/Additive eq{/DeviceRGB}{/DeviceCMYK}ifelse def
				currentdict/TTTablesIdx known not{
					/TTTablesIdx -1 def
				}if
				end
			}if
		}if
		end
	}if
	dup/devicen_colorspace_dict exch AGMCORE_gput
	begin
	currentdict/AliasedColorants known{
		AliasedColorants
	}{
		false
	}ifelse
	dup not{
		CSA map_csa
	}if
	/TintTransform load type/nulltype eq or{
		/TintTransform[
			0 1 Names length 1 sub
				{
				/TTTablesIdx TTTablesIdx 1 add def
				dup LookupTables exch get dup 0 get null eq
					{
					1 index
					Names exch get
					dup(Cyan)eq
						{
						pop exch
						LookupTables length exch sub
						/index cvx
						0 0 0
						}
						{
						dup(Magenta)eq
							{
							pop exch
							LookupTables length exch sub
							/index cvx
							0/exch cvx 0 0
							}{
							(Yellow)eq
								{
								exch
								LookupTables length exch sub
								/index cvx
								0 0 3 -1/roll cvx 0
								}{
								exch
								LookupTables length exch sub
								/index cvx
								0 0 0 4 -1/roll cvx
								}ifelse
							}ifelse
						}ifelse
					5 -1/roll cvx/astore cvx
					}{
					dup length 1 sub
					LookupTables length 4 -1 roll sub 1 add
					/index cvx/mul cvx/round cvx/cvi cvx/get cvx
					}ifelse
					Names length TTTablesIdx add 1 add 1/roll cvx
				}for
			Names length[/pop cvx]cvx/repeat cvx
			NComponents Names length
 			TintMethod/Subtractive eq
 				{
 				subtractive_blend
 				}{
 				additive_blend
 				}ifelse
		]cvx bdf
	}if
	AGMCORE_host_sep{
		Names convert_to_process{
			exec_tint_transform
		}
		{	
			currentdict/AliasedColorants known{
				AliasedColorants not
			}{
				false
			}ifelse
			5 dict begin
			/AvoidAliasedColorants xdf
			/painted? false def
			/names_index 0 def
			/names_len Names length def
			AvoidAliasedColorants{
				/currentspotalias current_spot_alias def
				false set_spot_alias
			}if
			Names{
				AGMCORE_is_cmyk_sep{
					dup(Cyan)eq AGMCORE_cyan_plate and exch
					dup(Magenta)eq AGMCORE_magenta_plate and exch
					dup(Yellow)eq AGMCORE_yellow_plate and exch
					(Black)eq AGMCORE_black_plate and or or or{
						/devicen_colorspace_dict AGMCORE_gget/TintProc[
							Names names_index/devn_makecustomcolor cvx
						]cvx ddf
						/painted? true def
					}if
					painted?{exit}if
				}{
					0 0 0 0 5 -1 roll findcmykcustomcolor 1 setcustomcolor currentgray 0 eq{
					/devicen_colorspace_dict AGMCORE_gget/TintProc[
						Names names_index/devn_makecustomcolor cvx
					]cvx ddf
					/painted? true def
					exit
					}if
				}ifelse
				/names_index names_index 1 add def
			}forall
			AvoidAliasedColorants{
				currentspotalias set_spot_alias
			}if
			painted?{
				/devicen_colorspace_dict AGMCORE_gget/names_index names_index put
			}{
				/devicen_colorspace_dict AGMCORE_gget/TintProc[
					names_len[/pop cvx]cvx/repeat cvx 1/setseparationgray cvx
 					0 0 0 0/setcmykcolor cvx
				]cvx ddf
			}ifelse
			end
		}ifelse
	}
	{
		AGMCORE_in_rip_sep{
			Names convert_to_process not
		}{
			level3
		}ifelse
		{
			[/DeviceN Names MappedCSA/TintTransform load]setcolorspace_opt
			/TintProc level3 not AGMCORE_in_rip_sep and{
				[
					Names/length cvx[/pop cvx]cvx/repeat cvx
				]cvx bdf
			}{
				{setcolor}bdf
			}ifelse
		}{
			exec_tint_transform
		}ifelse
	}ifelse
	set_crd
	/AliasedColorants false def
	end
}def
/setindexedcolorspace
{
	dup/indexed_colorspace_dict exch AGMCORE_gput
	begin
		currentdict/CSDBase known{
			CSDBase/CSD get_res begin
			currentdict/Names known{
				currentdict devncs
			}{
				1 currentdict sepcs
			}ifelse
			AGMCORE_host_sep{
				4 dict begin
				/compCnt/Names where{pop Names length}{1}ifelse def
				/NewLookup HiVal 1 add string def
				0 1 HiVal{
					/tableIndex xdf
					Lookup dup type/stringtype eq{
						compCnt tableIndex map_index
					}{
						exec
					}ifelse
					/Names where{
						pop setdevicencolor
					}{
						setsepcolor
					}ifelse
					currentgray
					tableIndex exch
					255 mul cvi 
					NewLookup 3 1 roll put
				}for
				[/Indexed currentcolorspace HiVal NewLookup]setcolorspace_opt
				end
			}{
				level3
				{
					currentdict/Names known{
						[/Indexed[/DeviceN Names MappedCSA/TintTransform load]HiVal Lookup]setcolorspace_opt
					}{
						[/Indexed[/Separation Name MappedCSA sep_proc_name load]HiVal Lookup]setcolorspace_opt
					}ifelse
				}{
				[/Indexed MappedCSA HiVal
					[
					currentdict/Names known{
						Lookup dup type/stringtype eq
							{/exch cvx CSDBase/CSD get_res/Names get length dup/mul cvx exch/getinterval cvx{255 div}/forall cvx}
							{/exec cvx}ifelse
							/TintTransform load/exec cvx
					}{
						Lookup dup type/stringtype eq
							{/exch cvx/get cvx 255/div cvx}
							{/exec cvx}ifelse
							CSDBase/CSD get_res/MappedCSA get sep_proc_name exch pop/load cvx/exec cvx
					}ifelse
					]cvx
				]setcolorspace_opt
				}ifelse
			}ifelse
			end
			set_crd
		}
		{
			CSA map_csa
			AGMCORE_host_sep level2 not and{
				0 0 0 0 setcmykcolor
			}{
				[/Indexed MappedCSA 
				level2 not has_color not and{
					dup 0 get dup/DeviceRGB eq exch/DeviceCMYK eq or{
						pop[/DeviceGray]
					}if
					HiVal GrayLookup
				}{
					HiVal 
					currentdict/RangeArray known{
						{
							/indexed_colorspace_dict AGMCORE_gget begin
							Lookup exch 
							dup HiVal gt{
								pop HiVal
							}if
							NComponents mul NComponents getinterval{}forall
							NComponents 1 sub -1 0{
								RangeArray exch 2 mul 2 getinterval aload pop map255_to_range
								NComponents 1 roll
							}for
							end
						}bind
					}{
						Lookup
					}ifelse
				}ifelse
				]setcolorspace_opt
				set_crd
			}ifelse
		}ifelse
	end
}def
/setindexedcolor
{
	AGMCORE_host_sep{
		/indexed_colorspace_dict AGMCORE_gget
		begin
		currentdict/CSDBase known{
			CSDBase/CSD get_res begin
			currentdict/Names known{
				map_indexed_devn
				devn
			}
			{
				Lookup 1 3 -1 roll map_index
				sep
			}ifelse
			end
		}{
			Lookup MappedCSA/DeviceCMYK eq{4}{1}ifelse 3 -1 roll
			map_index
			MappedCSA/DeviceCMYK eq{setcmykcolor}{setgray}ifelse
		}ifelse
		end
	}{
		level3 not AGMCORE_in_rip_sep and/indexed_colorspace_dict AGMCORE_gget/CSDBase known and{
			/indexed_colorspace_dict AGMCORE_gget/CSDBase get/CSD get_res begin
			map_indexed_devn
			devn
			end
		}
		{
			setcolor
		}ifelse
	}ifelse
}def
/ignoreimagedata
{
	currentoverprint not{
		gsave
		dup clonedict begin
		1 setgray
		/Decode[0 1]def
		/DataSource<FF>def
		/MultipleDataSources false def
		/BitsPerComponent 8 def
		currentdict end
		systemdict/image gx
		grestore
		}if
	consumeimagedata
}def
/add_res
{
	dup/CSD eq{
		pop 
		//Adobe_AGM_Core begin
		/AGMCORE_CSD_cache load 3 1 roll put
		end
	}{
		defineresource pop
	}ifelse
}def
/del_res
{
	{
		aload pop exch
		dup/CSD eq{
			pop 
			{//Adobe_AGM_Core/AGMCORE_CSD_cache get exch undef}forall
		}{
			exch
			{1 index undefineresource}forall
			pop
		}ifelse
	}forall
}def
/get_res
{
	dup/CSD eq{
		pop
		dup type dup/nametype eq exch/stringtype eq or{
			AGMCORE_CSD_cache exch get
		}if
	}{
		findresource
	}ifelse
}def
/get_csa_by_name
{
	dup type dup/nametype eq exch/stringtype eq or{
		/CSA get_res
	}if
}def
/paintproc_buf_init
{
	/count get 0 0 put
}def
/paintproc_buf_next
{
	dup/count get dup 0 get
	dup 3 1 roll
	1 add 0 xpt
	get				
}def
/cachepaintproc_compress
{
	5 dict begin
	currentfile exch 0 exch/SubFileDecode filter/ReadFilter exch def
	/ppdict 20 dict def
	/string_size 16000 def
	/readbuffer string_size string def
	currentglobal true setglobal 
	ppdict 1 array dup 0 1 put/count xpt
	setglobal
	/LZWFilter 
	{
		exch
		dup length 0 eq{
			pop
		}{
			ppdict dup length 1 sub 3 -1 roll put
		}ifelse
		{string_size}{0}ifelse string
	}/LZWEncode filter def
	{		
		ReadFilter readbuffer readstring
		exch LZWFilter exch writestring
		not{exit}if
	}loop
	LZWFilter closefile
	ppdict				
	end
}def
/cachepaintproc
{
	2 dict begin
	currentfile exch 0 exch/SubFileDecode filter/ReadFilter exch def
	/ppdict 20 dict def
	currentglobal true setglobal 
	ppdict 1 array dup 0 1 put/count xpt
	setglobal
	{
		ReadFilter 16000 string readstring exch
		ppdict dup length 1 sub 3 -1 roll put
		not{exit}if
	}loop
	ppdict dup dup length 1 sub()put					
	end	
}def
/make_pattern
{
	exch clonedict exch
	dup matrix currentmatrix matrix concatmatrix 0 0 3 2 roll itransform
	exch 3 index/XStep get 1 index exch 2 copy div cvi mul sub sub
	exch 3 index/YStep get 1 index exch 2 copy div cvi mul sub sub
	matrix translate exch matrix concatmatrix
			 1 index begin
		BBox 0 get XStep div cvi XStep mul/xshift exch neg def
		BBox 1 get YStep div cvi YStep mul/yshift exch neg def
		BBox 0 get xshift add
		BBox 1 get yshift add
		BBox 2 get xshift add
		BBox 3 get yshift add
		4 array astore
		/BBox exch def
		[xshift yshift/translate load null/exec load]dup
		3/PaintProc load put cvx/PaintProc exch def
		end
	gsave 0 setgray
	makepattern
	grestore
}def
/set_pattern
{
	dup/PatternType get 1 eq{
		dup/PaintType get 1 eq{
			currentoverprint sop[/DeviceGray]setcolorspace 0 setgray
		}if
	}if
	setpattern
}def
/setcolorspace_opt
{
	dup currentcolorspace eq{pop}{setcolorspace}ifelse
}def
/updatecolorrendering
{
	currentcolorrendering/RenderingIntent known{
		currentcolorrendering/RenderingIntent get
	}
	{
		Intent/AbsoluteColorimetric eq 
		{
			/absolute_colorimetric_crd AGMCORE_gget dup null eq
		}
		{
			Intent/RelativeColorimetric eq
			{
				/relative_colorimetric_crd AGMCORE_gget dup null eq
			}
			{
				Intent/Saturation eq
				{
					/saturation_crd AGMCORE_gget dup null eq
				}
				{
					/perceptual_crd AGMCORE_gget dup null eq
				}ifelse
			}ifelse
		}ifelse
		{
			pop null	
		}
		{
			/RenderingIntent known{null}{Intent}ifelse
		}ifelse
	}ifelse
	Intent ne{
		Intent/ColorRendering{findresource}stopped
		{
			pop pop systemdict/findcolorrendering known
			{
 				Intent findcolorrendering
 				{
 					/ColorRendering findresource true exch
 				}
 				{
 					/ColorRendering findresource
					product(Xerox Phaser 5400)ne
					exch
 				}ifelse
				dup Intent/AbsoluteColorimetric eq 
				{
					/absolute_colorimetric_crd exch AGMCORE_gput
				}
				{
					Intent/RelativeColorimetric eq
					{
						/relative_colorimetric_crd exch AGMCORE_gput
					}
					{
						Intent/Saturation eq
						{
							/saturation_crd exch AGMCORE_gput
						}
						{
							Intent/Perceptual eq
							{
								/perceptual_crd exch AGMCORE_gput
							}
							{
								pop
							}ifelse
						}ifelse
					}ifelse
				}ifelse
				1 index{exch}{pop}ifelse
			}
			{false}ifelse
		}
		{true}ifelse
		{
			dup begin
			currentdict/TransformPQR known{
				currentdict/TransformPQR get aload pop
				3{{}eq 3 1 roll}repeat or or
			}
			{true}ifelse
			currentdict/MatrixPQR known{
				currentdict/MatrixPQR get aload pop
				1.0 eq 9 1 roll 0.0 eq 9 1 roll 0.0 eq 9 1 roll
				0.0 eq 9 1 roll 1.0 eq 9 1 roll 0.0 eq 9 1 roll
				0.0 eq 9 1 roll 0.0 eq 9 1 roll 1.0 eq
				and and and and and and and and
			}
			{true}ifelse
			end
			or
			{
				clonedict begin
				/TransformPQR[
					{4 -1 roll 3 get dup 3 1 roll sub 5 -1 roll 3 get 3 -1 roll sub div
					3 -1 roll 3 get 3 -1 roll 3 get dup 4 1 roll sub mul add}bind
					{4 -1 roll 4 get dup 3 1 roll sub 5 -1 roll 4 get 3 -1 roll sub div
					3 -1 roll 4 get 3 -1 roll 4 get dup 4 1 roll sub mul add}bind
					{4 -1 roll 5 get dup 3 1 roll sub 5 -1 roll 5 get 3 -1 roll sub div
					3 -1 roll 5 get 3 -1 roll 5 get dup 4 1 roll sub mul add}bind
				]def
				/MatrixPQR[0.8951 -0.7502 0.0389 0.2664 1.7135 -0.0685 -0.1614 0.0367 1.0296]def
				/RangePQR[-0.3227950745 2.3229645538 -1.5003771057 3.5003465881 -0.1369979095 2.136967392]def
				currentdict end
			}if
			setcolorrendering_opt
		}if		
	}if
}def
/set_crd
{
	AGMCORE_host_sep not level2 and{
		currentdict/ColorRendering known{
			ColorRendering/ColorRendering{findresource}stopped not{setcolorrendering_opt}if
		}{
			currentdict/Intent known{
				updatecolorrendering
			}if
		}ifelse
		currentcolorspace dup type/arraytype eq
			{0 get}if
		/DeviceRGB eq
			{
			currentdict/UCR known
				{/UCR}{/AGMCORE_currentucr}ifelse
			load setundercolorremoval
			currentdict/BG known 
				{/BG}{/AGMCORE_currentbg}ifelse
			load setblackgeneration
			}if
	}if
}def
/set_ucrbg
{
	dup null eq {pop /AGMCORE_currentbg load}{/Procedure get_res}ifelse
	dup currentblackgeneration eq {pop}{setblackgeneration}ifelse
	dup null eq {pop /AGMCORE_currentucr load}{/Procedure get_res}ifelse
	dup currentundercolorremoval eq {pop}{setundercolorremoval}ifelse
}def
/setcolorrendering_opt
{
	dup currentcolorrendering eq{
		pop
	}{
		product(HP Color LaserJet 2605)anchorsearch{
			pop pop pop
		}{
			pop
			clonedict
			begin
				/Intent Intent def
				currentdict
			end
			setcolorrendering
		}ifelse
	}ifelse
}def
/cpaint_gcomp
{
	convert_to_process//Adobe_AGM_Core/AGMCORE_ConvertToProcess xddf
	//Adobe_AGM_Core/AGMCORE_ConvertToProcess get not
	{
		(%end_cpaint_gcomp)flushinput
	}if
}def
/cpaint_gsep
{
	//Adobe_AGM_Core/AGMCORE_ConvertToProcess get
	{	
		(%end_cpaint_gsep)flushinput
	}if
}def
/cpaint_gend
{np}def
/T1_path
{
	currentfile token pop currentfile token pop mo
	{
		currentfile token pop dup type/stringtype eq
			{pop exit}if 
		0 exch rlineto 
		currentfile token pop dup type/stringtype eq
			{pop exit}if 
		0 rlineto
	}loop
}def
/T1_gsave
	level3
	{/clipsave}
	{/gsave}ifelse
	load def
/T1_grestore
	level3
	{/cliprestore}
	{/grestore}ifelse 
	load def
/set_spot_alias_ary
{
	dup inherit_aliases
	//Adobe_AGM_Core/AGMCORE_SpotAliasAry xddf
}def
/set_spot_normalization_ary
{
	dup inherit_aliases
	dup length
	/AGMCORE_SpotAliasAry where{pop AGMCORE_SpotAliasAry length add}if
	array
	//Adobe_AGM_Core/AGMCORE_SpotAliasAry2 xddf
	/AGMCORE_SpotAliasAry where{
		pop
		AGMCORE_SpotAliasAry2 0 AGMCORE_SpotAliasAry putinterval
		AGMCORE_SpotAliasAry length
	}{0}ifelse
	AGMCORE_SpotAliasAry2 3 1 roll exch putinterval
	true set_spot_alias
}def
/inherit_aliases
{
	{dup/Name get map_alias{/CSD put}{pop}ifelse}forall
}def
/set_spot_alias
{
	/AGMCORE_SpotAliasAry2 where{
		/AGMCORE_current_spot_alias 3 -1 roll put
	}{
		pop
	}ifelse
}def
/current_spot_alias
{
	/AGMCORE_SpotAliasAry2 where{
		/AGMCORE_current_spot_alias get
	}{
		false
	}ifelse
}def
/map_alias
{
	/AGMCORE_SpotAliasAry2 where{
		begin
			/AGMCORE_name xdf
			false	
			AGMCORE_SpotAliasAry2{
				dup/Name get AGMCORE_name eq{
					/CSD get/CSD get_res
					exch pop true
					exit
				}{
					pop
				}ifelse
			}forall
		end
	}{
		pop false
	}ifelse
}bdf
/spot_alias
{
	true set_spot_alias
	/AGMCORE_&setcustomcolor AGMCORE_key_known not{
		//Adobe_AGM_Core/AGMCORE_&setcustomcolor/setcustomcolor load put
	}if
	/customcolor_tint 1 AGMCORE_gput
	//Adobe_AGM_Core begin
	/setcustomcolor
	{
		//Adobe_AGM_Core begin
		dup/customcolor_tint exch AGMCORE_gput
		1 index aload pop pop 1 eq exch 1 eq and exch 1 eq and exch 1 eq and not
		current_spot_alias and{1 index 4 get map_alias}{false}ifelse
		{
			false set_spot_alias
			/sep_colorspace_dict AGMCORE_gget null ne
			{/sep_colorspace_dict AGMCORE_gget/ForeignContent known not}{false}ifelse
			3 1 roll 2 index{
				exch pop/sep_tint AGMCORE_gget exch
			}if
			mark 3 1 roll
			setsepcolorspace
			counttomark 0 ne{
				setsepcolor
			}if
			pop
			not{/sep_tint 1.0 AGMCORE_gput/sep_colorspace_dict AGMCORE_gget/ForeignContent true put}if
			pop
			true set_spot_alias
		}{
			AGMCORE_&setcustomcolor
		}ifelse
		end
	}bdf
	end
}def
/begin_feature
{
	Adobe_AGM_Core/AGMCORE_feature_dictCount countdictstack put
	count Adobe_AGM_Core/AGMCORE_feature_opCount 3 -1 roll put
	{Adobe_AGM_Core/AGMCORE_feature_ctm matrix currentmatrix put}if
}def
/end_feature
{
	2 dict begin
	/spd/setpagedevice load def
	/setpagedevice{get_gstate spd set_gstate}def
	stopped{$error/newerror false put}if
	end
	count Adobe_AGM_Core/AGMCORE_feature_opCount get sub dup 0 gt{{pop}repeat}{pop}ifelse
	countdictstack Adobe_AGM_Core/AGMCORE_feature_dictCount get sub dup 0 gt{{end}repeat}{pop}ifelse
	{Adobe_AGM_Core/AGMCORE_feature_ctm get setmatrix}if
}def
/set_negative
{
	//Adobe_AGM_Core begin
	/AGMCORE_inverting exch def
	level2{
		currentpagedevice/NegativePrint known AGMCORE_distilling not and{
			currentpagedevice/NegativePrint get//Adobe_AGM_Core/AGMCORE_inverting get ne{
				true begin_feature true{
						<</NegativePrint//Adobe_AGM_Core/AGMCORE_inverting get>>setpagedevice
				}end_feature
			}if
			/AGMCORE_inverting false def
		}if
	}if
	AGMCORE_inverting{
		[{1 exch sub}/exec load dup currenttransfer exch]cvx bind settransfer
 		AGMCORE_distilling{
 			erasepage
 		}{
 			gsave np clippath 1/setseparationgray where{pop setseparationgray}{setgray}ifelse
 			/AGMIRS_&fill where{pop AGMIRS_&fill}{fill}ifelse grestore
 		}ifelse
	}if
	end
}def
/lw_save_restore_override{
	/md where{
		pop
		md begin
		initializepage
		/initializepage{}def
		/pmSVsetup{}def
		/endp{}def
		/pse{}def
		/psb{}def
		/orig_showpage where
			{pop}
			{/orig_showpage/showpage load def}
		ifelse
		/showpage{orig_showpage gR}def
		end
	}if
}def
/pscript_showpage_override{
	/NTPSOct95 where
	{
		begin
		showpage
		save
		/showpage/restore load def
		/restore{exch pop}def
		end
	}if
}def
/driver_media_override
{
	/md where{
		pop
		md/initializepage known{
			md/initializepage{}put
		}if
		md/rC known{
			md/rC{4{pop}repeat}put
		}if
	}if
	/mysetup where{
		/mysetup[1 0 0 1 0 0]put
	}if
	Adobe_AGM_Core/AGMCORE_Default_CTM matrix currentmatrix put
	level2
		{Adobe_AGM_Core/AGMCORE_Default_PageSize currentpagedevice/PageSize get put}if
}def
/capture_mysetup
{
	/Pscript_Win_Data where{
		pop
		Pscript_Win_Data/mysetup known{
			Adobe_AGM_Core/save_mysetup Pscript_Win_Data/mysetup get put
		}if
	}if
}def
/restore_mysetup
{
	/Pscript_Win_Data where{
		pop
		Pscript_Win_Data/mysetup known{
			Adobe_AGM_Core/save_mysetup known{
				Pscript_Win_Data/mysetup Adobe_AGM_Core/save_mysetup get put
				Adobe_AGM_Core/save_mysetup undef
			}if
		}if
	}if
}def
/driver_check_media_override
{
 	/PrepsDict where
 		{pop}
		{
		Adobe_AGM_Core/AGMCORE_Default_CTM get matrix currentmatrix ne
		Adobe_AGM_Core/AGMCORE_Default_PageSize get type/arraytype eq
			{
			Adobe_AGM_Core/AGMCORE_Default_PageSize get 0 get currentpagedevice/PageSize get 0 get eq and
			Adobe_AGM_Core/AGMCORE_Default_PageSize get 1 get currentpagedevice/PageSize get 1 get eq and
			}if
			{
			Adobe_AGM_Core/AGMCORE_Default_CTM get setmatrix
			}if
		}ifelse
}def
AGMCORE_err_strings begin
	/AGMCORE_bad_environ(Environment not satisfactory for this job. Ensure that the PPD is correct or that the PostScript level requested is supported by this printer. )def
	/AGMCORE_color_space_onhost_seps(This job contains colors that will not separate with on-host methods. )def
	/AGMCORE_invalid_color_space(This job contains an invalid color space. )def
end
/set_def_ht
{AGMCORE_def_ht sethalftone}def
/set_def_flat
{AGMCORE_Default_flatness setflat}def
end
systemdict/setpacking known
{setpacking}if
%%EndResource
%%BeginResource: procset Adobe_CoolType_Core 2.31 0
%%Copyright: Copyright 1997-2006 Adobe Systems Incorporated. All Rights Reserved.
%%Version: 2.31 0
10 dict begin
/Adobe_CoolType_Passthru currentdict def
/Adobe_CoolType_Core_Defined userdict/Adobe_CoolType_Core known def
Adobe_CoolType_Core_Defined
	{/Adobe_CoolType_Core userdict/Adobe_CoolType_Core get def}
if
userdict/Adobe_CoolType_Core 70 dict dup begin put
/Adobe_CoolType_Version 2.31 def
/Level2?
	systemdict/languagelevel known dup
		{pop systemdict/languagelevel get 2 ge}
	if def
Level2? not
	{
	/currentglobal false def
	/setglobal/pop load def
	/gcheck{pop false}bind def
	/currentpacking false def
	/setpacking/pop load def
	/SharedFontDirectory 0 dict def
	}
if
currentpacking
true setpacking
currentglobal false setglobal
userdict/Adobe_CoolType_Data 2 copy known not
	{2 copy 10 dict put}
if
get
	 begin
	/@opStackCountByLevel 32 dict def
	/@opStackLevel 0 def
	/@dictStackCountByLevel 32 dict def
	/@dictStackLevel 0 def
	 end
setglobal
currentglobal true setglobal
userdict/Adobe_CoolType_GVMFonts known not
	{userdict/Adobe_CoolType_GVMFonts 10 dict put}
if
setglobal
currentglobal false setglobal
userdict/Adobe_CoolType_LVMFonts known not
	{userdict/Adobe_CoolType_LVMFonts 10 dict put}
if
setglobal
/ct_VMDictPut
	{
	dup gcheck{Adobe_CoolType_GVMFonts}{Adobe_CoolType_LVMFonts}ifelse
	3 1 roll put
	}bind def
/ct_VMDictUndef
	{
	dup Adobe_CoolType_GVMFonts exch known
		{Adobe_CoolType_GVMFonts exch undef}
		{
			dup Adobe_CoolType_LVMFonts exch known
			{Adobe_CoolType_LVMFonts exch undef}
			{pop}
			ifelse
		}ifelse
	}bind def
/ct_str1 1 string def
/ct_xshow
{
	/_ct_na exch def
	/_ct_i 0 def
	currentpoint
	/_ct_y exch def
	/_ct_x exch def
	{
		pop pop
		ct_str1 exch 0 exch put
		ct_str1 show
		{_ct_na _ct_i get}stopped 
		{pop pop}
		{
			_ct_x _ct_y moveto
			0
			rmoveto
		}
		ifelse
		/_ct_i _ct_i 1 add def
		currentpoint
		/_ct_y exch def
		/_ct_x exch def
	}
	exch
	@cshow
}bind def
/ct_yshow
{
	/_ct_na exch def
	/_ct_i 0 def
	currentpoint
	/_ct_y exch def
	/_ct_x exch def
	{
		pop pop
		ct_str1 exch 0 exch put
		ct_str1 show
		{_ct_na _ct_i get}stopped 
		{pop pop}
		{
			_ct_x _ct_y moveto
			0 exch
			rmoveto
		}
		ifelse
		/_ct_i _ct_i 1 add def
		currentpoint
		/_ct_y exch def
		/_ct_x exch def
	}
	exch
	@cshow
}bind def
/ct_xyshow
{
	/_ct_na exch def
	/_ct_i 0 def
	currentpoint
	/_ct_y exch def
	/_ct_x exch def
	{
		pop pop
		ct_str1 exch 0 exch put
		ct_str1 show
		{_ct_na _ct_i get}stopped 
		{pop pop}
		{
			{_ct_na _ct_i 1 add get}stopped 
			{pop pop pop}
			{
				_ct_x _ct_y moveto
				rmoveto
			}
			ifelse
		}
		ifelse
		/_ct_i _ct_i 2 add def
		currentpoint
		/_ct_y exch def
		/_ct_x exch def
	}
	exch
	@cshow
}bind def
/xsh{{@xshow}stopped{Adobe_CoolType_Data begin ct_xshow end}if}bind def
/ysh{{@yshow}stopped{Adobe_CoolType_Data begin ct_yshow end}if}bind def
/xysh{{@xyshow}stopped{Adobe_CoolType_Data begin ct_xyshow end}if}bind def
currentglobal true setglobal
/ct_T3Defs
{
/BuildChar
{
	1 index/Encoding get exch get
	1 index/BuildGlyph get exec
}bind def
/BuildGlyph
{
	exch begin
	GlyphProcs exch get exec
	end
}bind def
}bind def
setglobal
/@_SaveStackLevels
	{
	Adobe_CoolType_Data
		begin
		/@vmState currentglobal def false setglobal
		@opStackCountByLevel
		@opStackLevel
		2 copy known not
			{
			2 copy
			3 dict dup/args
			7 index
			5 add array put
			put get
			}
			{
			get dup/args get dup length 3 index lt
				{
				dup length 5 add array exch
				1 index exch 0 exch putinterval
				1 index exch/args exch put
				}
				{pop}
			ifelse
			}
		ifelse
			begin
			count 1 sub
			1 index lt
				{pop count}
			if
			dup/argCount exch def
			dup 0 gt
				{
				args exch 0 exch getinterval 
			astore pop
				}
				{pop}
			ifelse
			count
			/restCount exch def
			end
		/@opStackLevel @opStackLevel 1 add def
		countdictstack 1 sub
		@dictStackCountByLevel exch @dictStackLevel exch put
		/@dictStackLevel @dictStackLevel 1 add def
		@vmState setglobal
		end
	}bind def
/@_RestoreStackLevels
	{
	Adobe_CoolType_Data
		begin
		/@opStackLevel @opStackLevel 1 sub def
		@opStackCountByLevel @opStackLevel get
			begin
			count restCount sub dup 0 gt
				{{pop}repeat}
				{pop}
			ifelse
			args 0 argCount getinterval{}forall
			end
		/@dictStackLevel @dictStackLevel 1 sub def
		@dictStackCountByLevel @dictStackLevel get
		end
	countdictstack exch sub dup 0 gt
		{{end}repeat}
		{pop}
	ifelse
	}bind def
/@_PopStackLevels
	{
	Adobe_CoolType_Data
		begin
		/@opStackLevel @opStackLevel 1 sub def
		/@dictStackLevel @dictStackLevel 1 sub def
		end
	}bind def
/@Raise
	{
	exch cvx exch errordict exch get exec
	stop
	}bind def
/@ReRaise
	{
	cvx $error/errorname get errordict exch get exec
	stop
	}bind def
/@Stopped
	{
	0 @#Stopped
	}bind def
/@#Stopped
	{
	@_SaveStackLevels
	stopped
		{@_RestoreStackLevels true}
		{@_PopStackLevels false}
	ifelse
	}bind def
/@Arg
	{
	Adobe_CoolType_Data
		begin
		@opStackCountByLevel @opStackLevel 1 sub get
		begin
		args exch
		argCount 1 sub exch sub get
		end
		end
	}bind def
currentglobal true setglobal
/CTHasResourceForAllBug
	Level2?
		{
		1 dict dup
				/@shouldNotDisappearDictValue true def
				Adobe_CoolType_Data exch/@shouldNotDisappearDict exch put
				begin
				count @_SaveStackLevels
					{(*){pop stop}128 string/Category resourceforall}
				stopped pop
				@_RestoreStackLevels
				currentdict Adobe_CoolType_Data/@shouldNotDisappearDict get dup 3 1 roll ne dup 3 1 roll
					{
						 /@shouldNotDisappearDictValue known
								{
										 {
												end
												currentdict 1 index eq
													{pop exit}
												if
										 }
									 loop
								}
						 if
					}
					{
						 pop
						 end
					}
				ifelse
		}
		{false}
	ifelse
	def
true setglobal
/CTHasResourceStatusBug
	Level2?
		{
		mark
			{/steveamerige/Category resourcestatus}
		stopped
			{cleartomark true}
			{cleartomark currentglobal not}
		ifelse
		}
		{false}
	ifelse
	def
setglobal
/CTResourceStatus
		{
		mark 3 1 roll
		/Category findresource
			begin
			({ResourceStatus}stopped)0()/SubFileDecode filter cvx exec
				{cleartomark false}
				{{3 2 roll pop true}{cleartomark false}ifelse}
			ifelse
			end
		}bind def
/CTWorkAroundBugs
	{
	Level2?
		{
		/cid_PreLoad/ProcSet resourcestatus
			{
			pop pop
			currentglobal
			mark
				{
				(*)
					{
					dup/CMap CTHasResourceStatusBug
						{CTResourceStatus}
						{resourcestatus}
					ifelse
						{
						pop dup 0 eq exch 1 eq or
							{
							dup/CMap findresource gcheck setglobal
							/CMap undefineresource
							}
							{
							pop CTHasResourceForAllBug
								{exit}
								{stop}
							ifelse
							}
						ifelse
						}
						{pop}
					ifelse
					}
				128 string/CMap resourceforall
				}
			stopped
				{cleartomark}
			stopped pop
			setglobal
			}
		if
		}
	if
	}bind def
/ds
	{
	Adobe_CoolType_Core
		begin
		CTWorkAroundBugs
		/mo/moveto load def
		/nf/newencodedfont load def
		/msf{makefont setfont}bind def
		/uf{dup undefinefont ct_VMDictUndef}bind def
		/ur/undefineresource load def
		/chp/charpath load def
		/awsh/awidthshow load def
		/wsh/widthshow load def
		/ash/ashow load def
		/@xshow/xshow load def
		/@yshow/yshow load def
		/@xyshow/xyshow load def
		/@cshow/cshow load def
		/sh/show load def
		/rp/repeat load def
		/.n/.notdef def
		end
		currentglobal false setglobal
	 userdict/Adobe_CoolType_Data 2 copy known not
		 {2 copy 10 dict put}
		if
		get
		begin
		/AddWidths? false def
		/CC 0 def
		/charcode 2 string def
		/@opStackCountByLevel 32 dict def
		/@opStackLevel 0 def
		/@dictStackCountByLevel 32 dict def
		/@dictStackLevel 0 def
		/InVMFontsByCMap 10 dict def
		/InVMDeepCopiedFonts 10 dict def
		end
		setglobal
	}bind def
/dt
	{
	currentdict Adobe_CoolType_Core eq
		{end}
	if
	}bind def
/ps
	{
	Adobe_CoolType_Core begin
	Adobe_CoolType_GVMFonts begin
	Adobe_CoolType_LVMFonts begin
	SharedFontDirectory begin
	}bind def
/pt
	{
	end
	end
	end
	end
	}bind def
/unload
	{
	systemdict/languagelevel known
		{
		systemdict/languagelevel get 2 ge
			{
			userdict/Adobe_CoolType_Core 2 copy known
				{undef}
				{pop pop}
			ifelse
			}
		if
		}
	if
	}bind def
/ndf
	{
	1 index where
		{pop pop pop}
		{dup xcheck{bind}if def}
	ifelse
	}def
/findfont systemdict
	begin
	userdict
		begin
		/globaldict where{/globaldict get begin}if
			dup where pop exch get
		/globaldict where{pop end}if
		end
	end
Adobe_CoolType_Core_Defined
	{/systemfindfont exch def}
	{
	/findfont 1 index def
	/systemfindfont exch def
	}
ifelse
/undefinefont
	{pop}ndf
/copyfont
	{
	currentglobal 3 1 roll
	1 index gcheck setglobal
	dup null eq{0}{dup length}ifelse
	2 index length add 1 add dict
		begin
		exch
			{
			1 index/FID eq
				{pop pop}
				{def}
			ifelse
			}
		forall
		dup null eq
			{pop}
			{{def}forall}
		ifelse
		currentdict
		end
	exch setglobal
	}bind def
/copyarray
	{
	currentglobal exch
	dup gcheck setglobal
	dup length array copy
	exch setglobal
	}bind def
/newencodedfont
	{
	currentglobal
		{
		SharedFontDirectory 3 index known
			{SharedFontDirectory 3 index get/FontReferenced known}
			{false}
		ifelse
		}
		{
		FontDirectory 3 index known
			{FontDirectory 3 index get/FontReferenced known}
			{
			SharedFontDirectory 3 index known
				{SharedFontDirectory 3 index get/FontReferenced known}
				{false}
			ifelse
			}
		ifelse
		}
	ifelse
	dup
		{
		3 index findfont/FontReferenced get
		2 index dup type/nametype eq
			{findfont}
		if ne
			{pop false}
		if
		}
	if
	dup
		{
		1 index dup type/nametype eq
			{findfont}
		 if
		dup/CharStrings known
			{
			/CharStrings get length
			4 index findfont/CharStrings get length
			ne
				{
				pop false
				}
			if 
			}
			{pop}
			ifelse
		}
	if
		{
		pop
		1 index findfont
		/Encoding get exch
		0 1 255
			{2 copy get 3 index 3 1 roll put}
		for
		pop pop pop
		}
		{
		currentglobal
	 4 1 roll
		dup type/nametype eq
		 {findfont}
	 if
	 dup gcheck setglobal
		dup dup maxlength 2 add dict
			begin
			exch
				{
				1 index/FID ne
				2 index/Encoding ne and
					{def}
					{pop pop}
				ifelse
				}
			forall
			/FontReferenced exch def
			/Encoding exch dup length array copy def
			/FontName 1 index dup type/stringtype eq{cvn}if def dup
			currentdict
			end
		definefont ct_VMDictPut
		setglobal
		}
	ifelse
	}bind def
/SetSubstituteStrategy
	{
	$SubstituteFont
		begin
		dup type/dicttype ne
			{0 dict}
		if
		currentdict/$Strategies known
			{
			exch $Strategies exch 
			2 copy known
				{
				get
				2 copy maxlength exch maxlength add dict
					begin
					{def}forall
					{def}forall
					currentdict
					dup/$Init known
						{dup/$Init get exec}
					if
					end
				/$Strategy exch def
				}
				{pop pop pop}
			ifelse
			}
			{pop pop}
		ifelse
		end
	}bind def
/scff
	{
	$SubstituteFont
		begin
		dup type/stringtype eq
			{dup length exch}
			{null}
		ifelse
		/$sname exch def
		/$slen exch def
		/$inVMIndex
			$sname null eq
				{
				1 index $str cvs
				dup length $slen sub $slen getinterval cvn
				}
				{$sname}
			ifelse def
		end
		{findfont}
	@Stopped
		{
		dup length 8 add string exch
		1 index 0(BadFont:)putinterval
		1 index exch 8 exch dup length string cvs putinterval cvn
			{findfont}
		@Stopped
			{pop/Courier findfont}
		if
		}
	if
	$SubstituteFont
		begin
		/$sname null def
		/$slen 0 def
		/$inVMIndex null def
		end
	}bind def
/isWidthsOnlyFont
	{
	dup/WidthsOnly known
		{pop pop true}
		{
		dup/FDepVector known
			{/FDepVector get{isWidthsOnlyFont dup{exit}if}forall}
			{
			dup/FDArray known
				{/FDArray get{isWidthsOnlyFont dup{exit}if}forall}
				{pop}
			ifelse
			}
		ifelse
		}
	ifelse
	}bind def
/ct_StyleDicts 4 dict dup begin
		 /Adobe-Japan1 4 dict dup begin
					 Level2?
								{
								/Serif
								/HeiseiMin-W3-83pv-RKSJ-H/Font resourcestatus
								{pop pop/HeiseiMin-W3}
								{
							/CIDFont/Category resourcestatus
							{
								pop pop
								/HeiseiMin-W3/CIDFont resourcestatus
								{pop pop/HeiseiMin-W3}
								{/Ryumin-Light}
								ifelse
							}
							{/Ryumin-Light}
							ifelse
								}
								ifelse
								def
								/SansSerif
								/HeiseiKakuGo-W5-83pv-RKSJ-H/Font resourcestatus
								{pop pop/HeiseiKakuGo-W5}
								{
							/CIDFont/Category resourcestatus
							{
								pop pop
								/HeiseiKakuGo-W5/CIDFont resourcestatus
								{pop pop/HeiseiKakuGo-W5}
								{/GothicBBB-Medium}
								ifelse
							}
							{/GothicBBB-Medium}
							ifelse
								}
								ifelse
								def
								/HeiseiMaruGo-W4-83pv-RKSJ-H/Font resourcestatus
								{pop pop/HeiseiMaruGo-W4}
								{
							/CIDFont/Category resourcestatus
							{
								pop pop
								/HeiseiMaruGo-W4/CIDFont resourcestatus
								{pop pop/HeiseiMaruGo-W4}
								{
									/Jun101-Light-RKSJ-H/Font resourcestatus
									{pop pop/Jun101-Light}
									{SansSerif}
									ifelse
								}
								ifelse
							}
							{
								/Jun101-Light-RKSJ-H/Font resourcestatus
								{pop pop/Jun101-Light}
								{SansSerif}
								ifelse
							}
							ifelse
								}
								ifelse
								/RoundSansSerif exch def
								/Default Serif def
								}
								{
								/Serif/Ryumin-Light def
								/SansSerif/GothicBBB-Medium def
								{
								(fonts/Jun101-Light-83pv-RKSJ-H)status
								}stopped
								{pop}{
										 {pop pop pop pop/Jun101-Light}
										 {SansSerif}
										 ifelse
										 /RoundSansSerif exch def
								}ifelse
								/Default Serif def
								}
					 ifelse
		 end
		 def
		 /Adobe-Korea1 4 dict dup begin
					/Serif/HYSMyeongJo-Medium def
					/SansSerif/HYGoThic-Medium def
					/RoundSansSerif SansSerif def
					/Default Serif def
		 end
		 def
		 /Adobe-GB1 4 dict dup begin
					/Serif/STSong-Light def
					/SansSerif/STHeiti-Regular def
					/RoundSansSerif SansSerif def
					/Default Serif def
		 end
		 def
		 /Adobe-CNS1 4 dict dup begin
					/Serif/MKai-Medium def
					/SansSerif/MHei-Medium def
					/RoundSansSerif SansSerif def
					/Default Serif def
		 end
		 def
end
def
Level2?{currentglobal true setglobal}if
/ct_BoldRomanWidthProc 
	{
	stringwidth 1 index 0 ne{exch .03 add exch}if setcharwidth
	0 0
	}bind def
/ct_Type0WidthProc 
	{
	 dup stringwidth 0 0 moveto 
	 2 index true charpath pathbbox
	 0 -1 
	 7 index 2 div .88 
	 setcachedevice2
	 pop
	0 0
	}bind def
/ct_Type0WMode1WidthProc 
	{
	 dup stringwidth 
	 pop 2 div neg -0.88
	2 copy
	moveto 
	0 -1
	 5 -1 roll true charpath pathbbox
	 setcachedevice
	}bind def
/cHexEncoding
[/c00/c01/c02/c03/c04/c05/c06/c07/c08/c09/c0A/c0B/c0C/c0D/c0E/c0F/c10/c11/c12
/c13/c14/c15/c16/c17/c18/c19/c1A/c1B/c1C/c1D/c1E/c1F/c20/c21/c22/c23/c24/c25
/c26/c27/c28/c29/c2A/c2B/c2C/c2D/c2E/c2F/c30/c31/c32/c33/c34/c35/c36/c37/c38
/c39/c3A/c3B/c3C/c3D/c3E/c3F/c40/c41/c42/c43/c44/c45/c46/c47/c48/c49/c4A/c4B
/c4C/c4D/c4E/c4F/c50/c51/c52/c53/c54/c55/c56/c57/c58/c59/c5A/c5B/c5C/c5D/c5E
/c5F/c60/c61/c62/c63/c64/c65/c66/c67/c68/c69/c6A/c6B/c6C/c6D/c6E/c6F/c70/c71
/c72/c73/c74/c75/c76/c77/c78/c79/c7A/c7B/c7C/c7D/c7E/c7F/c80/c81/c82/c83/c84
/c85/c86/c87/c88/c89/c8A/c8B/c8C/c8D/c8E/c8F/c90/c91/c92/c93/c94/c95/c96/c97
/c98/c99/c9A/c9B/c9C/c9D/c9E/c9F/cA0/cA1/cA2/cA3/cA4/cA5/cA6/cA7/cA8/cA9/cAA
/cAB/cAC/cAD/cAE/cAF/cB0/cB1/cB2/cB3/cB4/cB5/cB6/cB7/cB8/cB9/cBA/cBB/cBC/cBD
/cBE/cBF/cC0/cC1/cC2/cC3/cC4/cC5/cC6/cC7/cC8/cC9/cCA/cCB/cCC/cCD/cCE/cCF/cD0
/cD1/cD2/cD3/cD4/cD5/cD6/cD7/cD8/cD9/cDA/cDB/cDC/cDD/cDE/cDF/cE0/cE1/cE2/cE3
/cE4/cE5/cE6/cE7/cE8/cE9/cEA/cEB/cEC/cED/cEE/cEF/cF0/cF1/cF2/cF3/cF4/cF5/cF6
/cF7/cF8/cF9/cFA/cFB/cFC/cFD/cFE/cFF]def
/ct_BoldBaseFont 
	 11 dict begin
		/FontType 3 def
		/FontMatrix[1 0 0 1 0 0]def
		/FontBBox[0 0 1 1]def
		/Encoding cHexEncoding def 
		/_setwidthProc/ct_BoldRomanWidthProc load def
		/_bcstr1 1 string def
		/BuildChar
		{
			exch begin
				_basefont setfont
				_bcstr1 dup 0 4 -1 roll put
				dup 
				_setwidthProc
				3 copy 
				moveto				
				show
				_basefonto setfont
				moveto
				show
			end
		}bind def
		 currentdict
	 end 
def
systemdict/composefont known
{
/ct_DefineIdentity-H
{
	/Identity-H/CMap resourcestatus
	{
		pop pop
	}
	{
		/CIDInit/ProcSet findresource begin
		 12 dict begin
		 begincmap
		 /CIDSystemInfo 3 dict dup begin
			 /Registry(Adobe)def
			 /Ordering(Identity)def
			 /Supplement 0 def
		 end def
		 /CMapName/Identity-H def
		 /CMapVersion 1.000 def
		 /CMapType 1 def
		 1 begincodespacerange
		 <0000><FFFF>
		 endcodespacerange
		 1 begincidrange
		 <0000><FFFF>0
		 endcidrange
		 endcmap
		 CMapName currentdict/CMap defineresource pop
		 end
		 end
	 }
	 ifelse
}
def
/ct_BoldBaseCIDFont 
	 11 dict begin
		/CIDFontType 1 def
		/CIDFontName/ct_BoldBaseCIDFont def
		/FontMatrix[1 0 0 1 0 0]def
		/FontBBox[0 0 1 1]def
		/_setwidthProc/ct_Type0WidthProc load def
		/_bcstr2 2 string def
		/BuildGlyph
		{
			exch begin		 
				_basefont setfont
				_bcstr2 1 2 index 256 mod put
				_bcstr2 0 3 -1 roll 256 idiv put
				_bcstr2 dup _setwidthProc		 
				3 copy 
				moveto
				show
				_basefonto setfont
				moveto
				show
			end
		}bind def
		 currentdict
	 end 
def
}if
Level2?{setglobal}if
/ct_CopyFont{
	{
		1 index/FID ne 2 index/UniqueID ne and
		{def}{pop pop}ifelse
	}forall
}bind def
/ct_Type0CopyFont 
{
	exch
	dup length dict
	begin
	ct_CopyFont
	[
	exch
	FDepVector 
	{
		 dup/FontType get 0 eq
		{	
		1 index ct_Type0CopyFont 
		/_ctType0 exch definefont
		}
		{
		/_ctBaseFont exch
		2 index exec
		}
		 ifelse 
		 exch
	}
	forall 
	pop
	]				
	/FDepVector exch def
	currentdict
	end
}bind def
/ct_MakeBoldFont
{
	 dup/ct_SyntheticBold known
	{
		dup length 3 add dict begin 
		ct_CopyFont 
		/ct_StrokeWidth .03 0 FontMatrix idtransform pop def 
		/ct_SyntheticBold true def
		currentdict 
		end 
		definefont
	}
	{
		dup dup length 3 add dict
		begin
			ct_CopyFont
			/PaintType 2 def
			/StrokeWidth .03 0 FontMatrix idtransform pop def
			/dummybold currentdict
		end
		definefont
		dup/FontType get dup 9 ge exch 11 le and 
		{
			ct_BoldBaseCIDFont
			dup length 3 add dict copy begin
			dup/CIDSystemInfo get/CIDSystemInfo exch def
			ct_DefineIdentity-H
			/_Type0Identity/Identity-H 3 -1 roll[exch]composefont
			/_basefont exch def
			/_Type0Identity/Identity-H 3 -1 roll[exch]composefont
			/_basefonto exch def
			currentdict
			end
			/CIDFont defineresource
		}
		{
			ct_BoldBaseFont
			dup length 3 add dict copy begin
			/_basefont exch def
			/_basefonto exch def
			currentdict
			end
			definefont
		}
		ifelse
	}
	ifelse
}bind def
/ct_MakeBold{
	1 index 
	1 index
	findfont
	currentglobal 5 1 roll
	dup gcheck setglobal
		dup
		 /FontType get 0 eq
			{
				dup/WMode known{dup/WMode get 1 eq}{false}ifelse
				version length 4 ge
				and
					{version 0 4 getinterval cvi 2015 ge}
					{true}
				ifelse 
					{/ct_Type0WidthProc}
					{/ct_Type0WMode1WidthProc}
				ifelse
				ct_BoldBaseFont/_setwidthProc 3 -1 roll load put
						{ct_MakeBoldFont}ct_Type0CopyFont definefont
			}
			{
				dup/_fauxfont known not 1 index/SubstMaster known not and
				{
					 ct_BoldBaseFont/_setwidthProc /ct_BoldRomanWidthProc load put
					 ct_MakeBoldFont 
				}
				{
				2 index 2 index eq
					{exch pop	}
					{
						dup length dict begin
						ct_CopyFont
						currentdict
						end
						definefont 
					}
				ifelse
				}
			ifelse
			}
		 ifelse
		 pop pop pop
		 setglobal
}bind def
/?str1 256 string def
/?set
	{
	$SubstituteFont
		begin
		/$substituteFound false def
		/$fontname 1 index def
		/$doSmartSub false def
		end
	dup
	 findfont
	$SubstituteFont
		begin
		$substituteFound
			{false}
			{
			dup/FontName known
				{
				dup/FontName get $fontname eq
				1 index/DistillerFauxFont known not and
				/currentdistillerparams where
					{pop false 2 index isWidthsOnlyFont not and}
				if
				}
				{false}
			ifelse
			}
		ifelse
		exch pop
		/$doSmartSub true def
		end
		{
		5 1 roll pop pop pop pop
		findfont
		}
		{
		1 index
		findfont
		dup/FontType get 3 eq
		{
			6 1 roll pop pop pop pop pop false
		}
		{pop true}
		ifelse
		{
		$SubstituteFont
		begin
		pop pop
		/$styleArray 1 index def
		/$regOrdering 2 index def
		pop pop
		0 1 $styleArray length 1 sub
		{
			$styleArray exch get
			ct_StyleDicts $regOrdering
			2 copy known
			{
				get
				exch 2 copy known not
				{pop/Default}
				if
				get
				dup type/nametype eq
				{
				?str1 cvs length dup 1 add exch
				?str1 exch(-)putinterval
				exch dup length exch ?str1 exch 3 index exch putinterval
				add ?str1 exch 0 exch getinterval cvn
				}
				{
				pop pop/Unknown
				}
				ifelse
			}
			{
				pop pop pop pop/Unknown
			}
			ifelse
		}
		for
		end
		findfont 
		}if
		}
	ifelse
	currentglobal false setglobal 3 1 roll
	null copyfont definefont pop
	setglobal
	}bind def
setpacking
userdict/$SubstituteFont 25 dict put
1 dict
	begin
	/SubstituteFont
		dup $error exch 2 copy known
			{get}
			{pop pop{pop/Courier}bind}
		ifelse def
	/currentdistillerparams where dup
		{
		pop pop
		currentdistillerparams/CannotEmbedFontPolicy 2 copy known
			{get/Error eq}
			{pop pop false}
		ifelse
		}
	if not
		{
		countdictstack array dictstack 0 get
			begin
			userdict
				begin
				$SubstituteFont
					begin
					/$str 128 string def
					/$fontpat 128 string def
					/$slen 0 def
					/$sname null def
					/$match false def
					/$fontname null def
					/$substituteFound false def
					/$inVMIndex null def
					/$doSmartSub true def
					/$depth 0 def
					/$fontname null def
					/$italicangle 26.5 def
					/$dstack null def
					/$Strategies 10 dict dup
						begin
						/$Type3Underprint
							{
							currentglobal exch false setglobal
							11 dict
								begin
								/UseFont exch
									$WMode 0 ne
										{
										dup length dict copy
										dup/WMode $WMode put
										/UseFont exch definefont
										}
									if def
								/FontName $fontname dup type/stringtype eq{cvn}if def
								/FontType 3 def
								/FontMatrix[.001 0 0 .001 0 0]def
								/Encoding 256 array dup 0 1 255{/.notdef put dup}for pop def
								/FontBBox[0 0 0 0]def
								/CCInfo 7 dict dup
									begin
									/cc null def
									/x 0 def
									/y 0 def
									end def
								/BuildChar
									{
									exch
										begin
										CCInfo
											begin
											1 string dup 0 3 index put exch pop
											/cc exch def
											UseFont 1000 scalefont setfont
											cc stringwidth/y exch def/x exch def
											x y setcharwidth
											$SubstituteFont/$Strategy get/$Underprint get exec
											0 0 moveto cc show
											x y moveto
											end
										end
									}bind def
								currentdict
								end
							exch setglobal
							}bind def
						/$GetaTint
							2 dict dup
								begin
								/$BuildFont
									{
									dup/WMode known
										{dup/WMode get}
										{0}
									ifelse
									/$WMode exch def
									$fontname exch
									dup/FontName known
										{
										dup/FontName get
										dup type/stringtype eq{cvn}if
										}
										{/unnamedfont}
									ifelse
									exch
									Adobe_CoolType_Data/InVMDeepCopiedFonts get
									1 index/FontName get known
										{
										pop
										Adobe_CoolType_Data/InVMDeepCopiedFonts get
										1 index get
										null copyfont
										}
										{$deepcopyfont}
									ifelse
									exch 1 index exch/FontBasedOn exch put
									dup/FontName $fontname dup type/stringtype eq{cvn}if put
									definefont
									Adobe_CoolType_Data/InVMDeepCopiedFonts get
										begin
										dup/FontBasedOn get 1 index def
										end
									}bind def
								/$Underprint
									{
									gsave
									x abs y abs gt
										{/y 1000 def}
										{/x -1000 def 500 120 translate}
									ifelse
									Level2?
										{
										[/Separation(All)/DeviceCMYK{0 0 0 1 pop}]
										setcolorspace
										}
										{0 setgray}
									ifelse
									10 setlinewidth
									x .8 mul
									[7 3]
										{
										y mul 8 div 120 sub x 10 div exch moveto
										0 y 4 div neg rlineto
										dup 0 rlineto
										0 y 4 div rlineto
										closepath
										gsave
										Level2?
											{.2 setcolor}
											{.8 setgray}
										ifelse
										fill grestore
										stroke
										}
									forall
									pop
									grestore
									}bind def
								end def
						/$Oblique
							1 dict dup
								begin
								/$BuildFont
									{
									currentglobal exch dup gcheck setglobal
									null copyfont
										begin
										/FontBasedOn
										currentdict/FontName known
											{
											FontName
											dup type/stringtype eq{cvn}if
											}
											{/unnamedfont}
										ifelse
										def
										/FontName $fontname dup type/stringtype eq{cvn}if def
										/currentdistillerparams where
											{pop}
											{
											/FontInfo currentdict/FontInfo known
												{FontInfo null copyfont}
												{2 dict}
											ifelse
											dup
												begin
												/ItalicAngle $italicangle def
												/FontMatrix FontMatrix
												[1 0 ItalicAngle dup sin exch cos div 1 0 0]
												matrix concatmatrix readonly
												end
											4 2 roll def
											def
											}
										ifelse
										FontName currentdict
										end
									definefont
									exch setglobal
									}bind def
								end def
						/$None
							1 dict dup
								begin
								/$BuildFont{}bind def
								end def
						end def
					/$Oblique SetSubstituteStrategy
					/$findfontByEnum
						{
						dup type/stringtype eq{cvn}if
						dup/$fontname exch def
						$sname null eq
							{$str cvs dup length $slen sub $slen getinterval}
							{pop $sname}
						ifelse
						$fontpat dup 0(fonts/*)putinterval exch 7 exch putinterval
						/$match false def
						$SubstituteFont/$dstack countdictstack array dictstack put
						mark
							{
							$fontpat 0 $slen 7 add getinterval
								{/$match exch def exit}
							$str filenameforall
							}
						stopped
							{
							cleardictstack
							currentdict
							true
							$SubstituteFont/$dstack get
								{
								exch
									{
									1 index eq
										{pop false}
										{true}
									ifelse
									}
									{begin false}
								ifelse
								}
							forall
							pop
							}
						if
						cleartomark
						/$slen 0 def
						$match false ne
							{$match(fonts/)anchorsearch pop pop cvn}
							{/Courier}
						ifelse
						}bind def
					/$ROS 1 dict dup
						begin
						/Adobe 4 dict dup
							begin
							/Japan1 [/Ryumin-Light/HeiseiMin-W3
										 /GothicBBB-Medium/HeiseiKakuGo-W5
										 /HeiseiMaruGo-W4/Jun101-Light]def
							/Korea1 [/HYSMyeongJo-Medium/HYGoThic-Medium]def
							/GB1	 [/STSong-Light/STHeiti-Regular]def
							/CNS1	[/MKai-Medium/MHei-Medium]def
							end def
						end def
					/$cmapname null def
					/$deepcopyfont
						{
						dup/FontType get 0 eq
							{
							1 dict dup/FontName/copied put copyfont
								begin
								/FDepVector FDepVector copyarray
								0 1 2 index length 1 sub
									{
									2 copy get $deepcopyfont
									dup/FontName/copied put
									/copied exch definefont
									3 copy put pop pop
									}
								for
								def
								currentdict
								end
							}
							{$Strategies/$Type3Underprint get exec}
						ifelse
						}bind def
					/$buildfontname
						{
						dup/CIDFont findresource/CIDSystemInfo get
							begin
							Registry length Ordering length Supplement 8 string cvs
							3 copy length 2 add add add string
							dup 5 1 roll dup 0 Registry putinterval
							dup 4 index(-)putinterval
							dup 4 index 1 add Ordering putinterval
							4 2 roll add 1 add 2 copy(-)putinterval
							end
						1 add 2 copy 0 exch getinterval $cmapname $fontpat cvs exch
						anchorsearch
							{pop pop 3 2 roll putinterval cvn/$cmapname exch def}
							{pop pop pop pop pop}
						ifelse
						length
						$str 1 index(-)putinterval 1 add
						$str 1 index $cmapname $fontpat cvs putinterval
						$cmapname length add
						$str exch 0 exch getinterval cvn
						}bind def
					/$findfontByROS
						{
						/$fontname exch def
						$ROS Registry 2 copy known
							{
							get Ordering 2 copy known
								{get}
								{pop pop[]}
							ifelse
							}
							{pop pop[]}
						ifelse
						false exch
							{
							dup/CIDFont resourcestatus
								{
								pop pop
								save
								1 index/CIDFont findresource
								dup/WidthsOnly known
									{dup/WidthsOnly get}
									{false}
								ifelse
								exch pop
								exch restore
									{pop}
									{exch pop true exit}
								ifelse
								}
								{pop}
							ifelse
							}
						forall
							{$str cvs $buildfontname}
							{
							false(*)
								{
								save exch
								dup/CIDFont findresource
								dup/WidthsOnly known
									{dup/WidthsOnly get not}
									{true}
								ifelse
								exch/CIDSystemInfo get
								dup/Registry get Registry eq
								exch/Ordering get Ordering eq and and
									{exch restore exch pop true exit}
									{pop restore}
								ifelse
								}
							$str/CIDFont resourceforall
								{$buildfontname}
								{$fontname $findfontByEnum}
							ifelse
							}
						ifelse
						}bind def
					end
				end
				currentdict/$error known currentdict/languagelevel known and dup
					{pop $error/SubstituteFont known}
				if
				dup
					{$error}
					{Adobe_CoolType_Core}
				ifelse
				begin
					{
					/SubstituteFont
					/CMap/Category resourcestatus
						{
						pop pop
						{
						$SubstituteFont
							begin
							/$substituteFound true def
							dup length $slen gt
							$sname null ne or
							$slen 0 gt and
								{
								$sname null eq
									{dup $str cvs dup length $slen sub $slen getinterval cvn}
									{$sname}
								ifelse
								Adobe_CoolType_Data/InVMFontsByCMap get
								1 index 2 copy known
									{
									get
									false exch
										{
										pop
										currentglobal
											{
											GlobalFontDirectory 1 index known
												{exch pop true exit}
												{pop}
											ifelse
											}
											{
											FontDirectory 1 index known
												{exch pop true exit}
												{
												GlobalFontDirectory 1 index known
													{exch pop true exit}
													{pop}
												ifelse
												}
											ifelse
											}
										ifelse
										}
									forall
									}
									{pop pop false}
								ifelse
									{
									exch pop exch pop
									}
									{
									dup/CMap resourcestatus
										{
										pop pop
										dup/$cmapname exch def
										/CMap findresource/CIDSystemInfo get{def}forall
										$findfontByROS
										}
										{
										128 string cvs
										dup(-)search
											{
											3 1 roll search
												{
												3 1 roll pop
													{dup cvi}
												stopped
													{pop pop pop pop pop $findfontByEnum}
													{
													4 2 roll pop pop
													exch length
													exch
													2 index length
													2 index
													sub
													exch 1 sub -1 0
														{
														$str cvs dup length
														4 index
														0
														4 index
														4 3 roll add
														getinterval
														exch 1 index exch 3 index exch
														putinterval
														dup/CMap resourcestatus
															{
															pop pop
															4 1 roll pop pop pop
															dup/$cmapname exch def
															/CMap findresource/CIDSystemInfo get{def}forall
															$findfontByROS
															true exit
															}
															{pop}
														ifelse
														}
													for
													dup type/booleantype eq
														{pop}
														{pop pop pop $findfontByEnum}
													ifelse
													}
												ifelse
												}
												{pop pop pop $findfontByEnum}
											ifelse
											}
											{pop pop $findfontByEnum}
										ifelse
										}
									ifelse
									}
								ifelse
								}
								{//SubstituteFont exec}
							ifelse
							/$slen 0 def
							end
						}
						}
						{
						{
						$SubstituteFont
							begin
							/$substituteFound true def
							dup length $slen gt
							$sname null ne or
							$slen 0 gt and
								{$findfontByEnum}
								{//SubstituteFont exec}
							ifelse
							end
						}
						}
					ifelse
					bind readonly def
					Adobe_CoolType_Core/scfindfont/systemfindfont load put
					}
					{
					/scfindfont
						{
						$SubstituteFont
							begin
							dup systemfindfont
							dup/FontName known
								{dup/FontName get dup 3 index ne}
								{/noname true}
							ifelse
							dup
								{
								/$origfontnamefound 2 index def
								/$origfontname 4 index def/$substituteFound true def
								}
							if
							exch pop
								{
								$slen 0 gt
								$sname null ne
								3 index length $slen gt or and
									{
									pop dup $findfontByEnum findfont
									dup maxlength 1 add dict
										begin
											{1 index/FID eq{pop pop}{def}ifelse}
										forall
										currentdict
										end
									definefont
									dup/FontName known{dup/FontName get}{null}ifelse
									$origfontnamefound ne
										{
										$origfontname $str cvs print
										( substitution revised, using )print
										dup/FontName known
											{dup/FontName get}{(unspecified font)}
										ifelse
										$str cvs print(.\n)print
										}
									if
									}
									{exch pop}
								ifelse
								}
								{exch pop}
							ifelse
							end
						}bind def
					}
				ifelse
				end
			end
		Adobe_CoolType_Core_Defined not
			{
			Adobe_CoolType_Core/findfont
				{
				$SubstituteFont
					begin
					$depth 0 eq
						{
						/$fontname 1 index dup type/stringtype ne{$str cvs}if def
						/$substituteFound false def
						}
					if
					/$depth $depth 1 add def
					end
				scfindfont
				$SubstituteFont
					begin
					/$depth $depth 1 sub def
					$substituteFound $depth 0 eq and
						{
						$inVMIndex null ne
							{dup $inVMIndex $AddInVMFont}
						if
						$doSmartSub
							{
							currentdict/$Strategy known
								{$Strategy/$BuildFont get exec}
							if
							}
						if
						}
					if
					end
				}bind put
			}
		if
		}
	if
	end
/$AddInVMFont
	{
	exch/FontName 2 copy known
		{
		get
		1 dict dup begin exch 1 index gcheck def end exch
		Adobe_CoolType_Data/InVMFontsByCMap get exch
		$DictAdd
		}
		{pop pop pop}
	ifelse
	}bind def
/$DictAdd
	{
	2 copy known not
		{2 copy 4 index length dict put}
	if
	Level2? not
		{
		2 copy get dup maxlength exch length 4 index length add lt
		2 copy get dup length 4 index length add exch maxlength 1 index lt
			{
			2 mul dict
				begin
				2 copy get{forall}def
				2 copy currentdict put
				end
			}
			{pop}
		ifelse
		}
	if
	get
		begin
			{def}
		forall
		end
	}bind def
end
end
%%EndResource
currentglobal true setglobal
%%BeginResource: procset Adobe_CoolType_Utility_MAKEOCF 1.23 0
%%Copyright: Copyright 1987-2006 Adobe Systems Incorporated.
%%Version: 1.23 0
systemdict/languagelevel known dup
	{currentglobal false setglobal}
	{false}
ifelse
exch
userdict/Adobe_CoolType_Utility 2 copy known
	{2 copy get dup maxlength 27 add dict copy}
	{27 dict}
ifelse put
Adobe_CoolType_Utility
	begin
	/@eexecStartData
		 <BAB431EA07F209EB8C4348311481D9D3F76E3D15246555577D87BC510ED54E
		 118C39697FA9F6DB58128E60EB8A12FA24D7CDD2FA94D221FA9EC8DA3E5E6A1C
		 4ACECC8C2D39C54E7C946031DD156C3A6B4A09AD29E1867A>def
	/@recognizeCIDFont null def
	/ct_Level2? exch def
	/ct_Clone? 1183615869 internaldict dup
			/CCRun known not
			exch/eCCRun known not
			ct_Level2? and or def
ct_Level2?
	{globaldict begin currentglobal true setglobal}
if
	/ct_AddStdCIDMap
		ct_Level2?
			{{
				mark
				Adobe_CoolType_Utility/@recognizeCIDFont currentdict put
					{
					((Hex)57 StartData
					 0615 1e27 2c39 1c60 d8a8 cc31 fe2b f6e0
					 7aa3 e541 e21c 60d8 a8c9 c3d0 6d9e 1c60
					 d8a8 c9c2 02d7 9a1c 60d8 a849 1c60 d8a8
					 cc36 74f4 1144 b13b 77)0()/SubFileDecode filter cvx exec
					}
				stopped
					{
					 cleartomark
					 Adobe_CoolType_Utility/@recognizeCIDFont get
					 countdictstack dup array dictstack
					 exch 1 sub -1 0
						 {
						 2 copy get 3 index eq
								{1 index length exch sub 1 sub{end}repeat exit}
								{pop}
						 ifelse
						 }
					 for
					 pop pop
					 Adobe_CoolType_Utility/@eexecStartData get eexec
					}
					{cleartomark}
				ifelse
			}}
			{{
				Adobe_CoolType_Utility/@eexecStartData get eexec
			}}
		ifelse bind def
userdict/cid_extensions known
dup{cid_extensions/cid_UpdateDB known and}if
	{
	 cid_extensions
	 begin
	/cid_GetCIDSystemInfo
		{
		 1 index type/stringtype eq
			{exch cvn exch}
		 if
		 cid_extensions
			 begin
			 dup load 2 index known
				{
				 2 copy
				 cid_GetStatusInfo
				 dup null ne
					{
					 1 index load
					 3 index get
					 dup null eq
						 {pop pop cid_UpdateDB}
						 {
						 exch
						 1 index/Created get eq
							 {exch pop exch pop}
							 {pop cid_UpdateDB}
						 ifelse
						 }
					 ifelse
					}
					{pop cid_UpdateDB}
				 ifelse
				}
				{cid_UpdateDB}
			 ifelse
			 end
		}bind def
	 end
	}
if
ct_Level2?
	{end setglobal}
if
	/ct_UseNativeCapability? systemdict/composefont known def
	/ct_MakeOCF 35 dict def
	/ct_Vars 25 dict def
	/ct_GlyphDirProcs 6 dict def
	/ct_BuildCharDict 15 dict dup
		begin
		/charcode 2 string def
		/dst_string 1500 string def
		/nullstring()def
		/usewidths? true def
		end def
	ct_Level2?{setglobal}{pop}ifelse
	ct_GlyphDirProcs
		begin
		/GetGlyphDirectory
			{
			systemdict/languagelevel known
				{pop/CIDFont findresource/GlyphDirectory get}
				{
				1 index/CIDFont findresource/GlyphDirectory
				get dup type/dicttype eq
					{
					dup dup maxlength exch length sub 2 index lt
						{
						dup length 2 index add dict copy 2 index
						/CIDFont findresource/GlyphDirectory 2 index put
						}
					if
					}
				if
				exch pop exch pop
				}
			ifelse
			+
			}def
		/+
			{
			systemdict/languagelevel known
				{
				currentglobal false setglobal
				3 dict begin
					/vm exch def
				}
				{1 dict begin}
			ifelse
			/$ exch def
			systemdict/languagelevel known
				{
				vm setglobal
				/gvm currentglobal def
				$ gcheck setglobal
				}
			if
			?{$ begin}if
			}def
		/?{$ type/dicttype eq}def
		/|{
			userdict/Adobe_CoolType_Data known
				{
			Adobe_CoolType_Data/AddWidths? known
				{
				 currentdict Adobe_CoolType_Data
					begin
					 begin
						AddWidths?
								{
								Adobe_CoolType_Data/CC 3 index put
								?{def}{$ 3 1 roll put}ifelse
								CC charcode exch 1 index 0 2 index 256 idiv put
								1 index exch 1 exch 256 mod put
								stringwidth 2 array astore
								currentfont/Widths get exch CC exch put
								}
								{?{def}{$ 3 1 roll put}ifelse}
							ifelse
					end
				end
				}
				{?{def}{$ 3 1 roll put}ifelse}	ifelse
				}
				{?{def}{$ 3 1 roll put}ifelse}
			ifelse
			}def
		/!
			{
			?{end}if
			systemdict/languagelevel known
				{gvm setglobal}
			if
			end
			}def
		/:{string currentfile exch readstring pop}executeonly def
		end
	ct_MakeOCF
		begin
		/ct_cHexEncoding
		[/c00/c01/c02/c03/c04/c05/c06/c07/c08/c09/c0A/c0B/c0C/c0D/c0E/c0F/c10/c11/c12
		/c13/c14/c15/c16/c17/c18/c19/c1A/c1B/c1C/c1D/c1E/c1F/c20/c21/c22/c23/c24/c25
		/c26/c27/c28/c29/c2A/c2B/c2C/c2D/c2E/c2F/c30/c31/c32/c33/c34/c35/c36/c37/c38
		/c39/c3A/c3B/c3C/c3D/c3E/c3F/c40/c41/c42/c43/c44/c45/c46/c47/c48/c49/c4A/c4B
		/c4C/c4D/c4E/c4F/c50/c51/c52/c53/c54/c55/c56/c57/c58/c59/c5A/c5B/c5C/c5D/c5E
		/c5F/c60/c61/c62/c63/c64/c65/c66/c67/c68/c69/c6A/c6B/c6C/c6D/c6E/c6F/c70/c71
		/c72/c73/c74/c75/c76/c77/c78/c79/c7A/c7B/c7C/c7D/c7E/c7F/c80/c81/c82/c83/c84
		/c85/c86/c87/c88/c89/c8A/c8B/c8C/c8D/c8E/c8F/c90/c91/c92/c93/c94/c95/c96/c97
		/c98/c99/c9A/c9B/c9C/c9D/c9E/c9F/cA0/cA1/cA2/cA3/cA4/cA5/cA6/cA7/cA8/cA9/cAA
		/cAB/cAC/cAD/cAE/cAF/cB0/cB1/cB2/cB3/cB4/cB5/cB6/cB7/cB8/cB9/cBA/cBB/cBC/cBD
		/cBE/cBF/cC0/cC1/cC2/cC3/cC4/cC5/cC6/cC7/cC8/cC9/cCA/cCB/cCC/cCD/cCE/cCF/cD0
		/cD1/cD2/cD3/cD4/cD5/cD6/cD7/cD8/cD9/cDA/cDB/cDC/cDD/cDE/cDF/cE0/cE1/cE2/cE3
		/cE4/cE5/cE6/cE7/cE8/cE9/cEA/cEB/cEC/cED/cEE/cEF/cF0/cF1/cF2/cF3/cF4/cF5/cF6
		/cF7/cF8/cF9/cFA/cFB/cFC/cFD/cFE/cFF]def
		/ct_CID_STR_SIZE 8000 def
		/ct_mkocfStr100 100 string def
		/ct_defaultFontMtx[.001 0 0 .001 0 0]def
		/ct_1000Mtx[1000 0 0 1000 0 0]def
		/ct_raise{exch cvx exch errordict exch get exec stop}bind def
		/ct_reraise
			{cvx $error/errorname get(Error: )print dup(						 )cvs print
					errordict exch get exec stop
			}bind def
		/ct_cvnsi
			{
			1 index add 1 sub 1 exch 0 4 1 roll
				{
				2 index exch get
				exch 8 bitshift
				add
				}
			for
			exch pop
			}bind def
		/ct_GetInterval
			{
			Adobe_CoolType_Utility/ct_BuildCharDict get
				begin
				/dst_index 0 def
				dup dst_string length gt
					{dup string/dst_string exch def}
				if
				1 index ct_CID_STR_SIZE idiv
				/arrayIndex exch def
				2 index arrayIndex get
				2 index
				arrayIndex ct_CID_STR_SIZE mul
				sub
					{
					dup 3 index add 2 index length le
						{
						2 index getinterval
						dst_string dst_index 2 index putinterval
						length dst_index add/dst_index exch def
						exit
						}
						{
						1 index length 1 index sub
						dup 4 1 roll
						getinterval
						dst_string dst_index 2 index putinterval
						pop dup dst_index add/dst_index exch def
						sub
						/arrayIndex arrayIndex 1 add def
						2 index dup length arrayIndex gt
							 {arrayIndex get}
							 {
							 pop
							 exit
							 }
						ifelse
						0
						}
					ifelse
					}
				loop
				pop pop pop
				dst_string 0 dst_index getinterval
				end
			}bind def
		ct_Level2?
			{
			/ct_resourcestatus
			currentglobal mark true setglobal
				{/unknowninstancename/Category resourcestatus}
			stopped
				{cleartomark setglobal true}
				{cleartomark currentglobal not exch setglobal}
			ifelse
				{
					{
					mark 3 1 roll/Category findresource
						begin
						ct_Vars/vm currentglobal put
						({ResourceStatus}stopped)0()/SubFileDecode filter cvx exec
							{cleartomark false}
							{{3 2 roll pop true}{cleartomark false}ifelse}
						ifelse
						ct_Vars/vm get setglobal
						end
					}
				}
				{{resourcestatus}}
			ifelse bind def
			/CIDFont/Category ct_resourcestatus
				{pop pop}
				{
				currentglobal true setglobal
				/Generic/Category findresource
				dup length dict copy
				dup/InstanceType/dicttype put
				/CIDFont exch/Category defineresource pop
				setglobal
				}
			ifelse
			ct_UseNativeCapability?
				{
				/CIDInit/ProcSet findresource begin
				12 dict begin
				begincmap
				/CIDSystemInfo 3 dict dup begin
				 /Registry(Adobe)def
				 /Ordering(Identity)def
				 /Supplement 0 def
				end def
				/CMapName/Identity-H def
				/CMapVersion 1.000 def
				/CMapType 1 def
				1 begincodespacerange
				<0000><FFFF>
				endcodespacerange
				1 begincidrange
				<0000><FFFF>0
				endcidrange
				endcmap
				CMapName currentdict/CMap defineresource pop
				end
				end
				}
			if
			}
			{
			/ct_Category 2 dict begin
			/CIDFont 10 dict def
			/ProcSet	2 dict def
			currentdict
			end
			def
			/defineresource
				{
				ct_Category 1 index 2 copy known
					{
					get
					dup dup maxlength exch length eq
						{
						dup length 10 add dict copy
						ct_Category 2 index 2 index put
						}
					if
					3 index 3 index put
					pop exch pop
					}
					{pop pop/defineresource/undefined ct_raise}
				ifelse
				}bind def
			/findresource
				{
				ct_Category 1 index 2 copy known
					{
					get
					2 index 2 copy known
						{get 3 1 roll pop pop}
						{pop pop/findresource/undefinedresource ct_raise}
					ifelse
					}
					{pop pop/findresource/undefined ct_raise}
				ifelse
				}bind def
			/resourcestatus
				{
				ct_Category 1 index 2 copy known
					{
					get
					2 index known
					exch pop exch pop
						{
						0 -1 true
						}
						{
						false
						}
					ifelse
					}
					{pop pop/findresource/undefined ct_raise}
				ifelse
				}bind def
			/ct_resourcestatus/resourcestatus load def
			}
		ifelse
		/ct_CIDInit 2 dict
			begin
			/ct_cidfont_stream_init
				{
					{
					dup(Binary)eq
						{
						pop
						null
						currentfile
						ct_Level2?
							{
								{cid_BYTE_COUNT()/SubFileDecode filter}
							stopped
								{pop pop pop}
							if
							}
						if
						/readstring load
						exit
						}
					if
					dup(Hex)eq
						{
						pop
						currentfile
						ct_Level2?
							{
								{null exch/ASCIIHexDecode filter/readstring}
							stopped
								{pop exch pop(>)exch/readhexstring}
							if
							}
							{(>)exch/readhexstring}
						ifelse
						load
						exit
						}
					if
					/StartData/typecheck ct_raise
					}
				loop
				cid_BYTE_COUNT ct_CID_STR_SIZE le
					{
					2 copy cid_BYTE_COUNT string exch exec
					pop
					1 array dup
					3 -1 roll
					0 exch put
					}
					{
					cid_BYTE_COUNT ct_CID_STR_SIZE div ceiling cvi
					dup array exch 2 sub 0 exch 1 exch
						{
						2 copy
						5 index
						ct_CID_STR_SIZE
						string
						6 index exec
						pop
						put
						pop
						}
					for
					2 index
					cid_BYTE_COUNT ct_CID_STR_SIZE mod string
					3 index exec
					pop
					1 index exch
					1 index length 1 sub
					exch put
					}
				ifelse
				cid_CIDFONT exch/GlyphData exch put
				2 index null eq
					{
					pop pop pop
					}
					{
					pop/readstring load
					1 string exch
						{
						3 copy exec
						pop
						dup length 0 eq
							{
							pop pop pop pop pop
							true exit
							}
						if
						4 index
						eq
							{
							pop pop pop pop
							false exit
							}
						if
						}
					loop
					pop
					}
				ifelse
				}bind def
			/StartData
				{
				mark
					{
					currentdict
					dup/FDArray get 0 get/FontMatrix get
					0 get 0.001 eq
						{
						dup/CDevProc known not
							{
							/CDevProc 1183615869 internaldict/stdCDevProc 2 copy known
								{get}
								{
								pop pop
								{pop pop pop pop pop 0 -1000 7 index 2 div 880}
								}
							ifelse
							def
							}
						if
						}
						{
						/CDevProc
							{
							 pop pop pop pop pop
							 0
							 1 cid_temp/cid_CIDFONT get
							/FDArray get 0 get
							/FontMatrix get 0 get div
							 7 index 2 div
							 1 index 0.88 mul
							}def
						}
					ifelse
					/cid_temp 15 dict def
					cid_temp
						begin
						/cid_CIDFONT exch def
						3 copy pop
						dup/cid_BYTE_COUNT exch def 0 gt
							{
							ct_cidfont_stream_init
							FDArray
								{
								/Private get
								dup/SubrMapOffset known
									{
									begin
									/Subrs SubrCount array def
									Subrs
									SubrMapOffset
									SubrCount
									SDBytes
									ct_Level2?
										{
										currentdict dup/SubrMapOffset undef
										dup/SubrCount undef
										/SDBytes undef
										}
									if
									end
									/cid_SD_BYTES exch def
									/cid_SUBR_COUNT exch def
									/cid_SUBR_MAP_OFFSET exch def
									/cid_SUBRS exch def
									cid_SUBR_COUNT 0 gt
										{
										GlyphData cid_SUBR_MAP_OFFSET cid_SD_BYTES ct_GetInterval
										0 cid_SD_BYTES ct_cvnsi
										0 1 cid_SUBR_COUNT 1 sub
											{
											exch 1 index
											1 add
											cid_SD_BYTES mul cid_SUBR_MAP_OFFSET add
											GlyphData exch cid_SD_BYTES ct_GetInterval
											0 cid_SD_BYTES ct_cvnsi
											cid_SUBRS 4 2 roll
											GlyphData exch
											4 index
											1 index
											sub
											ct_GetInterval
											dup length string copy put
											}
										for
										pop
										}
									if
									}
									{pop}
								ifelse
								}
							forall
							}
						if
						cleartomark pop pop
						end
					CIDFontName currentdict/CIDFont defineresource pop
					end end
					}
				stopped
					{cleartomark/StartData ct_reraise}
				if
				}bind def
			currentdict
			end def
		/ct_saveCIDInit
			{
			/CIDInit/ProcSet ct_resourcestatus
				{true}
				{/CIDInitC/ProcSet ct_resourcestatus}
			ifelse
				{
				pop pop
				/CIDInit/ProcSet findresource
				ct_UseNativeCapability?
					{pop null}
					{/CIDInit ct_CIDInit/ProcSet defineresource pop}
				ifelse
				}
				{/CIDInit ct_CIDInit/ProcSet defineresource pop null}
			ifelse
			ct_Vars exch/ct_oldCIDInit exch put
			}bind def
		/ct_restoreCIDInit
			{
			ct_Vars/ct_oldCIDInit get dup null ne
				{/CIDInit exch/ProcSet defineresource pop}
				{pop}
			ifelse
			}bind def
		/ct_BuildCharSetUp
			{
			1 index
				begin
				CIDFont
					begin
					Adobe_CoolType_Utility/ct_BuildCharDict get
						begin
						/ct_dfCharCode exch def
						/ct_dfDict exch def
						CIDFirstByte ct_dfCharCode add
						dup CIDCount ge
							{pop 0}
						if
						/cid exch def
							{
							GlyphDirectory cid 2 copy known
								{get}
								{pop pop nullstring}
							ifelse
							dup length FDBytes sub 0 gt
								{
								dup
								FDBytes 0 ne
									{0 FDBytes ct_cvnsi}
									{pop 0}
								ifelse
								/fdIndex exch def
								dup length FDBytes sub FDBytes exch getinterval
								/charstring exch def
								exit
								}
								{
								pop
								cid 0 eq
									{/charstring nullstring def exit}
								if
								/cid 0 def
								}
							ifelse
							}
						loop
			}def
		/ct_SetCacheDevice
			{
			0 0 moveto
			dup stringwidth
			3 -1 roll
			true charpath
			pathbbox
			0 -1000
			7 index 2 div 880
			setcachedevice2
			0 0 moveto
			}def
		/ct_CloneSetCacheProc
			{
			1 eq
				{
				stringwidth
				pop -2 div -880
				0 -1000 setcharwidth
				moveto
				}
				{
				usewidths?
					{
					currentfont/Widths get cid
					2 copy known
						{get exch pop aload pop}
						{pop pop stringwidth}
					ifelse
					}
					{stringwidth}
				ifelse
				setcharwidth
				0 0 moveto
				}
			ifelse
			}def
		/ct_Type3ShowCharString
			{
			ct_FDDict fdIndex 2 copy known
				{get}
				{
				currentglobal 3 1 roll
				1 index gcheck setglobal
				ct_Type1FontTemplate dup maxlength dict copy
					begin
					FDArray fdIndex get
					dup/FontMatrix 2 copy known
						{get}
						{pop pop ct_defaultFontMtx}
					ifelse
					/FontMatrix exch dup length array copy def
					/Private get
					/Private exch def
					/Widths rootfont/Widths get def
					/CharStrings 1 dict dup/.notdef
						<d841272cf18f54fc13>dup length string copy put def
					currentdict
					end
				/ct_Type1Font exch definefont
				dup 5 1 roll put
				setglobal
				}
			ifelse
			dup/CharStrings get 1 index/Encoding get
			ct_dfCharCode get charstring put
			rootfont/WMode 2 copy known
				{get}
				{pop pop 0}
			ifelse
			exch
			1000 scalefont setfont
			ct_str1 0 ct_dfCharCode put
			ct_str1 exch ct_dfSetCacheProc
			ct_SyntheticBold
				{
				currentpoint
				ct_str1 show
				newpath
				moveto
				ct_str1 true charpath
				ct_StrokeWidth setlinewidth
				stroke
				}
				{ct_str1 show}
			ifelse
			}def
		/ct_Type4ShowCharString
			{
			ct_dfDict ct_dfCharCode charstring
			FDArray fdIndex get
			dup/FontMatrix get dup ct_defaultFontMtx ct_matrixeq not
				{ct_1000Mtx matrix concatmatrix concat}
				{pop}
			ifelse
			/Private get
			Adobe_CoolType_Utility/ct_Level2? get not
				{
				ct_dfDict/Private
				3 -1 roll
					{put}
				1183615869 internaldict/superexec get exec
				}
			if
			1183615869 internaldict
			Adobe_CoolType_Utility/ct_Level2? get
				{1 index}
				{3 index/Private get mark 6 1 roll}
			ifelse
			dup/RunInt known
				{/RunInt get}
				{pop/CCRun}
			ifelse
			get exec
			Adobe_CoolType_Utility/ct_Level2? get not
				{cleartomark}
			if
			}bind def
		/ct_BuildCharIncremental
			{
				{
				Adobe_CoolType_Utility/ct_MakeOCF get begin
				ct_BuildCharSetUp
				ct_ShowCharString
				}
			stopped
				{stop}
			if
			end
			end
			end
			end
			}bind def
		/BaseFontNameStr(BF00)def
		/ct_Type1FontTemplate 14 dict
			begin
			/FontType 1 def
			/FontMatrix [0.001 0 0 0.001 0 0]def
			/FontBBox [-250 -250 1250 1250]def
			/Encoding ct_cHexEncoding def
			/PaintType 0 def
			currentdict
			end def
		/BaseFontTemplate 11 dict
			begin
			/FontMatrix [0.001 0 0 0.001 0 0]def
			/FontBBox [-250 -250 1250 1250]def
			/Encoding ct_cHexEncoding def
			/BuildChar/ct_BuildCharIncremental load def
			ct_Clone?
				{
				/FontType 3 def
				/ct_ShowCharString/ct_Type3ShowCharString load def
				/ct_dfSetCacheProc/ct_CloneSetCacheProc load def
				/ct_SyntheticBold false def
				/ct_StrokeWidth 1 def
				}
				{
				/FontType 4 def
				/Private 1 dict dup/lenIV 4 put def
				/CharStrings 1 dict dup/.notdef<d841272cf18f54fc13>put def
				/PaintType 0 def
				/ct_ShowCharString/ct_Type4ShowCharString load def
				}
			ifelse
			/ct_str1 1 string def
			currentdict
			end def
		/BaseFontDictSize BaseFontTemplate length 5 add def
		/ct_matrixeq
			{
			true 0 1 5
				{
				dup 4 index exch get exch 3 index exch get eq and
				dup not
					{exit}
				if
				}
			for
			exch pop exch pop
			}bind def
		/ct_makeocf
			{
			15 dict
				begin
				exch/WMode exch def
				exch/FontName exch def
				/FontType 0 def
				/FMapType 2 def
			dup/FontMatrix known
				{dup/FontMatrix get/FontMatrix exch def}
				{/FontMatrix matrix def}
			ifelse
				/bfCount 1 index/CIDCount get 256 idiv 1 add
					dup 256 gt{pop 256}if def
				/Encoding
					256 array 0 1 bfCount 1 sub{2 copy dup put pop}for
					bfCount 1 255{2 copy bfCount put pop}for
					def
				/FDepVector bfCount dup 256 lt{1 add}if array def
				BaseFontTemplate BaseFontDictSize dict copy
					begin
					/CIDFont exch def
					CIDFont/FontBBox known
						{CIDFont/FontBBox get/FontBBox exch def}
					if
					CIDFont/CDevProc known
						{CIDFont/CDevProc get/CDevProc exch def}
					if
					currentdict
					end
				BaseFontNameStr 3(0)putinterval
				0 1 bfCount dup 256 eq{1 sub}if
					{
					FDepVector exch
					2 index BaseFontDictSize dict copy
						begin
						dup/CIDFirstByte exch 256 mul def
						FontType 3 eq
							{/ct_FDDict 2 dict def}
						if
						currentdict
						end
					1 index 16
					BaseFontNameStr 2 2 getinterval cvrs pop
					BaseFontNameStr exch definefont
					put
					}
				for
				ct_Clone?
					{/Widths 1 index/CIDFont get/GlyphDirectory get length dict def}
				if
				FontName
				currentdict
				end
			definefont
			ct_Clone?
				{
				gsave
				dup 1000 scalefont setfont
				ct_BuildCharDict
					begin
					/usewidths? false def
					currentfont/Widths get
						begin
						exch/CIDFont get/GlyphDirectory get
							{
							pop
							dup charcode exch 1 index 0 2 index 256 idiv put
							1 index exch 1 exch 256 mod put
							stringwidth 2 array astore def
							}
						forall
						end
					/usewidths? true def
					end
				grestore
				}
				{exch pop}
			ifelse
			}bind def
		currentglobal true setglobal
		/ct_ComposeFont
			{
			ct_UseNativeCapability?
				{				
				2 index/CMap ct_resourcestatus
					{pop pop exch pop}
					{
					/CIDInit/ProcSet findresource
						begin
						12 dict
							begin
							begincmap
							/CMapName 3 index def
							/CMapVersion 1.000 def
							/CMapType 1 def
							exch/WMode exch def
							/CIDSystemInfo 3 dict dup
								begin
								/Registry(Adobe)def
								/Ordering
								CMapName ct_mkocfStr100 cvs
								(Adobe-)search
									{
									pop pop
									(-)search
										{
										dup length string copy
										exch pop exch pop
										}
										{pop(Identity)}
									ifelse
									}
									{pop (Identity)}
								ifelse
								def
								/Supplement 0 def
								end def
							1 begincodespacerange
							<0000><FFFF>
							endcodespacerange
							1 begincidrange
							<0000><FFFF>0
							endcidrange
							endcmap
							CMapName currentdict/CMap defineresource pop
							end
						end
					}
				ifelse
				composefont
				}
				{
				3 2 roll pop
				0 get/CIDFont findresource
				ct_makeocf
				}
			ifelse
			}bind def
			setglobal
		/ct_MakeIdentity
			{
			ct_UseNativeCapability?
				{
				1 index/CMap ct_resourcestatus
					{pop pop}
					{
					/CIDInit/ProcSet findresource begin
					12 dict begin
					begincmap
					/CMapName 2 index def
					/CMapVersion 1.000 def
					/CMapType 1 def
					/CIDSystemInfo 3 dict dup
						begin
						/Registry(Adobe)def
						/Ordering
						CMapName ct_mkocfStr100 cvs
						(Adobe-)search
							{
							pop pop
							(-)search
								{dup length string copy exch pop exch pop}
								{pop(Identity)}
							ifelse
							}
							{pop(Identity)}
						ifelse
						def
						/Supplement 0 def
						end def
					1 begincodespacerange
					<0000><FFFF>
					endcodespacerange
					1 begincidrange
					<0000><FFFF>0
					endcidrange
					endcmap
					CMapName currentdict/CMap defineresource pop
					end
					end
					}
				ifelse
				composefont
				}
				{
				exch pop
				0 get/CIDFont findresource
				ct_makeocf
				}
			ifelse
			}bind def
		currentdict readonly pop
		end
	end
%%EndResource
setglobal
%%BeginResource: procset Adobe_CoolType_Utility_T42 1.0 0
%%Copyright: Copyright 1987-2004 Adobe Systems Incorporated.
%%Version: 1.0 0
userdict/ct_T42Dict 15 dict put
ct_T42Dict begin
/Is2015?
{
 version
 cvi
 2015
 ge
}bind def
/AllocGlyphStorage
{
 Is2015?
 {	
	pop
 }
 {
	{string}forall
 }ifelse
}bind def
/Type42DictBegin
{
25 dict begin
 /FontName exch def
 /CharStrings 256 dict 
begin
	 /.notdef 0 def
	 currentdict 
end def
 /Encoding exch def
 /PaintType 0 def
 /FontType 42 def
 /FontMatrix[1 0 0 1 0 0]def
 4 array astore cvx/FontBBox exch def
 /sfnts
}bind def
/Type42DictEnd 
{
 currentdict dup/FontName get exch definefont end
ct_T42Dict exch
dup/FontName get exch put
}bind def
/RD{string currentfile exch readstring pop}executeonly def
/PrepFor2015
{
Is2015?
{		 
	/GlyphDirectory 
	 16
	 dict def
	 sfnts 0 get
	 dup
	 2 index
	(glyx)
	 putinterval
	 2 index 
	(locx)
	 putinterval
	 pop
	 pop
}
{
	 pop
	 pop
}ifelse			
}bind def
/AddT42Char
{
Is2015?
{
	/GlyphDirectory get 
	begin
	def
	end
	pop
	pop
}
{
	/sfnts get
	4 index
	get
	3 index
 2 index
	putinterval
	pop
	pop
	pop
	pop
}ifelse
}bind def
/T0AddT42Mtx2
{
/CIDFont findresource/Metrics2 get begin def end
}bind def
end
%%EndResource
currentglobal true setglobal
%%BeginFile: MMFauxFont.prc
%%Copyright: Copyright 1987-2001 Adobe Systems Incorporated. 
%%All Rights Reserved.
userdict /ct_EuroDict 10 dict put
ct_EuroDict begin
/ct_CopyFont 
{
    { 1 index /FID ne {def} {pop pop} ifelse} forall
} def
/ct_GetGlyphOutline
{
   gsave
   initmatrix newpath
   exch findfont dup 
   length 1 add dict 
   begin 
		ct_CopyFont 
		/Encoding Encoding dup length array copy 
		dup
		4 -1 roll
		0 exch put   
		def
		currentdict
   end
   /ct_EuroFont exch definefont
   1000 scalefont setfont
   0 0 moveto
   [
       <00> stringwidth 
       <00> false charpath
       pathbbox
       [
       {/m cvx} {/l cvx} {/c cvx} {/cp cvx} pathforall
   grestore
   counttomark 8 add
}
def
/ct_MakeGlyphProc
{
   ] cvx
   /ct_PSBuildGlyph cvx
   ] cvx
} def
/ct_PSBuildGlyph 
{ 
 	gsave 
	8 -1 roll pop 
	7 1 roll 
        6 -2 roll ct_FontMatrix transform 6 2 roll
        4 -2 roll ct_FontMatrix transform 4 2 roll
        ct_FontMatrix transform 
	currentdict /PaintType 2 copy known {get 2 eq}{pop pop false} ifelse  
	dup  9 1 roll 
	{  
		currentdict /StrokeWidth 2 copy known  
		{   
			get 2 div   
			0 ct_FontMatrix dtransform pop
			5 1 roll  
			4 -1 roll 4 index sub   
			4 1 roll   
			3 -1 roll 4 index sub  
			3 1 roll   
			exch 4 index add exch  
			4 index add  
			5 -1 roll pop  
		}  
		{	 
			pop pop 
		}  
		ifelse  
	}       
    if  
	setcachedevice  
        ct_FontMatrix concat
        ct_PSPathOps begin 
		exec 
	end 
	{  
		currentdict /StrokeWidth 2 copy known  
			{ get }  
			{ pop pop 0 }  
  	    ifelse  
		setlinewidth stroke  
	}  
	{   
	    fill  
	}  
	ifelse  
    grestore
} def 
/ct_PSPathOps 4 dict dup begin 
	/m {moveto} def 
	/l {lineto} def 
	/c {curveto} def 
	/cp {closepath} def 
end 
def 
/ct_matrix1000 [1000 0 0 1000 0 0] def
/ct_AddGlyphProc  
{
   2 index findfont dup length 4 add dict 
   begin 
	ct_CopyFont 
	/CharStrings CharStrings dup length 1 add dict copy
      begin
         3 1 roll def  
         currentdict 
      end 
      def
      /ct_FontMatrix ct_matrix1000 FontMatrix matrix concatmatrix def
      /ct_PSBuildGlyph /ct_PSBuildGlyph load def
      /ct_PSPathOps /ct_PSPathOps load def
      currentdict
   end
   definefont pop
}
def
systemdict /languagelevel known
{
	/ct_AddGlyphToPrinterFont {
		2 copy
		ct_GetGlyphOutline 3 add -1 roll restore 
		ct_MakeGlyphProc 
		ct_AddGlyphProc
	} def
}
{
	/ct_AddGlyphToPrinterFont {
	    pop pop restore
		Adobe_CTFauxDict /$$$FONTNAME get
		/Euro
		Adobe_CTFauxDict /$$$SUBSTITUTEBASE get
		ct_EuroDict exch get
		ct_AddGlyphProc
	} def
} ifelse
/AdobeSansMM 
{ 
556 0 24 -19 541 703 
	{ 
	541 628 m 
	510 669 442 703 354 703 c 
	201 703 117 607 101 444 c 
	50 444 l 
	25 372 l 
	97 372 l 
	97 301 l 
	49 301 l 
	24 229 l 
	103 229 l 
	124 67 209 -19 350 -19 c 
	435 -19 501 25 509 32 c 
	509 131 l 
	492 105 417 60 343 60 c 
	267 60 204 127 197 229 c 
	406 229 l 
	430 301 l 
	191 301 l 
	191 372 l 
	455 372 l 
	479 444 l 
	194 444 l 
	201 531 245 624 348 624 c 
	433 624 484 583 509 534 c 
	cp 
	556 0 m 
	}
ct_PSBuildGlyph
} def
/AdobeSerifMM 
{ 
500 0 10 -12 484 692 
	{ 
	347 298 m 
	171 298 l 
	170 310 170 322 170 335 c 
	170 362 l 
	362 362 l 
	374 403 l 
	172 403 l 
	184 580 244 642 308 642 c 
	380 642 434 574 457 457 c 
	481 462 l 
	474 691 l 
	449 691 l 
	433 670 429 657 410 657 c 
	394 657 360 692 299 692 c 
	204 692 94 604 73 403 c 
	22 403 l 
	10 362 l 
	70 362 l 
	69 352 69 341 69 330 c 
	69 319 69 308 70 298 c 
	22 298 l 
	10 257 l 
	73 257 l 
	97 57 216 -12 295 -12 c 
	364 -12 427 25 484 123 c 
	458 142 l 
	425 101 384 37 316 37 c 
	256 37 189 84 173 257 c 
	335 257 l 
	cp 
	500 0 m 
	} 
ct_PSBuildGlyph 
} def 
end		
%%EndFile
setglobal
Adobe_CoolType_Core begin /$Oblique SetSubstituteStrategy end
%%BeginResource: procset Adobe_AGM_Image 1.0 0
%%Version: 1.0 0
%%Copyright: Copyright(C)2000-2006 Adobe Systems, Inc. All Rights Reserved.
systemdict/setpacking known
{
	currentpacking
	true setpacking
}if
userdict/Adobe_AGM_Image 71 dict dup begin put
/Adobe_AGM_Image_Id/Adobe_AGM_Image_1.0_0 def
/nd{
	null def
}bind def
/AGMIMG_&image nd
/AGMIMG_&colorimage nd
/AGMIMG_&imagemask nd
/AGMIMG_mbuf()def
/AGMIMG_ybuf()def
/AGMIMG_kbuf()def
/AGMIMG_c 0 def
/AGMIMG_m 0 def
/AGMIMG_y 0 def
/AGMIMG_k 0 def
/AGMIMG_tmp nd
/AGMIMG_imagestring0 nd
/AGMIMG_imagestring1 nd
/AGMIMG_imagestring2 nd
/AGMIMG_imagestring3 nd
/AGMIMG_imagestring4 nd
/AGMIMG_imagestring5 nd
/AGMIMG_cnt nd
/AGMIMG_fsave nd
/AGMIMG_colorAry nd
/AGMIMG_override nd
/AGMIMG_name nd
/AGMIMG_maskSource nd
/AGMIMG_flushfilters nd
/invert_image_samples nd
/knockout_image_samples	nd
/img nd
/sepimg nd
/devnimg nd
/idximg nd
/ds
{
	Adobe_AGM_Core begin
	Adobe_AGM_Image begin
	/AGMIMG_&image systemdict/image get def
	/AGMIMG_&imagemask systemdict/imagemask get def
	/colorimage where{
		pop
		/AGMIMG_&colorimage/colorimage ldf
	}if
	end
	end
}def
/ps
{
	Adobe_AGM_Image begin
	/AGMIMG_ccimage_exists{/customcolorimage where 
		{
			pop
			/Adobe_AGM_OnHost_Seps where
			{
			pop false
			}{
			/Adobe_AGM_InRip_Seps where
				{
				pop false
				}{
					true
				}ifelse
			}ifelse
			}{
			false
		}ifelse 
	}bdf
	level2{
		/invert_image_samples
		{
			Adobe_AGM_Image/AGMIMG_tmp Decode length ddf
			/Decode[Decode 1 get Decode 0 get]def
		}def
		/knockout_image_samples
		{
			Operator/imagemask ne{
				/Decode[1 1]def
			}if
		}def
	}{	
		/invert_image_samples
		{
			{1 exch sub}currenttransfer addprocs settransfer
		}def
		/knockout_image_samples
		{
			{pop 1}currenttransfer addprocs settransfer
		}def
	}ifelse
	/img/imageormask ldf
	/sepimg/sep_imageormask ldf
	/devnimg/devn_imageormask ldf
	/idximg/indexed_imageormask ldf
	/_ctype 7 def
	currentdict{
		dup xcheck 1 index type dup/arraytype eq exch/packedarraytype eq or and{
			bind
		}if
		def
	}forall
}def
/pt
{
	end
}def
/dt
{
}def
/AGMIMG_flushfilters
{
	dup type/arraytype ne
		{1 array astore}if
	dup 0 get currentfile ne
		{dup 0 get flushfile}if
		{
		dup type/filetype eq
			{
			dup status 1 index currentfile ne and
				{closefile}
				{pop}
			ifelse
			}{pop}ifelse
		}forall
}def
/AGMIMG_init_common
{
	currentdict/T known{/ImageType/T ldf currentdict/T undef}if
	currentdict/W known{/Width/W ldf currentdict/W undef}if
	currentdict/H known{/Height/H ldf currentdict/H undef}if
	currentdict/M known{/ImageMatrix/M ldf currentdict/M undef}if
	currentdict/BC known{/BitsPerComponent/BC ldf currentdict/BC undef}if
	currentdict/D known{/Decode/D ldf currentdict/D undef}if
	currentdict/DS known{/DataSource/DS ldf currentdict/DS undef}if
	currentdict/O known{
		/Operator/O load 1 eq{
			/imagemask
		}{
			/O load 2 eq{
				/image 
			}{
				/colorimage
			}ifelse
		}ifelse
		def
		currentdict/O undef
	}if
	currentdict/HSCI known{/HostSepColorImage/HSCI ldf currentdict/HSCI undef}if
	currentdict/MD known{/MultipleDataSources/MD ldf currentdict/MD undef}if
	currentdict/I known{/Interpolate/I ldf currentdict/I undef}if
	currentdict/SI known{/SkipImageProc/SI ldf currentdict/SI undef}if
	/DataSource load xcheck not{
		DataSource type/arraytype eq{
			DataSource 0 get type/filetype eq{
				/_Filters DataSource def
				currentdict/MultipleDataSources known not{
					/DataSource DataSource dup length 1 sub get def 
				}if
			}if
		}if
		currentdict/MultipleDataSources known not{
			/MultipleDataSources DataSource type/arraytype eq{
				DataSource length 1 gt
			}
			{false}ifelse def
		}if
	}if
	/NComponents Decode length 2 div def
	currentdict/SkipImageProc known not{/SkipImageProc{false}def}if
}bdf
/imageormask_sys
{
	begin
		AGMIMG_init_common
		save mark
		level2{
			currentdict
			Operator/imagemask eq{
				AGMIMG_&imagemask
			}{
				use_mask{
					process_mask AGMIMG_&image
				}{
					AGMIMG_&image
				}ifelse
			}ifelse
		}{
			Width Height
			Operator/imagemask eq{
				Decode 0 get 1 eq Decode 1 get 0 eq	and
				ImageMatrix/DataSource load
				AGMIMG_&imagemask
			}{
				BitsPerComponent ImageMatrix/DataSource load
				AGMIMG_&image
			}ifelse
		}ifelse
		currentdict/_Filters known{_Filters AGMIMG_flushfilters}if
		cleartomark restore
	end
}def
/overprint_plate
{
	currentoverprint{
		0 get dup type/nametype eq{
			dup/DeviceGray eq{
				pop AGMCORE_black_plate not
			}{
				/DeviceCMYK eq{
					AGMCORE_is_cmyk_sep not
				}if
			}ifelse
		}{
			false exch
			{
				 AGMOHS_sepink eq or
			}forall
			not
		}ifelse
	}{
		pop false
	}ifelse
}def
/process_mask
{
	level3{
		dup begin
		/ImageType 1 def
		end
		4 dict begin
			/DataDict exch def
			/ImageType 3 def
			/InterleaveType 3 def
			/MaskDict 9 dict begin
				/ImageType 1 def
				/Width DataDict dup/MaskWidth known{/MaskWidth}{/Width}ifelse get def
				/Height DataDict dup/MaskHeight known{/MaskHeight}{/Height}ifelse get def
				/ImageMatrix[Width 0 0 Height neg 0 Height]def
				/NComponents 1 def
				/BitsPerComponent 1 def
				/Decode DataDict dup/MaskD known{/MaskD}{[1 0]}ifelse get def
				/DataSource Adobe_AGM_Core/AGMIMG_maskSource get def
			currentdict end def
		currentdict end
	}if
}def
/use_mask
{
	dup/Mask known	{dup/Mask get}{false}ifelse
}def
/imageormask
{
	begin
		AGMIMG_init_common
		SkipImageProc{
			currentdict consumeimagedata
		}
		{
			save mark
			level2 AGMCORE_host_sep not and{
				currentdict
				Operator/imagemask eq DeviceN_PS2 not and{
					imagemask
				}{
					AGMCORE_in_rip_sep currentoverprint and currentcolorspace 0 get/DeviceGray eq and{
						[/Separation/Black/DeviceGray{}]setcolorspace
						/Decode[Decode 1 get Decode 0 get]def
					}if
					use_mask{
						process_mask image
					}{
						DeviceN_NoneName DeviceN_PS2 Indexed_DeviceN level3 not and or or AGMCORE_in_rip_sep and 
						{
							Names convert_to_process not{
								2 dict begin
								/imageDict xdf
								/names_index 0 def
								gsave
								imageDict write_image_file{
									Names{
										dup(None)ne{
											[/Separation 3 -1 roll/DeviceGray{1 exch sub}]setcolorspace
											Operator imageDict read_image_file
											names_index 0 eq{true setoverprint}if
											/names_index names_index 1 add def
										}{
											pop
										}ifelse
									}forall
									close_image_file
								}if
								grestore
								end
							}{
								Operator/imagemask eq{
									imagemask
								}{
									image
								}ifelse
							}ifelse
						}{
							Operator/imagemask eq{
								imagemask
							}{
								image
							}ifelse
						}ifelse
					}ifelse
				}ifelse
			}{
				Width Height
				Operator/imagemask eq{
					Decode 0 get 1 eq Decode 1 get 0 eq	and
					ImageMatrix/DataSource load
					/Adobe_AGM_OnHost_Seps where{
						pop imagemask
					}{
						currentgray 1 ne{
							currentdict imageormask_sys
						}{
							currentoverprint not{
								1 AGMCORE_&setgray
								currentdict imageormask_sys
							}{
								currentdict ignoreimagedata
							}ifelse				 		
						}ifelse
					}ifelse
				}{
					BitsPerComponent ImageMatrix 
					MultipleDataSources{
						0 1 NComponents 1 sub{
							DataSource exch get
						}for
					}{
						/DataSource load
					}ifelse
					Operator/colorimage eq{
						AGMCORE_host_sep{
							MultipleDataSources level2 or NComponents 4 eq and{
								AGMCORE_is_cmyk_sep{
									MultipleDataSources{
										/DataSource DataSource 0 get xcheck
											{
											[
											DataSource 0 get/exec cvx
											DataSource 1 get/exec cvx
											DataSource 2 get/exec cvx
											DataSource 3 get/exec cvx
											/AGMCORE_get_ink_data cvx
											]cvx
											}{
											DataSource aload pop AGMCORE_get_ink_data
											}ifelse def
									}{
										/DataSource 
										Width BitsPerComponent mul 7 add 8 idiv Height mul 4 mul 
										/DataSource load
										filter_cmyk 0()/SubFileDecode filter def
									}ifelse
									/Decode[Decode 0 get Decode 1 get]def
									/MultipleDataSources false def
									/NComponents 1 def
									/Operator/image def
									invert_image_samples
						 			1 AGMCORE_&setgray
									currentdict imageormask_sys
								}{
									currentoverprint not Operator/imagemask eq and{
 			 							1 AGMCORE_&setgray
 			 							currentdict imageormask_sys
 			 						}{
 			 							currentdict ignoreimagedata
 			 						}ifelse
								}ifelse
							}{	
								MultipleDataSources NComponents AGMIMG_&colorimage						
							}ifelse
						}{
							true NComponents colorimage
						}ifelse
					}{
						Operator/image eq{
							AGMCORE_host_sep{
								/DoImage true def
								currentdict/HostSepColorImage known{HostSepColorImage not}{false}ifelse
								{
									AGMCORE_black_plate not Operator/imagemask ne and{
										/DoImage false def
										currentdict ignoreimagedata
					 				}if
								}if
						 		1 AGMCORE_&setgray
								DoImage
									{currentdict imageormask_sys}if
							}{
								use_mask{
									process_mask image
								}{
									image
								}ifelse
							}ifelse
						}{
							Operator/knockout eq{
								pop pop pop pop pop
								currentcolorspace overprint_plate not{
									knockout_unitsq
								}if
							}if
						}ifelse
					}ifelse
				}ifelse
			}ifelse
			cleartomark restore
		}ifelse
		currentdict/_Filters known{_Filters AGMIMG_flushfilters}if
	end
}def
/sep_imageormask
{
 	/sep_colorspace_dict AGMCORE_gget begin
	CSA map_csa
	begin
	AGMIMG_init_common
	SkipImageProc{
		currentdict consumeimagedata
	}{
		save mark 
		AGMCORE_avoid_L2_sep_space{
			/Decode[Decode 0 get 255 mul Decode 1 get 255 mul]def
		}if
 		AGMIMG_ccimage_exists 
		MappedCSA 0 get/DeviceCMYK eq and
		currentdict/Components known and 
		Name()ne and 
		Name(All)ne and 
		Operator/image eq and
		AGMCORE_producing_seps not and
		level2 not and
		{
			Width Height BitsPerComponent ImageMatrix 
			[
			/DataSource load/exec cvx
			{
				0 1 2 index length 1 sub{
					1 index exch
					2 copy get 255 xor put
				}for
			}/exec cvx
			]cvx bind
			MappedCSA 0 get/DeviceCMYK eq{
				Components aload pop
			}{
				0 0 0 Components aload pop 1 exch sub
			}ifelse
			Name findcmykcustomcolor
			customcolorimage
		}{
			AGMCORE_producing_seps not{
				level2{
 					//Adobe_AGM_Core/AGMCORE_pattern_paint_type get 2 ne AGMCORE_avoid_L2_sep_space not and currentcolorspace 0 get/Separation ne and{
						[/Separation Name MappedCSA sep_proc_name exch dup 0 get 15 string cvs(/Device)anchorsearch{pop pop 0 get}{pop}ifelse exch load]setcolorspace_opt
						/sep_tint AGMCORE_gget setcolor
					}if
					currentdict imageormask
				}{
					currentdict
					Operator/imagemask eq{
						imageormask
					}{
						sep_imageormask_lev1
					}ifelse
				}ifelse
 			}{
				AGMCORE_host_sep{
					Operator/knockout eq{
						currentdict/ImageMatrix get concat
						knockout_unitsq
					}{
						currentgray 1 ne{
 							AGMCORE_is_cmyk_sep Name(All)ne and{
 								level2{
 									Name AGMCORE_IsSeparationAProcessColor 
 									{
 										Operator/imagemask eq{
 											//Adobe_AGM_Core/AGMCORE_pattern_paint_type get 2 ne{
 												/sep_tint AGMCORE_gget 1 exch sub AGMCORE_&setcolor
 											}if
 										}{
											invert_image_samples
 										}ifelse
	 								}{
	 									//Adobe_AGM_Core/AGMCORE_pattern_paint_type get 2 ne{
	 										[/Separation Name[/DeviceGray]
	 										{
	 											sep_colorspace_proc AGMCORE_get_ink_data
												1 exch sub
	 										}bind
											]AGMCORE_&setcolorspace
											/sep_tint AGMCORE_gget AGMCORE_&setcolor
										}if
 									}ifelse
 									currentdict imageormask_sys
	 							}{
	 								currentdict
									Operator/imagemask eq{
										imageormask_sys
									}{
										sep_image_lev1_sep
									}ifelse
	 							}ifelse
 							}{
 								Operator/imagemask ne{
									invert_image_samples
 								}if
		 						currentdict imageormask_sys
 							}ifelse
 						}{
 							currentoverprint not Name(All)eq or Operator/imagemask eq and{
								currentdict imageormask_sys 
								}{
								currentoverprint not
									{
 									gsave 
 									knockout_unitsq
 									grestore
									}if
								currentdict consumeimagedata 
		 					}ifelse
 						}ifelse
		 			}ifelse
 				}{
					//Adobe_AGM_Core/AGMCORE_pattern_paint_type get 2 ne{
						currentcolorspace 0 get/Separation ne{
							[/Separation Name MappedCSA sep_proc_name exch 0 get exch load]setcolorspace_opt
							/sep_tint AGMCORE_gget setcolor
						}if
					}if
					currentoverprint 
					MappedCSA 0 get/DeviceCMYK eq and 
					Name AGMCORE_IsSeparationAProcessColor not and
					//Adobe_AGM_Core/AGMCORE_pattern_paint_type get 2 ne{Name inRip_spot_has_ink not and}{false}ifelse 
					Name(All)ne and{
						imageormask_l2_overprint
					}{
						currentdict imageormask
 					}ifelse
				}ifelse
			}ifelse
		}ifelse
		cleartomark restore
	}ifelse
	currentdict/_Filters known{_Filters AGMIMG_flushfilters}if
	end
	end
}def
/colorSpaceElemCnt
{
	mark currentcolor counttomark dup 2 add 1 roll cleartomark
}bdf
/devn_sep_datasource
{
	1 dict begin
	/dataSource xdf
	[
		0 1 dataSource length 1 sub{
			dup currentdict/dataSource get/exch cvx/get cvx/exec cvx
			/exch cvx names_index/ne cvx[/pop cvx]cvx/if cvx
		}for
	]cvx bind
	end
}bdf		
/devn_alt_datasource
{
	11 dict begin
	/convProc xdf
	/origcolorSpaceElemCnt xdf
	/origMultipleDataSources xdf
	/origBitsPerComponent xdf
	/origDecode xdf
	/origDataSource xdf
	/dsCnt origMultipleDataSources{origDataSource length}{1}ifelse def
	/DataSource origMultipleDataSources
		{
			[
			BitsPerComponent 8 idiv origDecode length 2 idiv mul string
			0 1 origDecode length 2 idiv 1 sub
				{
				dup 7 mul 1 add index exch dup BitsPerComponent 8 idiv mul exch
				origDataSource exch get 0()/SubFileDecode filter
				BitsPerComponent 8 idiv string/readstring cvx/pop cvx/putinterval cvx
				}for 
			]bind cvx
		}{origDataSource}ifelse 0()/SubFileDecode filter def		
	[
		origcolorSpaceElemCnt string
		0 2 origDecode length 2 sub
			{
			dup origDecode exch get dup 3 -1 roll 1 add origDecode exch get exch sub 2 BitsPerComponent exp 1 sub div
			1 BitsPerComponent 8 idiv{DataSource/read cvx/not cvx{0}/if cvx/mul cvx}repeat/mul cvx/add cvx
			}for
		/convProc load/exec cvx
		origcolorSpaceElemCnt 1 sub -1 0
			{
			/dup cvx 2/add cvx/index cvx
			3 1/roll cvx/exch cvx 255/mul cvx/cvi cvx/put cvx
			}for
	]bind cvx 0()/SubFileDecode filter
	end
}bdf
/devn_imageormask
{
 	/devicen_colorspace_dict AGMCORE_gget begin
	CSA map_csa
	2 dict begin
	dup
	/srcDataStrs[3 -1 roll begin
		AGMIMG_init_common
		currentdict/MultipleDataSources known{MultipleDataSources{DataSource length}{1}ifelse}{1}ifelse
		{
			Width Decode length 2 div mul cvi
			{
				dup 65535 gt{1 add 2 div cvi}{exit}ifelse
			}loop
			string
		}repeat
		end]def
	/dstDataStr srcDataStrs 0 get length string def
	begin
	AGMIMG_init_common
	SkipImageProc{
		currentdict consumeimagedata
	}{
		save mark 
		AGMCORE_producing_seps not{
			level3 not{
				Operator/imagemask ne{
					/DataSource[[
						DataSource Decode BitsPerComponent currentdict/MultipleDataSources known{MultipleDataSources}{false}ifelse
						colorSpaceElemCnt/devicen_colorspace_dict AGMCORE_gget/TintTransform get 
						devn_alt_datasource 1/string cvx/readstring cvx/pop cvx]cvx colorSpaceElemCnt 1 sub{dup}repeat]def				
					/MultipleDataSources true def
					/Decode colorSpaceElemCnt[exch{0 1}repeat]def
				}if
			}if
			currentdict imageormask
 		}{
			AGMCORE_host_sep{
				Names convert_to_process{
					CSA get_csa_by_name 0 get/DeviceCMYK eq{
						/DataSource
							Width BitsPerComponent mul 7 add 8 idiv Height mul 4 mul 
							DataSource Decode BitsPerComponent currentdict/MultipleDataSources known{MultipleDataSources}{false}ifelse
							4/devicen_colorspace_dict AGMCORE_gget/TintTransform get 
							devn_alt_datasource
						filter_cmyk 0()/SubFileDecode filter def
						/MultipleDataSources false def
						/Decode[1 0]def
						/DeviceGray setcolorspace
			 			currentdict imageormask_sys
 					}{
						AGMCORE_report_unsupported_color_space
						AGMCORE_black_plate{
							/DataSource
								DataSource Decode BitsPerComponent currentdict/MultipleDataSources known{MultipleDataSources}{false}ifelse
								CSA get_csa_by_name 0 get/DeviceRGB eq{3}{1}ifelse/devicen_colorspace_dict AGMCORE_gget/TintTransform get
								devn_alt_datasource
							/MultipleDataSources false def
							/Decode colorSpaceElemCnt[exch{0 1}repeat]def
				 			currentdict imageormask_sys
				 		}{
	 						gsave 
	 						knockout_unitsq
	 						grestore
							currentdict consumeimagedata 
						}ifelse
 					}ifelse
				}
				{	
					/devicen_colorspace_dict AGMCORE_gget/names_index known{
	 					Operator/imagemask ne{
	 						MultipleDataSources{
		 						/DataSource[DataSource devn_sep_datasource/exec cvx]cvx def
								/MultipleDataSources false def
	 						}{
								/DataSource/DataSource load dstDataStr srcDataStrs 0 get filter_devn def
	 						}ifelse
							invert_image_samples
	 					}if
			 			currentdict imageormask_sys
	 				}{
	 					currentoverprint not Operator/imagemask eq and{
							currentdict imageormask_sys 
							}{
							currentoverprint not
								{
	 							gsave 
	 							knockout_unitsq
	 							grestore
								}if
							currentdict consumeimagedata 
			 			}ifelse
	 				}ifelse
	 			}ifelse
 			}{
				currentdict imageormask
			}ifelse
		}ifelse
		cleartomark restore
	}ifelse
	currentdict/_Filters known{_Filters AGMIMG_flushfilters}if
	end
	end
	end
}def
/imageormask_l2_overprint
{
	currentdict
	currentcmykcolor add add add 0 eq{
		currentdict consumeimagedata
	}{
		level3{			
			currentcmykcolor 
			/AGMIMG_k xdf 
			/AGMIMG_y xdf 
			/AGMIMG_m xdf 
			/AGMIMG_c xdf
			Operator/imagemask eq{
				[/DeviceN[
				AGMIMG_c 0 ne{/Cyan}if
				AGMIMG_m 0 ne{/Magenta}if
				AGMIMG_y 0 ne{/Yellow}if
				AGMIMG_k 0 ne{/Black}if
				]/DeviceCMYK{}]setcolorspace
				AGMIMG_c 0 ne{AGMIMG_c}if
				AGMIMG_m 0 ne{AGMIMG_m}if
				AGMIMG_y 0 ne{AGMIMG_y}if
				AGMIMG_k 0 ne{AGMIMG_k}if
				setcolor			
			}{	
				/Decode[Decode 0 get 255 mul Decode 1 get 255 mul]def
				[/Indexed 				
					[
						/DeviceN[
							AGMIMG_c 0 ne{/Cyan}if
							AGMIMG_m 0 ne{/Magenta}if
							AGMIMG_y 0 ne{/Yellow}if
							AGMIMG_k 0 ne{/Black}if
						]
						/DeviceCMYK{
							AGMIMG_k 0 eq{0}if
							AGMIMG_y 0 eq{0 exch}if
							AGMIMG_m 0 eq{0 3 1 roll}if
							AGMIMG_c 0 eq{0 4 1 roll}if						
						}
					]
					255
					{
						255 div 
						mark exch
						dup	dup dup
						AGMIMG_k 0 ne{
							/sep_tint AGMCORE_gget mul MappedCSA sep_proc_name exch pop load exec 4 1 roll pop pop pop		
							counttomark 1 roll
						}{
							pop
						}ifelse
						AGMIMG_y 0 ne{
							/sep_tint AGMCORE_gget mul MappedCSA sep_proc_name exch pop load exec 4 2 roll pop pop pop		
							counttomark 1 roll
						}{
							pop
						}ifelse
						AGMIMG_m 0 ne{
							/sep_tint AGMCORE_gget mul MappedCSA sep_proc_name exch pop load exec 4 3 roll pop pop pop		
							counttomark 1 roll
						}{
							pop
						}ifelse
						AGMIMG_c 0 ne{
							/sep_tint AGMCORE_gget mul MappedCSA sep_proc_name exch pop load exec pop pop pop		
							counttomark 1 roll
						}{
							pop
						}ifelse
						counttomark 1 add -1 roll pop
					}
				]setcolorspace
			}ifelse
			imageormask_sys
		}{
	write_image_file{
		currentcmykcolor
		0 ne{
			[/Separation/Black/DeviceGray{}]setcolorspace
			gsave
			/Black
			[{1 exch sub/sep_tint AGMCORE_gget mul}/exec cvx MappedCSA sep_proc_name cvx exch pop{4 1 roll pop pop pop 1 exch sub}/exec cvx]
			cvx modify_halftone_xfer
			Operator currentdict read_image_file
			grestore
		}if
		0 ne{
			[/Separation/Yellow/DeviceGray{}]setcolorspace
			gsave
			/Yellow
			[{1 exch sub/sep_tint AGMCORE_gget mul}/exec cvx MappedCSA sep_proc_name cvx exch pop{4 2 roll pop pop pop 1 exch sub}/exec cvx]
			cvx modify_halftone_xfer
			Operator currentdict read_image_file
			grestore
		}if
		0 ne{
			[/Separation/Magenta/DeviceGray{}]setcolorspace
			gsave
			/Magenta
			[{1 exch sub/sep_tint AGMCORE_gget mul}/exec cvx MappedCSA sep_proc_name cvx exch pop{4 3 roll pop pop pop 1 exch sub}/exec cvx]
			cvx modify_halftone_xfer
			Operator currentdict read_image_file
			grestore
		}if
		0 ne{
			[/Separation/Cyan/DeviceGray{}]setcolorspace
			gsave
			/Cyan 
			[{1 exch sub/sep_tint AGMCORE_gget mul}/exec cvx MappedCSA sep_proc_name cvx exch pop{pop pop pop 1 exch sub}/exec cvx]
			cvx modify_halftone_xfer
			Operator currentdict read_image_file
			grestore
		}if
				close_image_file
			}{
				imageormask
			}ifelse
		}ifelse
	}ifelse
}def
/indexed_imageormask
{
	begin
		AGMIMG_init_common
		save mark 
 		currentdict
 		AGMCORE_host_sep{
			Operator/knockout eq{
				/indexed_colorspace_dict AGMCORE_gget dup/CSA known{
					/CSA get get_csa_by_name
				}{
					/Names get
				}ifelse
				overprint_plate not{
					knockout_unitsq
				}if
			}{
				Indexed_DeviceN{
					/devicen_colorspace_dict AGMCORE_gget dup/names_index known exch/Names get convert_to_process or{
			 			indexed_image_lev2_sep
					}{
						currentoverprint not{
							knockout_unitsq
			 			}if
			 			currentdict consumeimagedata
					}ifelse
				}{
		 			AGMCORE_is_cmyk_sep{
						Operator/imagemask eq{
							imageormask_sys
						}{
							level2{
								indexed_image_lev2_sep
							}{
								indexed_image_lev1_sep
							}ifelse
						}ifelse
					}{
						currentoverprint not{
							knockout_unitsq
			 			}if
			 			currentdict consumeimagedata
					}ifelse
				}ifelse
			}ifelse
 		}{
			level2{
				Indexed_DeviceN{
					/indexed_colorspace_dict AGMCORE_gget begin
				}{
					/indexed_colorspace_dict AGMCORE_gget dup null ne
					{
						begin
						currentdict/CSDBase known{CSDBase/CSD get_res/MappedCSA get}{CSA}ifelse
						get_csa_by_name 0 get/DeviceCMYK eq ps_level 3 ge and ps_version 3015.007 lt and
						AGMCORE_in_rip_sep and{
							[/Indexed[/DeviceN[/Cyan/Magenta/Yellow/Black]/DeviceCMYK{}]HiVal Lookup]
							setcolorspace
						}if
						end
					}
					{pop}ifelse
				}ifelse
				imageormask
				Indexed_DeviceN{
					end
				}if
			}{
				Operator/imagemask eq{
					imageormask
				}{
					indexed_imageormask_lev1
				}ifelse
			}ifelse
 		}ifelse
		cleartomark restore
	currentdict/_Filters known{_Filters AGMIMG_flushfilters}if
	end
}def
/indexed_image_lev2_sep
{
	/indexed_colorspace_dict AGMCORE_gget begin
	begin
		Indexed_DeviceN not{
			currentcolorspace 
			dup 1/DeviceGray put
			dup 3
			currentcolorspace 2 get 1 add string
			0 1 2 3 AGMCORE_get_ink_data 4 currentcolorspace 3 get length 1 sub
			{
			dup 4 idiv exch currentcolorspace 3 get exch get 255 exch sub 2 index 3 1 roll put
			}for 
			put	setcolorspace
		}if
		currentdict 
		Operator/imagemask eq{
			AGMIMG_&imagemask
		}{
			use_mask{
				process_mask AGMIMG_&image
			}{
				AGMIMG_&image
			}ifelse
		}ifelse
	end end
}def
 /OPIimage
 {
 	dup type/dicttype ne{
 		10 dict begin
 			/DataSource xdf
 			/ImageMatrix xdf
 			/BitsPerComponent xdf
 			/Height xdf
 			/Width xdf
 			/ImageType 1 def
 			/Decode[0 1 def]
 			currentdict
 		end
 	}if
 	dup begin
 		/NComponents 1 cdndf
 		/MultipleDataSources false cdndf
 		/SkipImageProc{false}cdndf
 		/Decode[
 				0 
 				currentcolorspace 0 get/Indexed eq{
 					2 BitsPerComponent exp 1 sub
 				}{
 					1
 				}ifelse
 		]cdndf
 		/Operator/image cdndf
 	end
 	/sep_colorspace_dict AGMCORE_gget null eq{
 		imageormask
 	}{
 		gsave
 		dup begin invert_image_samples end
 		sep_imageormask
 		grestore
 	}ifelse
 }def
/cachemask_level2
{
	3 dict begin
	/LZWEncode filter/WriteFilter xdf
	/readBuffer 256 string def
	/ReadFilter
		currentfile
		0(%EndMask)/SubFileDecode filter
		/ASCII85Decode filter
		/RunLengthDecode filter
	def
	{
		ReadFilter readBuffer readstring exch
		WriteFilter exch writestring
		not{exit}if
	}loop
	WriteFilter closefile
	end
}def
/spot_alias
{
	/mapto_sep_imageormask 
	{
		dup type/dicttype ne{
			12 dict begin
				/ImageType 1 def
				/DataSource xdf
				/ImageMatrix xdf
				/BitsPerComponent xdf
				/Height xdf
				/Width xdf
				/MultipleDataSources false def
		}{
			begin
		}ifelse
				/Decode[/customcolor_tint AGMCORE_gget 0]def
				/Operator/image def
				/SkipImageProc{false}def
				currentdict 
			end
		sep_imageormask
	}bdf
	/customcolorimage
	{
		Adobe_AGM_Image/AGMIMG_colorAry xddf
		/customcolor_tint AGMCORE_gget
		<<
			/Name AGMIMG_colorAry 4 get
			/CSA[/DeviceCMYK]
			/TintMethod/Subtractive
			/TintProc null
			/MappedCSA null
			/NComponents 4 
			/Components[AGMIMG_colorAry aload pop pop]
		>>
		setsepcolorspace
		mapto_sep_imageormask
	}ndf
	Adobe_AGM_Image/AGMIMG_&customcolorimage/customcolorimage load put
	/customcolorimage
	{
		Adobe_AGM_Image/AGMIMG_override false put
		current_spot_alias{dup 4 get map_alias}{false}ifelse
		{
			false set_spot_alias
			/customcolor_tint AGMCORE_gget exch setsepcolorspace
			pop
			mapto_sep_imageormask
			true set_spot_alias
		}{
			//Adobe_AGM_Image/AGMIMG_&customcolorimage get exec
		}ifelse			
	}bdf
}def
/snap_to_device
{
	6 dict begin
	matrix currentmatrix
	dup 0 get 0 eq 1 index 3 get 0 eq and
	1 index 1 get 0 eq 2 index 2 get 0 eq and or exch pop
	{
		1 1 dtransform 0 gt exch 0 gt/AGMIMG_xSign? exch def/AGMIMG_ySign? exch def
		0 0 transform
		AGMIMG_ySign?{floor 0.1 sub}{ceiling 0.1 add}ifelse exch
		AGMIMG_xSign?{floor 0.1 sub}{ceiling 0.1 add}ifelse exch
		itransform/AGMIMG_llY exch def/AGMIMG_llX exch def
		1 1 transform
		AGMIMG_ySign?{ceiling 0.1 add}{floor 0.1 sub}ifelse exch
		AGMIMG_xSign?{ceiling 0.1 add}{floor 0.1 sub}ifelse exch
		itransform/AGMIMG_urY exch def/AGMIMG_urX exch def			
		[AGMIMG_urX AGMIMG_llX sub 0 0 AGMIMG_urY AGMIMG_llY sub AGMIMG_llX AGMIMG_llY]concat
	}{
	}ifelse
	end
}def
level2 not{
	/colorbuf
	{
		0 1 2 index length 1 sub{
			dup 2 index exch get 
			255 exch sub 
			2 index 
			3 1 roll 
			put
		}for
	}def
	/tint_image_to_color
	{
		begin
			Width Height BitsPerComponent ImageMatrix 
			/DataSource load
		end
		Adobe_AGM_Image begin
			/AGMIMG_mbuf 0 string def
			/AGMIMG_ybuf 0 string def
			/AGMIMG_kbuf 0 string def
			{
				colorbuf dup length AGMIMG_mbuf length ne
					{
					dup length dup dup
					/AGMIMG_mbuf exch string def
					/AGMIMG_ybuf exch string def
					/AGMIMG_kbuf exch string def
					}if
				dup AGMIMG_mbuf copy AGMIMG_ybuf copy AGMIMG_kbuf copy pop
			}
			addprocs
			{AGMIMG_mbuf}{AGMIMG_ybuf}{AGMIMG_kbuf}true 4 colorimage	
		end
	}def			
	/sep_imageormask_lev1
	{
		begin
			MappedCSA 0 get dup/DeviceRGB eq exch/DeviceCMYK eq or has_color not and{
				{
					255 mul round cvi GrayLookup exch get
				}currenttransfer addprocs settransfer
				currentdict imageormask
			}{
				/sep_colorspace_dict AGMCORE_gget/Components known{
					MappedCSA 0 get/DeviceCMYK eq{
						Components aload pop
					}{
						0 0 0 Components aload pop 1 exch sub
					}ifelse
					Adobe_AGM_Image/AGMIMG_k xddf 
					Adobe_AGM_Image/AGMIMG_y xddf 
					Adobe_AGM_Image/AGMIMG_m xddf 
					Adobe_AGM_Image/AGMIMG_c xddf 
					AGMIMG_y 0.0 eq AGMIMG_m 0.0 eq and AGMIMG_c 0.0 eq and{
						{AGMIMG_k mul 1 exch sub}currenttransfer addprocs settransfer
						currentdict imageormask
					}{
						currentcolortransfer
						{AGMIMG_k mul 1 exch sub}exch addprocs 4 1 roll
						{AGMIMG_y mul 1 exch sub}exch addprocs 4 1 roll
						{AGMIMG_m mul 1 exch sub}exch addprocs 4 1 roll
						{AGMIMG_c mul 1 exch sub}exch addprocs 4 1 roll
						setcolortransfer
						currentdict tint_image_to_color
					}ifelse
				}{
					MappedCSA 0 get/DeviceGray eq{
						{255 mul round cvi ColorLookup exch get 0 get}currenttransfer addprocs settransfer
						currentdict imageormask
					}{
						MappedCSA 0 get/DeviceCMYK eq{
							currentcolortransfer
							{255 mul round cvi ColorLookup exch get 3 get 1 exch sub}exch addprocs 4 1 roll
							{255 mul round cvi ColorLookup exch get 2 get 1 exch sub}exch addprocs 4 1 roll
							{255 mul round cvi ColorLookup exch get 1 get 1 exch sub}exch addprocs 4 1 roll
							{255 mul round cvi ColorLookup exch get 0 get 1 exch sub}exch addprocs 4 1 roll
							setcolortransfer 
							currentdict tint_image_to_color
						}{
							currentcolortransfer
							{pop 1}exch addprocs 4 1 roll
							{255 mul round cvi ColorLookup exch get 2 get}exch addprocs 4 1 roll
							{255 mul round cvi ColorLookup exch get 1 get}exch addprocs 4 1 roll
							{255 mul round cvi ColorLookup exch get 0 get}exch addprocs 4 1 roll
							setcolortransfer 
							currentdict tint_image_to_color
						}ifelse
					}ifelse
				}ifelse
			}ifelse
		end
	}def
	/sep_image_lev1_sep
	{
		begin
			/sep_colorspace_dict AGMCORE_gget/Components known{
				Components aload pop
				Adobe_AGM_Image/AGMIMG_k xddf 
				Adobe_AGM_Image/AGMIMG_y xddf 
				Adobe_AGM_Image/AGMIMG_m xddf 
				Adobe_AGM_Image/AGMIMG_c xddf 
				{AGMIMG_c mul 1 exch sub}
				{AGMIMG_m mul 1 exch sub}
				{AGMIMG_y mul 1 exch sub}
				{AGMIMG_k mul 1 exch sub}
			}{
				{255 mul round cvi ColorLookup exch get 0 get 1 exch sub}
				{255 mul round cvi ColorLookup exch get 1 get 1 exch sub}
				{255 mul round cvi ColorLookup exch get 2 get 1 exch sub}
				{255 mul round cvi ColorLookup exch get 3 get 1 exch sub}
			}ifelse
			AGMCORE_get_ink_data currenttransfer addprocs settransfer
			currentdict imageormask_sys
		end
	}def
	/indexed_imageormask_lev1
	{
		/indexed_colorspace_dict AGMCORE_gget begin
		begin
			currentdict
			MappedCSA 0 get dup/DeviceRGB eq exch/DeviceCMYK eq or has_color not and{
				{HiVal mul round cvi GrayLookup exch get HiVal div}currenttransfer addprocs settransfer
				imageormask
			}{
				MappedCSA 0 get/DeviceGray eq{
					{HiVal mul round cvi Lookup exch get HiVal div}currenttransfer addprocs settransfer
					imageormask
				}{
					MappedCSA 0 get/DeviceCMYK eq{
						currentcolortransfer
						{4 mul HiVal mul round cvi 3 add Lookup exch get HiVal div 1 exch sub}exch addprocs 4 1 roll
						{4 mul HiVal mul round cvi 2 add Lookup exch get HiVal div 1 exch sub}exch addprocs 4 1 roll
						{4 mul HiVal mul round cvi 1 add Lookup exch get HiVal div 1 exch sub}exch addprocs 4 1 roll
						{4 mul HiVal mul round cvi		 Lookup exch get HiVal div 1 exch sub}exch addprocs 4 1 roll
						setcolortransfer 
						tint_image_to_color
					}{
						currentcolortransfer
						{pop 1}exch addprocs 4 1 roll
						{3 mul HiVal mul round cvi 2 add Lookup exch get HiVal div}exch addprocs 4 1 roll
						{3 mul HiVal mul round cvi 1 add Lookup exch get HiVal div}exch addprocs 4 1 roll
						{3 mul HiVal mul round cvi 		Lookup exch get HiVal div}exch addprocs 4 1 roll
						setcolortransfer 
						tint_image_to_color
					}ifelse
				}ifelse
			}ifelse
		end end
	}def
	/indexed_image_lev1_sep
	{
		/indexed_colorspace_dict AGMCORE_gget begin
		begin
			{4 mul HiVal mul round cvi		 Lookup exch get HiVal div 1 exch sub}
			{4 mul HiVal mul round cvi 1 add Lookup exch get HiVal div 1 exch sub}
			{4 mul HiVal mul round cvi 2 add Lookup exch get HiVal div 1 exch sub}
			{4 mul HiVal mul round cvi 3 add Lookup exch get HiVal div 1 exch sub}
			AGMCORE_get_ink_data currenttransfer addprocs settransfer
			currentdict imageormask_sys
		end end
	}def
}if
end
systemdict/setpacking known
{setpacking}if
%%EndResource
currentdict Adobe_AGM_Utils eq {end} if
%%EndProlog
%%BeginSetup
Adobe_AGM_Utils begin
3 3010 Adobe_AGM_Core/ds gx
Adobe_CoolType_Core/ds get exec
Adobe_AGM_Image/ds gx
currentdict Adobe_AGM_Utils eq {end} if
%%EndSetup
%%Page: 1 1
%%EndPageComments
%%BeginPageSetup
%ADOBeginClientInjection: PageSetup Start "AI11EPS"
%AI12_RMC_Transparency: Balance=75 RasterRes=300 GradRes=150 Text=0 Stroke=1 Clip=1 OP=0
%ADOEndClientInjection: PageSetup Start "AI11EPS"
Adobe_AGM_Utils begin
Adobe_AGM_Core/ps gx
Adobe_AGM_Utils/capture_cpd gx
Adobe_CoolType_Core/ps get exec
Adobe_AGM_Image/ps gx
%ADOBeginClientInjection: PageSetup End "AI11EPS"
/currentdistillerparams where{pop currentdistillerparams /CoreDistVersion get 5000 lt} {true} ifelse{ userdict /AI11_PDFMark5 /cleartomark load putuserdict /AI11_ReadMetadata_PDFMark5 {flushfile cleartomark } bind put}{ userdict /AI11_PDFMark5 /pdfmark load putuserdict /AI11_ReadMetadata_PDFMark5 {/PUT pdfmark} bind put } ifelse[/NamespacePush AI11_PDFMark5[/_objdef {ai_metadata_stream_123} /type /stream /OBJ AI11_PDFMark5[{ai_metadata_stream_123}currentfile 0 (%  &&end XMP packet marker&&)/SubFileDecode filter AI11_ReadMetadata_PDFMark5<?xpacket begin="﻿" id="W5M0MpCehiHzreSzNTczkc9d"?>
<x:xmpmeta xmlns:x="adobe:ns:meta/" x:xmptk="Adobe XMP Core 5.3-c011 66.145661, 2012/02/06-14:56:27        ">
   <rdf:RDF xmlns:rdf="http://www.w3.org/1999/02/22-rdf-syntax-ns#">
      <rdf:Description rdf:about=""
            xmlns:xmp="http://ns.adobe.com/xap/1.0/"
            xmlns:xmpGImg="http://ns.adobe.com/xap/1.0/g/img/">
         <xmp:CreatorTool>Adobe Illustrator CS6 (Windows)</xmp:CreatorTool>
         <xmp:CreateDate>2017-06-12T19:46:34+02:00</xmp:CreateDate>
         <xmp:Thumbnails>
            <rdf:Alt>
               <rdf:li rdf:parseType="Resource">
                  <xmpGImg:width>256</xmpGImg:width>
                  <xmpGImg:height>256</xmpGImg:height>
                  <xmpGImg:format>JPEG</xmpGImg:format>
                  <xmpGImg:image>/9j/4AAQSkZJRgABAgEBaAFoAAD/7QAsUGhvdG9zaG9wIDMuMAA4QklNA+0AAAAAABABaAAAAAEA&#xA;AQFoAAAAAQAB/+4ADkFkb2JlAGTAAAAAAf/bAIQABgQEBAUEBgUFBgkGBQYJCwgGBggLDAoKCwoK&#xA;DBAMDAwMDAwQDA4PEA8ODBMTFBQTExwbGxscHx8fHx8fHx8fHwEHBwcNDA0YEBAYGhURFRofHx8f&#xA;Hx8fHx8fHx8fHx8fHx8fHx8fHx8fHx8fHx8fHx8fHx8fHx8fHx8fHx8fHx8f/8AAEQgBAAEAAwER&#xA;AAIRAQMRAf/EAaIAAAAHAQEBAQEAAAAAAAAAAAQFAwIGAQAHCAkKCwEAAgIDAQEBAQEAAAAAAAAA&#xA;AQACAwQFBgcICQoLEAACAQMDAgQCBgcDBAIGAnMBAgMRBAAFIRIxQVEGE2EicYEUMpGhBxWxQiPB&#xA;UtHhMxZi8CRygvElQzRTkqKyY3PCNUQnk6OzNhdUZHTD0uIIJoMJChgZhJRFRqS0VtNVKBry4/PE&#xA;1OT0ZXWFlaW1xdXl9WZ2hpamtsbW5vY3R1dnd4eXp7fH1+f3OEhYaHiImKi4yNjo+Ck5SVlpeYmZ&#xA;qbnJ2en5KjpKWmp6ipqqusra6voRAAICAQIDBQUEBQYECAMDbQEAAhEDBCESMUEFURNhIgZxgZEy&#xA;obHwFMHR4SNCFVJicvEzJDRDghaSUyWiY7LCB3PSNeJEgxdUkwgJChgZJjZFGidkdFU38qOzwygp&#xA;0+PzhJSktMTU5PRldYWVpbXF1eX1RlZmdoaWprbG1ub2R1dnd4eXp7fH1+f3OEhYaHiImKi4yNjo&#xA;+DlJWWl5iZmpucnZ6fkqOkpaanqKmqq6ytrq+v/aAAwDAQACEQMRAD8A9UKqqKKAB4DFAAHJKrSW&#xA;O11i9gnPB7pllgdtg6hQpUHxUjplpFxBDh45CGWQl/FuPP8AsWeYxb3cMenLR7uaRCgX7UYVgzOf&#xA;AUGHETE30Ya+EcgGPnIn5eauNNvY/hhuiE7A12x8SJ5hiNHljtGey+LSV9QSXMhncdAen44Dl6DZ&#xA;lj0AvimeIobzMCtrbzBapDMrOPbfLdLzI7w19qCoRl0jIJsrJJGGU8kcVBHcHMYii7IESFjkUv0Z&#xA;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&#xA;v//Z</xmpGImg:image>
               </rdf:li>
            </rdf:Alt>
         </xmp:Thumbnails>
         <xmp:MetadataDate>2017-06-12T19:46:34+02:00</xmp:MetadataDate>
         <xmp:ModifyDate>2017-06-12T19:46:34+02:00</xmp:ModifyDate>
      </rdf:Description>
      <rdf:Description rdf:about=""
            xmlns:xmpTPg="http://ns.adobe.com/xap/1.0/t/pg/"
            xmlns:stDim="http://ns.adobe.com/xap/1.0/sType/Dimensions#"
            xmlns:xmpG="http://ns.adobe.com/xap/1.0/g/">
         <xmpTPg:MaxPageSize rdf:parseType="Resource">
            <stDim:w>1000.000000</stDim:w>
            <stDim:h>1000.000000</stDim:h>
            <stDim:unit>Points</stDim:unit>
         </xmpTPg:MaxPageSize>
         <xmpTPg:NPages>1</xmpTPg:NPages>
         <xmpTPg:HasVisibleTransparency>True</xmpTPg:HasVisibleTransparency>
         <xmpTPg:HasVisibleOverprint>False</xmpTPg:HasVisibleOverprint>
         <xmpTPg:PlateNames>
            <rdf:Seq>
               <rdf:li>Cyan</rdf:li>
               <rdf:li>Magenta</rdf:li>
               <rdf:li>Yellow</rdf:li>
               <rdf:li>Black</rdf:li>
            </rdf:Seq>
         </xmpTPg:PlateNames>
         <xmpTPg:SwatchGroups>
            <rdf:Seq>
               <rdf:li rdf:parseType="Resource">
                  <xmpG:groupName>Default Swatch Group</xmpG:groupName>
                  <xmpG:groupType>0</xmpG:groupType>
               </rdf:li>
            </rdf:Seq>
         </xmpTPg:SwatchGroups>
      </rdf:Description>
      <rdf:Description rdf:about=""
            xmlns:dc="http://purl.org/dc/elements/1.1/">
         <dc:format>application/postscript</dc:format>
      </rdf:Description>
      <rdf:Description rdf:about=""
            xmlns:xmpMM="http://ns.adobe.com/xap/1.0/mm/"
            xmlns:stRef="http://ns.adobe.com/xap/1.0/sType/ResourceRef#"
            xmlns:stEvt="http://ns.adobe.com/xap/1.0/sType/ResourceEvent#">
         <xmpMM:RenditionClass>proof:pdf</xmpMM:RenditionClass>
         <xmpMM:DerivedFrom rdf:parseType="Resource">
            <stRef:renditionClass>proof:pdf</stRef:renditionClass>
         </xmpMM:DerivedFrom>
         <xmpMM:DocumentID>xmp.did:7EC2D904974FE711818CAD62D9FC4651</xmpMM:DocumentID>
         <xmpMM:InstanceID>xmp.iid:7EC2D904974FE711818CAD62D9FC4651</xmpMM:InstanceID>
         <xmpMM:OriginalDocumentID>xmp.did:7EC2D904974FE711818CAD62D9FC4651</xmpMM:OriginalDocumentID>
         <xmpMM:History>
            <rdf:Seq>
               <rdf:li rdf:parseType="Resource">
                  <stEvt:action>saved</stEvt:action>
                  <stEvt:instanceID>xmp.iid:7EC2D904974FE711818CAD62D9FC4651</stEvt:instanceID>
                  <stEvt:when>2017-06-12T19:46:34+02:00</stEvt:when>
                  <stEvt:softwareAgent>Adobe Illustrator CS6 (Windows)</stEvt:softwareAgent>
                  <stEvt:changed>/</stEvt:changed>
               </rdf:li>
            </rdf:Seq>
         </xmpMM:History>
      </rdf:Description>
   </rdf:RDF>
</x:xmpmeta>
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                           
<?xpacket end="w"?>%  &&end XMP packet marker&&[{ai_metadata_stream_123}<</Type /Metadata /Subtype /XML>>/PUT AI11_PDFMark5[/Document1 dict begin /Metadata {ai_metadata_stream_123} defcurrentdict end /BDC AI11_PDFMark5
%ADOEndClientInjection: PageSetup End "AI11EPS"
%%EndPageSetup
1 -1 scale 0 -1000 translate
pgsv
[1 0 0 1 0 0 ]ct
gsave
np
gsave
0 0 mo
0 1000 li
1000 1000 li
1000 0 li
cp
clp
gsave
0 0 mo
1000 0 li
1000 1000 li
0 1000 li
0 0 li
clp
0 0 mo
1000 0 li
1000 1000 li
0 1000 li
0 0 li
false sop
/0 
[/DeviceRGB] /CSA add_res
1 1 1 rgb
f
774.021 446.004 mo
765.931 446.004 758.084 441.728 753.884 434.15 cv
750.31 427.703 750.162 420.283 752.838 413.987 cv
753.754 415.934 754.779 417.828 755.906 419.654 cv
755.155 423.706 755.753 428.034 757.907 431.921 cv
761.267 437.982 767.545 441.403 774.016 441.403 cv
775.692 441.403 777.38 441.174 779.035 440.702 cv
780.951 441.645 782.933 442.484 784.976 443.212 cv
781.492 445.104 777.73 446.004 774.021 446.004 cv
794.14 434.113 mo
793.813 434.04 793.489 433.964 793.165 433.885 cv
792.173 433.137 791.22 432.348 790.31 431.522 cv
793.07 426.228 793.204 419.693 790.093 414.079 cv
787.254 408.959 782.333 405.722 776.972 404.841 cv
776.826 403.295 776.767 401.734 776.798 400.169 cv
783.853 401.039 790.406 405.157 794.116 411.85 cv
798.096 419.03 797.828 427.416 794.14 434.113 cv
762.732 408.451 mo
762.084 407.007 761.511 405.525 761.017 404.013 cv
761.604 403.612 762.216 403.235 762.85 402.884 cv
764.034 402.227 765.251 401.686 766.488 401.257 cv
766.497 402.878 766.582 404.488 766.743 406.09 cv
766.181 406.332 765.626 406.604 765.079 406.907 cv
764.246 407.369 763.463 407.886 762.732 408.451 cv
.498039 .921569 .960784 rgb
f
571.023 375.501 mo
570.377 375.501 569.724 375.468 569.066 375.398 cv
562.121 374.668 556.478 370.184 553.944 364.174 cv
554.607 362.331 555.392 360.516 556.299 358.74 cv
557.089 365.461 562.441 370.982 569.453 371.719 cv
569.979 371.774 570.502 371.801 571.018 371.801 cv
578.498 371.802 584.92 366.151 585.719 358.547 cv
586.25 353.49 584.169 348.761 580.563 345.703 cv
581.772 345.156 582.943 344.558 584.076 343.913 cv
587.885 347.723 590.006 353.158 589.398 358.934 cv
588.4 368.438 580.372 375.501 571.023 375.501 cv
.498039 .917647 .960784 rgb
f
301.982 711.505 mo
296.526 711.505 291.376 709.312 287.602 705.597 cv
287.749 705.595 287.896 705.595 288.043 705.595 cv
290.725 705.595 293.416 705.827 296.085 706.298 cv
297.024 706.662 298 706.941 299.001 707.128 cv
299.897 708.642 300.899 710.104 302.008 711.504 cv
302 711.504 301.99 711.505 301.982 711.505 cv
318.749 702.822 mo
317.575 702.087 316.385 701.4 315.181 700.759 cv
317.934 697.036 319.103 692.176 317.979 687.31 cv
316.376 680.365 310.58 675.478 303.882 674.704 cv
304.437 673.392 305.087 672.105 305.831 670.856 cv
313.567 672.331 320.089 678.221 321.975 686.389 cv
323.341 692.308 321.995 698.219 318.749 702.822 cv
281.772 694.334 mo
280.049 683.939 286.534 673.856 296.8 671.17 cv
296.085 672.804 295.486 674.473 295.005 676.163 cv
288.362 679.287 284.477 686.595 285.883 694.034 cv
284.509 694.085 283.137 694.185 281.772 694.334 cv
.658823 .960784 .960784 rgb
f
491.975 331.005 mo
487.876 331.005 483.925 329.991 480.42 328.157 cv
481.901 327.291 483.48 326.545 485.149 325.937 cv
485.741 325.722 486.336 325.526 486.933 325.352 cv
488.559 325.779 490.253 326.004 491.98 326.004 cv
493.358 326.004 494.756 325.861 496.158 325.563 cv
497.317 325.317 498.43 324.975 499.492 324.547 cv
501.844 324.921 504.131 325.583 506.304 326.511 cv
503.643 328.369 500.573 329.736 497.198 330.454 cv
495.447 330.826 493.697 331.005 491.975 331.005 cv
474.227 323.587 mo
474.05 323.408 473.877 323.228 473.705 323.044 cv
474.282 321.242 474.999 319.49 475.849 317.804 cv
476.682 318.943 477.629 319.983 478.671 320.912 cv
477.109 321.704 475.627 322.599 474.227 323.587 cv
511.857 321.19 mo
510.329 320.381 508.744 319.681 507.116 319.098 cv
511.073 314.524 512.917 308.215 511.562 301.842 cv
511.282 300.522 510.878 299.262 510.364 298.068 cv
512.26 298.194 514.135 298.47 515.969 298.888 cv
516.154 299.514 516.316 300.153 516.454 300.802 cv
518.033 308.233 516.134 315.593 511.857 321.19 cv
468.071 313.246 mo
467.87 312.577 467.694 311.894 467.546 311.198 cv
464.676 297.692 473.297 284.417 486.802 281.546 cv
488.553 281.174 490.303 280.995 492.025 280.995 cv
499.097 280.995 505.729 284.013 510.383 289.051 cv
509.593 289.009 508.799 288.988 508.003 288.988 cv
506.331 288.988 504.648 289.082 502.964 289.273 cv
499.77 287.179 495.981 285.996 492.02 285.996 cv
490.642 285.996 489.244 286.139 487.842 286.437 cv
478.106 288.506 471.544 297.334 472.021 306.965 cv
470.532 308.95 469.212 311.052 468.071 313.246 cv
.635294 .960784 .960784 rgb
f
586.97 797.989 mo
586.677 797.865 586.386 797.73 586.098 797.583 cv
584.351 796.693 582.892 795.462 581.76 794.013 cv
581.02 791.599 580.108 789.264 579.039 787.025 cv
579.03 786.913 579.022 786.802 579.016 786.69 cv
579.32 786.773 579.628 786.851 579.938 786.923 cv
580.518 787.057 581.097 787.167 581.675 787.254 cv
581.994 789.865 583.298 792.319 585.4 794.041 cv
585.87 795.379 586.393 796.694 586.97 797.989 cv
598.214 797.42 mo
597.785 796.666 597.379 795.9 596.999 795.121 cv
598.771 794.152 600.28 792.657 601.267 790.722 cv
602.923 787.469 602.706 783.755 601.014 780.81 cv
601.649 780.168 602.247 779.485 602.804 778.766 cv
605.333 782.552 605.797 787.557 603.583 791.902 cv
602.344 794.334 600.444 796.209 598.214 797.42 cv
582.113 782.768 mo
581.726 782.705 581.339 782.629 580.951 782.539 cv
580.484 782.431 580.026 782.306 579.576 782.165 cv
579.793 781.464 580.073 780.773 580.417 780.098 cv
580.981 778.992 581.681 778.001 582.487 777.135 cv
582.491 778.559 582.555 779.981 582.677 781.391 cv
582.454 781.842 582.266 782.302 582.113 782.768 cv
597.971 777.484 mo
597.578 777.208 597.161 776.958 596.721 776.733 cv
595.464 776.093 594.137 775.732 592.812 775.629 cv
592.84 774.765 592.896 773.9 592.98 773.034 cv
594.648 773.159 596.319 773.61 597.902 774.417 cv
598.518 774.731 599.098 775.087 599.64 775.48 cv
599.131 776.191 598.573 776.86 597.971 777.484 cv
.498039 .72549 .917647 rgb
f
281.007 439.504 mo
275.363 439.504 269.997 436.189 267.653 430.666 cv
266.812 428.685 266.446 426.623 266.502 424.604 cv
267.48 424.215 268.474 423.884 269.482 423.608 cv
269.244 425.558 269.5 427.594 270.322 429.532 cv
272.197 433.95 276.49 436.602 281.005 436.603 cv
282.517 436.603 284.053 436.306 285.532 435.678 cv
289.245 434.102 291.711 430.82 292.404 427.133 cv
293.276 427.697 294.123 428.314 294.943 428.983 cv
293.78 433.046 290.859 436.568 286.666 438.348 cv
284.817 439.132 282.896 439.504 281.007 439.504 cv
294.686 420.209 mo
293.27 419.394 291.808 418.685 290.314 418.081 cv
288.112 415.112 284.625 413.397 280.995 413.397 cv
279.483 413.397 277.947 413.694 276.468 414.322 cv
275.643 414.672 274.879 415.107 274.183 415.611 cv
272.57 415.739 270.966 415.976 269.38 416.323 cv
270.864 414.33 272.882 412.693 275.334 411.652 cv
277.183 410.868 279.104 410.496 280.993 410.496 cv
286.637 410.496 292.003 413.812 294.347 419.334 cv
294.47 419.624 294.583 419.916 294.686 420.209 cv
.552941 .901961 .960784 rgb
f
767.018 761.005 mo
765.454 761.005 763.865 760.829 762.276 760.462 cv
750.976 757.853 743.93 746.577 746.538 735.276 cv
748.781 725.565 757.423 718.995 766.982 718.995 cv
768.546 718.995 770.134 719.171 771.724 719.538 cv
783.024 722.147 790.07 733.423 787.462 744.724 cv
785.22 754.435 776.577 761.005 767.018 761.005 cv
766.984 723.196 mo
759.337 723.196 752.424 728.452 750.631 736.221 cv
748.543 745.262 754.181 754.282 763.221 756.369 cv
764.492 756.663 765.764 756.804 767.016 756.804 cv
774.663 756.804 781.576 751.548 783.369 743.779 cv
785.457 734.738 779.819 725.718 770.779 723.631 cv
769.508 723.337 768.236 723.196 766.984 723.196 cv
.509804 .956863 .960784 rgb
f
881.971 530.512 mo
867.221 530.512 853.372 523.442 844.677 511.756 cv
846.526 507.582 847.583 503.231 847.903 498.886 cv
853.835 512.521 867.354 521.208 881.977 521.209 cv
885.165 521.21 888.402 520.797 891.628 519.933 cv
902.172 517.107 910.438 510.026 915.073 501.031 cv
917.98 502.237 921.04 503.096 924.182 503.572 cv
918.581 515.626 907.878 525.206 894.035 528.916 cv
890.005 529.996 885.954 530.512 881.971 530.512 cv
839.459 502.793 mo
838.51 500.637 837.713 498.382 837.084 496.035 cv
835.626 490.592 835.196 485.114 835.676 479.811 cv
839.794 486.611 841.235 494.857 839.459 502.793 cv
926.918 496.055 mo
923.795 495.744 920.757 494.962 917.903 493.76 cv
919.579 487.618 919.699 480.965 917.933 474.372 cv
915.371 464.812 909.307 457.123 901.494 452.317 cv
902.758 449.479 904.443 446.83 906.496 444.475 cv
916.202 450.488 923.727 460.066 926.916 471.965 cv
929.11 480.154 928.976 488.418 926.918 496.055 cv
844.926 480.82 mo
843.211 476.754 840.804 472.966 837.765 469.648 cv
842.473 455.183 854.177 443.315 869.965 439.084 cv
873.995 438.004 878.045 437.488 882.029 437.488 cv
888.054 437.488 893.928 438.668 899.364 440.86 cv
897.405 443.351 895.758 446.068 894.458 448.945 cv
890.518 447.54 886.318 446.791 882.023 446.791 cv
878.835 446.791 875.597 447.203 872.372 448.067 cv
856.824 452.234 846.228 465.658 844.926 480.82 cv
.623529 .960784 .960784 rgb
f
473.494 105.624 mo
472.39 104.034 471.404 102.367 470.545 100.639 cv
472.996 100.077 475.489 99.7985 477.977 99.7985 cv
481.096 99.7985 484.205 100.236 487.205 101.099 cv
482.892 103.462 478.237 104.97 473.494 105.624 cv
461.928 105.539 mo
461.245 105.434 460.566 105.313 459.888 105.173 cv
460.357 104.867 460.834 104.573 461.313 104.293 cv
461.513 104.712 461.717 105.126 461.928 105.539 cv
450.454 101.959 mo
446.373 99.9674 442.564 97.242 439.227 93.7861 cv
423.881 77.895 424.322 52.5723 440.214 37.2265 cv
441.111 36.3601 442.039 35.5436 442.992 34.7778 cv
442.97 38.1383 443.385 41.439 444.195 44.6125 cv
433.052 56.9909 433.234 76.0647 444.981 88.229 cv
448.793 92.1761 453.374 94.9318 458.26 96.488 cv
456.253 97.5761 454.309 98.8454 452.45 100.297 cv
451.764 100.834 451.098 101.388 450.454 101.959 cv
495.276 95.2574 mo
492.365 93.9278 489.321 92.9457 486.21 92.3194 cv
487.615 91.3452 488.96 90.2449 490.23 89.019 cv
495.769 83.6697 498.962 76.8044 499.786 69.7088 cv
502.731 68.1977 505.478 66.3172 507.956 64.1119 cv
508.476 75.2031 504.401 86.4544 495.786 94.7736 cv
495.617 94.9365 495.447 95.098 495.276 95.2574 cv
499.574 60.7798 mo
498.686 55.3791 496.408 50.1573 492.729 45.6888 cv
495.461 44.7157 498.302 44.0399 501.204 43.6835 cv
503.492 47.0791 505.2 50.7433 506.332 54.5411 cv
504.39 56.9558 502.107 59.0541 499.574 60.7798 cv
451.031 38.8615 mo
450.657 35.8642 450.716 32.7709 451.26 29.6597 cv
456.56 27.2179 462.281 25.9999 467.995 25.9999 cv
477.042 25.9999 486.077 29.0492 493.429 35.1191 cv
490.299 35.9439 487.257 37.0731 484.352 38.4847 cv
479.335 35.4989 473.668 34 467.996 34 cv
462.106 34 456.21 35.6165 451.031 38.8615 cv
.584314 .87451 .917647 rgb
f
633.977 828.513 mo
627.265 828.513 620.445 827.194 613.877 824.406 cv
601.397 819.109 592.09 809.466 586.97 797.989 cv
588.602 798.675 590.306 799.003 591.989 799.003 cv
594.168 799.003 596.311 798.453 598.214 797.42 cv
602.526 804.99 609.264 811.258 617.902 814.925 cv
623.155 817.154 628.613 818.21 633.981 818.21 cv
650.018 818.211 665.264 808.79 671.925 793.098 cv
680.815 772.152 671.043 747.966 650.098 739.075 cv
644.845 736.845 639.387 735.789 634.019 735.789 cv
632.698 735.789 631.382 735.853 630.076 735.979 cv
631.749 732.754 632.75 729.183 632.964 725.497 cv
633.316 725.49 633.671 725.486 634.023 725.486 cv
640.735 725.486 647.555 726.806 654.123 729.594 cv
680.305 740.707 692.519 770.941 681.406 797.123 cv
673.081 816.737 654.021 828.513 633.977 828.513 cv
591.991 796.402 mo
590.403 796.402 588.79 796.037 587.278 795.267 cv
586.596 794.919 585.969 794.507 585.4 794.041 cv
584.647 791.894 584.033 789.691 583.568 787.457 cv
584.054 787.489 584.538 787.505 585.021 787.505 cv
588.063 787.505 591.019 786.884 593.734 785.737 cv
594.442 788.988 595.54 792.139 596.999 795.121 cv
595.47 795.957 593.745 796.402 591.991 796.402 cv
585.016 783.004 mo
584.291 783.004 583.56 782.96 582.826 782.87 cv
582.769 782.378 582.72 781.885 582.677 781.391 cv
582.696 781.353 582.714 781.316 582.733 781.278 cv
584.57 777.673 588.221 775.598 592.008 775.598 cv
592.276 775.598 592.544 775.608 592.812 775.629 cv
592.751 777.472 592.815 779.31 592.999 781.125 cv
590.558 782.338 587.834 783.004 585.016 783.004 cv
582.487 777.135 mo
582.466 770.373 583.784 763.496 586.594 756.877 cv
587.915 753.764 589.506 750.849 591.329 748.147 cv
594.705 749.41 597.525 751.621 599.546 754.396 cv
598.22 756.423 597.055 758.595 596.075 760.902 cv
594.39 764.872 593.376 768.958 592.98 773.034 cv
592.657 773.009 592.333 772.997 592.011 772.997 cv
588.439 772.997 584.964 774.474 582.487 777.135 cv
602.323 750.64 mo
601.952 750.192 601.564 749.758 601.158 749.339 cv
601.804 749.488 602.458 749.614 603.116 749.714 cv
602.848 750.018 602.583 750.327 602.323 750.64 cv
606.998 744.806 mo
603.207 744.806 599.523 743.76 596.334 741.858 cv
604.63 732.966 615.809 727.351 627.72 725.875 cv
627.337 730.081 625.676 734.068 623.001 737.294 cv
617.682 738.77 612.683 741.304 608.332 744.763 cv
607.886 744.792 607.442 744.806 606.998 744.806 cv
.498039 .792157 .819608 rgb
f
591.989 799.003 mo
590.306 799.003 588.602 798.675 586.97 797.989 cv
586.393 796.694 585.87 795.379 585.4 794.041 cv
585.969 794.507 586.596 794.919 587.278 795.267 cv
588.79 796.037 590.403 796.402 591.991 796.402 cv
593.745 796.402 595.47 795.957 596.999 795.121 cv
597.379 795.9 597.785 796.666 598.214 797.42 cv
596.311 798.453 594.168 799.003 591.989 799.003 cv
582.677 781.391 mo
582.555 779.981 582.491 778.559 582.487 777.135 cv
584.964 774.474 588.439 772.997 592.011 772.997 cv
592.333 772.997 592.657 773.009 592.98 773.034 cv
592.896 773.9 592.84 774.765 592.812 775.629 cv
592.544 775.608 592.276 775.598 592.008 775.598 cv
588.221 775.598 584.57 777.673 582.733 781.278 cv
582.714 781.316 582.696 781.353 582.677 781.391 cv
.247059 .654902 .780392 rgb
f
902.616 917.736 mo
903.528 914.639 904.809 911.664 906.429 908.877 cv
911.106 907.604 915.564 905.245 919.412 901.78 cv
922.71 898.811 925.247 895.31 927.01 891.526 cv
927.113 891.488 927.215 891.45 927.319 891.412 cv
930.314 890.322 933.355 889.612 936.389 889.257 cv
934.377 896.143 930.488 902.573 924.766 907.726 cv
918.351 913.501 910.583 916.817 902.616 917.736 cv
892.312 917.595 mo
883.363 916.314 874.797 912.009 868.274 904.766 cv
865.366 901.536 863.082 897.963 861.413 894.194 cv
863.712 892.536 865.857 890.701 867.837 888.71 cv
869.199 892.551 871.323 896.195 874.22 899.412 cv
879.768 905.574 887.168 909.079 894.816 909.841 cv
893.775 912.349 892.936 914.941 892.312 917.595 cv
858.356 883.351 mo
856.66 870.701 861.034 857.459 871.234 848.274 cv
871.598 847.947 871.966 847.627 872.339 847.315 cv
872.81 851.429 872.656 855.494 871.946 859.409 cv
868.784 863.831 866.872 868.902 866.237 874.112 cv
864.082 877.546 861.43 880.663 858.356 883.351 cv
929.922 880.238 mo
930.507 871.88 927.829 863.305 921.78 856.588 cv
915.462 849.57 906.743 846 897.99 846 cv
892.83 846 887.659 847.24 882.959 849.747 cv
882.835 846.974 882.488 844.175 881.902 841.371 cv
887.028 839.116 892.513 838 897.987 838 cv
908.929 838 919.827 842.463 927.725 851.234 cv
934.872 859.172 938.254 869.183 937.986 879.078 cv
935.301 879.241 932.608 879.624 929.922 880.238 cv
.498039 .878431 .847059 rgb
f
482.034 74.0086 mo
479.128 74.0086 476.179 73.682 473.227 73.0004 cv
471.467 72.5941 469.763 72.0747 468.12 71.4514 cv
468.391 70.5663 468.694 69.6858 469.03 68.8085 cv
469.638 67.2245 470.337 65.702 471.118 64.2448 cv
472.363 64.7062 473.653 65.0939 474.981 65.4005 cv
477.343 65.9455 479.703 66.2069 482.027 66.2069 cv
488.395 66.207 494.489 64.245 499.574 60.7798 cv
500.06 63.7344 500.13 66.741 499.786 69.7088 cv
494.383 72.4812 488.314 74.0086 482.034 74.0086 cv
459.261 66.6976 mo
451.79 61.3328 446.455 53.4715 444.195 44.6125 cv
444.697 44.0542 445.222 43.5108 445.771 42.981 cv
447.41 41.3977 449.174 40.0252 451.031 38.8615 cv
452.04 46.9429 456.198 54.314 462.501 59.3655 cv
461.483 61.2443 460.574 63.2122 459.788 65.2606 cv
459.604 65.7388 459.429 66.2173 459.261 66.6976 cv
.498039 .737255 .913725 rgb
f
507.956 64.1119 mo
507.804 60.8827 507.264 57.6669 506.332 54.5411 cv
508.817 51.4513 510.744 47.8433 511.923 43.8371 cv
514.456 44.2227 516.988 44.8614 519.485 45.7666 cv
517.39 53.0857 513.301 59.3536 507.956 64.1119 cv
520.999 35.8253 mo
518.412 35.0003 515.804 34.4001 513.192 34.0143 cv
512.764 20.1975 503.122 7.85538 489.018 4.59953 cv
486.657 4.05449 484.297 3.79306 481.973 3.79306 cv
467.771 3.79306 454.93 13.5529 451.6 27.9814 cv
451.47 28.5409 451.357 29.1008 451.26 29.6597 cv
448.355 30.9979 445.576 32.703 442.992 34.7778 cv
443.011 31.9561 443.339 29.0912 444 26.227 cv
446.743 14.3461 454.646 4.99685 464.794 0 cv
499.224 0 li
512.771 6.65266 521.335 20.683 520.999 35.8253 cv
f
499.786 69.7088 mo
500.13 66.741 500.06 63.7344 499.574 60.7798 cv
502.107 59.0541 504.39 56.9558 506.332 54.5411 cv
507.264 57.6669 507.804 60.8827 507.956 64.1119 cv
505.478 66.3172 502.731 68.1977 499.786 69.7088 cv
444.195 44.6125 mo
443.385 41.439 442.97 38.1383 442.992 34.7778 cv
445.576 32.703 448.355 30.9979 451.26 29.6597 cv
450.716 32.7709 450.657 35.8642 451.031 38.8615 cv
449.174 40.0252 447.41 41.3977 445.771 42.981 cv
445.222 43.5108 444.697 44.0542 444.195 44.6125 cv
.290196 .67451 .87451 rgb
f
499.224 1000 mo
464.794 1000 li
470.05 997.412 475.909 995.992 481.966 995.992 cv
484.872 995.992 487.821 996.318 490.773 997 cv
493.76 997.689 496.586 998.704 499.224 1000 cv
.498039 .737255 .913725 rgb
f
659.985 623.503 mo
657.279 623.503 654.535 622.837 652.001 621.432 cv
644.03 617.014 641.15 606.971 645.568 599.001 cv
648.581 593.565 654.211 590.497 660.015 590.497 cv
662.721 590.497 665.465 591.164 667.999 592.568 cv
675.97 596.986 678.849 607.029 674.432 614.999 cv
671.419 620.435 665.789 623.503 659.985 623.503 cv
660.012 593.798 mo
655.368 593.798 650.866 596.252 648.455 600.6 cv
644.921 606.976 647.225 615.011 653.601 618.545 cv
655.628 619.669 657.823 620.202 659.988 620.202 cv
664.631 620.203 669.134 617.748 671.545 613.399 cv
675.079 607.023 672.775 598.989 666.399 595.455 cv
664.372 594.332 662.176 593.798 660.012 593.798 cv
.509804 .960784 .960784 rgb
f
849.037 673.004 mo
837.569 673.004 826.282 668.203 818.326 659.212 cv
819.419 649.614 815.526 640.039 808.04 633.926 cv
807.402 620.112 813.77 606.308 826.073 598.01 cv
833.104 593.268 841.076 590.996 848.963 590.996 cv
862.135 590.996 875.07 597.331 882.99 609.073 cv
895.652 627.846 890.699 653.328 871.927 665.99 cv
864.896 670.732 856.924 673.004 849.037 673.004 cv
849.458 664.8 mo
850.297 664.935 851.143 665.001 851.986 665.001 cv
854.696 665.001 857.384 664.314 859.773 662.989 cv
862.391 662.077 864.935 660.816 867.342 659.192 cv
882.359 649.062 886.322 628.677 876.192 613.658 cv
869.857 604.266 859.507 599.197 848.97 599.197 cv
842.659 599.197 836.284 601.013 830.658 604.807 cv
815.641 614.937 811.678 635.323 821.807 650.342 cv
828.143 659.734 838.493 664.802 849.03 664.803 cv
849.173 664.803 849.315 664.802 849.458 664.8 cv
811.734 649.11 mo
811.223 647.999 810.764 646.872 810.359 645.735 cv
810.906 646.822 811.366 647.95 811.734 649.11 cv
.72549 .960784 .960784 rgb
f
950 363.4 mo
934.315 363.4 921.6 350.685 921.6 335 cv
921.6 330.83 922.498 326.87 924.113 323.303 cv
924.053 324.01 924.017 324.722 924.005 325.441 cv
923.711 342.285 936.486 356.315 952.986 357.859 cv
952.983 359.652 953.062 361.444 953.221 363.219 cv
952.164 363.339 951.089 363.4 950 363.4 cv
972.534 362.433 mo
979.503 356.702 984.249 348.369 985.286 338.917 cv
986.959 335.131 987.918 330.957 987.995 326.558 cv
988.047 323.589 987.693 320.709 986.984 317.967 cv
989.301 316.523 991.731 315.285 994.251 314.263 cv
995.455 318.19 996.07 322.369 995.994 326.698 cv
995.716 342.641 986.143 356.244 972.534 362.433 cv
964.806 359.24 mo
964.784 358.42 964.783 357.598 964.804 356.774 cv
966.87 356.184 968.85 355.391 970.724 354.419 cv
968.981 356.278 966.991 357.903 964.806 359.24 cv
918.003 319.604 mo
919.209 314.075 921.508 308.688 924.957 303.763 cv
931.118 294.964 939.916 289.109 949.536 286.519 cv
951.636 286.177 953.792 286 955.987 286 cv
956.224 286 956.46 286.002 956.698 286.006 cv
970.239 286.242 982.091 293.182 989.147 303.605 cv
986.662 304.648 984.25 305.859 981.923 307.236 cv
976.221 299.37 967.02 294.188 956.559 294.005 cv
956.369 294.002 956.177 294 955.988 294 cv
946.905 294 938.679 297.799 932.843 303.914 cv
926.414 307.47 921.205 312.962 918.003 319.604 cv
.498039 .952941 .952941 rgb
f
600.741 274.231 mo
601.066 272.964 601.448 271.707 601.892 270.457 cv
605.971 268.164 608.342 263.677 607.964 259.037 cv
608.752 257.972 609.581 256.952 610.45 255.976 cv
612.591 263.641 608.35 271.697 600.741 274.231 cv
589.69 273.608 mo
589.28 273.418 588.878 273.209 588.486 272.982 cv
587.787 272.46 587.071 271.958 586.343 271.48 cv
584.265 269.736 582.635 267.406 581.734 264.635 cv
579.174 256.756 583.486 248.294 591.365 245.734 cv
592.905 245.234 594.467 244.996 596.003 244.996 cv
598.767 244.996 601.445 245.765 603.757 247.161 cv
603.049 247.896 602.358 248.655 601.688 249.434 cv
599.961 248.504 598.01 247.997 596.002 247.997 cv
594.773 247.997 593.524 248.187 592.292 248.587 cv
585.988 250.635 582.539 257.405 584.587 263.708 cv
585.595 266.808 587.745 269.218 590.419 270.623 cv
590.147 271.615 589.904 272.61 589.69 273.608 cv
.572549 .960784 .960784 rgb
f
387.218 642.483 mo
372.878 642.012 359.091 635.972 349.019 625.516 cv
351.549 622.707 354.517 620.371 357.771 618.578 cv
364.57 625.3 373.341 629.597 382.661 630.95 cv
383.756 634.891 385.272 638.756 387.218 642.483 cv
400.351 641.339 mo
398.158 638.043 396.429 634.565 395.151 630.984 cv
397.453 630.661 399.748 630.154 402.021 629.454 cv
402.177 629.691 402.331 629.929 402.481 630.17 cv
403.097 632.845 403.907 635.507 404.919 638.144 cv
405.153 638.753 405.395 639.354 405.646 639.951 cv
403.892 640.505 402.124 640.967 400.351 641.339 cv
416.463 635.232 mo
416.281 634.798 416.105 634.358 415.935 633.915 cv
414.698 630.695 413.839 627.421 413.334 624.145 cv
419.52 620.104 424.432 614.687 427.849 608.504 cv
430.781 610.781 433.974 612.711 437.354 614.25 cv
432.556 622.781 425.466 630.119 416.463 635.232 cv
343.626 618.977 mo
341.768 616.333 340.114 613.487 338.7 610.455 cv
337.66 608.224 336.781 605.961 336.058 603.675 cv
339.908 599.374 342.796 594.39 344.636 589.065 cv
344.896 594.685 346.235 600.349 348.76 605.765 cv
349.793 607.98 350.986 610.07 352.317 612.028 cv
349.147 613.935 346.219 616.265 343.626 618.977 cv
441.289 605.602 mo
437.785 604.007 434.532 601.887 431.658 599.319 cv
433.579 592.674 433.963 585.56 432.6 578.553 cv
435.675 576.365 439.065 574.513 442.733 573.071 cv
445.589 584.036 444.935 595.355 441.289 605.602 cv
333.739 592.303 mo
332.893 583.492 334.193 574.693 337.375 566.627 cv
339.577 575.391 338.196 584.625 333.739 592.303 cv
346.95 572.747 mo
346.662 567.176 345.285 561.596 342.737 556.327 cv
348.195 548.078 355.924 541.186 365.545 536.7 cv
373.131 533.163 381.112 531.487 388.964 531.487 cv
400.094 531.487 410.972 534.85 420.134 541.045 cv
417.793 543.929 415.796 547.079 414.186 550.426 cv
406.799 545.349 397.988 542.589 388.971 542.589 cv
382.688 542.589 376.305 543.929 370.235 546.76 cv
358.802 552.091 350.705 561.674 346.95 572.747 cv
422.686 558.058 mo
422.36 557.679 422.03 557.306 421.693 556.94 cv
423.123 553.357 425.09 550.012 427.518 547.022 cv
430.221 549.625 432.684 552.529 434.851 555.714 cv
430.757 556.066 426.679 556.843 422.686 558.058 cv
.498039 .941176 .858823 rgb
f
143.709 297.494 mo
124.419 296.952 106.865 284.079 101.263 264.541 cv
94.5003 240.959 107.651 216.385 130.754 208.787 cv
131.215 210.537 131.797 212.242 132.492 213.895 cv
131.054 215.673 129.737 217.552 128.553 219.52 cv
113.265 227.242 105.115 244.963 110.01 262.033 cv
114.59 278.004 129.156 288.408 144.982 288.409 cv
145.68 288.409 146.38 288.389 147.082 288.348 cv
150.501 290.239 154.167 291.736 158.02 292.781 cv
153.079 293.645 148.251 295.223 143.709 297.494 cv
171 284.6 mo
168.193 284.6 165.455 284.308 162.813 283.753 cv
177.216 275.689 184.737 258.522 179.99 241.967 cv
179.416 239.966 178.686 238.054 177.816 236.238 cv
180.785 235.454 183.629 234.321 186.294 232.879 cv
187.262 234.975 188.081 237.17 188.737 239.459 cv
193.448 255.886 188.496 272.793 177.248 284.11 cv
175.213 284.433 173.126 284.6 171 284.6 cv
173.48 229.317 mo
166.632 220.726 156.135 215.591 145.018 215.591 cv
144.837 215.591 144.657 215.592 144.476 215.595 cv
148.042 212.376 152.196 209.797 156.758 208.038 cv
167.11 210.818 176.302 217.208 182.483 226.185 cv
179.691 227.675 176.659 228.743 173.48 229.317 cv
138.449 207.708 mo
138.379 207.472 138.312 207.236 138.248 206.999 cv
138.659 206.936 139.072 206.88 139.483 206.829 cv
139.134 207.117 138.789 207.411 138.449 207.708 cv
.615686 .956863 .960784 rgb
f
161.022 416.001 mo
151.212 416.001 141.504 411.647 134.996 403.316 cv
129.328 396.062 127.173 387.18 128.279 378.72 cv
130.096 380.741 132.096 382.647 134.275 384.412 cv
134.401 384.513 134.527 384.614 134.653 384.714 cv
134.981 389.832 136.801 394.908 140.196 399.254 cv
145.402 405.917 153.17 409.401 161.018 409.401 cv
165.457 409.401 169.921 408.287 173.963 406.002 cv
173.986 406.002 174.009 406.002 174.032 406.002 cv
178.163 406.002 182.309 405.396 186.331 404.161 cv
184.863 405.914 183.191 407.54 181.317 409.004 cv
175.285 413.716 168.126 416.001 161.022 416.001 cv
183.922 396.111 mo
184.576 394.967 185.139 393.781 185.611 392.564 cv
188.044 391.634 190.418 390.517 192.708 389.216 cv
192.834 389.684 192.968 390.146 193.113 390.606 cv
193.014 391.024 192.907 391.44 192.792 391.854 cv
189.996 393.744 187.006 395.159 183.922 396.111 cv
187.269 380.341 mo
186.789 375.545 184.99 370.825 181.804 366.747 cv
176.598 360.083 168.829 356.599 160.982 356.599 cv
155.298 356.599 149.573 358.426 144.747 362.196 cv
143.138 363.453 141.714 364.86 140.48 366.38 cv
140.25 363.089 140.504 359.785 141.229 356.578 cv
147.144 352.149 154.087 349.998 160.977 349.998 cv
170.788 349.998 180.496 354.353 187.004 362.683 cv
189.379 365.723 191.138 369.049 192.298 372.51 cv
192.118 373.347 191.967 374.198 191.846 375.059 cv
191.727 375.901 191.64 376.738 191.582 377.573 cv
190.194 378.591 188.753 379.514 187.269 380.341 cv
.498039 .831372 .960784 rgb
f
439.992 419.51 mo
423.762 419.51 408.671 409.167 403.385 392.897 cv
396.813 372.675 407.881 350.955 428.103 344.384 cv
432.055 343.1 436.066 342.489 440.008 342.489 cv
446.89 342.489 453.568 344.35 459.38 347.733 cv
458.933 350.738 458.864 353.822 459.205 356.917 cv
453.808 352.622 447.04 350.192 440.006 350.192 cv
436.851 350.192 433.645 350.68 430.483 351.708 cv
414.305 356.964 405.451 374.34 410.707 390.518 cv
414.936 403.533 427.012 411.807 439.994 411.808 cv
443.149 411.809 446.355 411.32 449.517 410.293 cv
462.988 405.916 471.38 393.137 470.778 379.643 cv
473.064 381.718 475.599 383.481 478.312 384.899 cv
476.807 399.602 466.858 412.755 451.898 417.615 cv
447.945 418.9 443.934 419.51 439.992 419.51 cv
478.234 376.419 mo
473.666 373.155 470.002 368.524 467.937 362.85 cv
466.726 359.523 466.166 356.118 466.193 352.774 cv
466.787 353.324 467.366 353.895 467.926 354.484 cv
469.762 358.088 472.041 361.359 474.672 364.255 cv
475.419 365.805 476.069 367.422 476.615 369.103 cv
477.404 371.53 477.938 373.979 478.234 376.419 cv
.533333 .890196 .960784 rgb
f
940.783 277.844 mo
940.335 277.305 939.914 276.737 939.524 276.139 cv
940.82 276.429 942.127 276.674 943.446 276.873 cv
942.552 277.173 941.662 277.498 940.783 277.844 cv
971.198 274.94 mo
970.719 274.85 970.238 274.766 969.758 274.689 cv
969.762 274.688 969.765 274.687 969.768 274.686 cv
970.406 274.478 971.04 274.26 971.666 274.033 cv
971.518 274.339 971.362 274.642 971.198 274.94 cv
940.276 264.486 mo
939.063 264.166 937.864 263.795 936.685 263.378 cv
937.529 257.517 941.167 252.163 946.891 249.372 cv
949.501 248.099 952.265 247.496 954.986 247.496 cv
961.838 247.496 968.422 251.317 971.628 257.89 cv
972.128 258.915 972.525 259.964 972.822 261.025 cv
971.712 261.586 970.572 262.107 969.403 262.583 cv
969.155 261.543 968.79 260.514 968.302 259.512 cv
965.737 254.254 960.47 251.197 954.989 251.197 cv
952.811 251.197 950.6 251.679 948.512 252.698 cv
943.744 255.023 940.786 259.572 940.276 264.486 cv
.603922 .960784 .960784 rgb
f
863.973 965.506 mo
857.034 965.506 850.481 962.865 845.513 958.362 cv
847.005 957.21 848.595 956.151 850.279 955.198 cv
854.102 958.244 858.912 960.005 863.978 960.005 cv
865.494 960.005 867.032 959.847 868.574 959.52 cv
873.806 958.407 878.206 955.52 881.276 951.622 cv
883.106 952.16 884.896 952.828 886.633 953.621 cv
882.782 959.202 876.874 963.378 869.718 964.899 cv
867.791 965.309 865.867 965.506 863.973 965.506 cv
839.45 950.407 mo
838.404 948.335 837.606 946.095 837.101 943.718 cv
833.943 928.861 843.427 914.259 858.282 911.101 cv
860.209 910.691 862.133 910.494 864.027 910.494 cv
876.735 910.494 888.151 919.353 890.899 932.282 cv
891.786 936.456 891.675 940.611 890.728 944.497 cv
889.038 943.728 887.307 943.054 885.545 942.478 cv
886.149 939.578 886.175 936.509 885.519 933.426 cv
883.321 923.083 874.188 915.995 864.022 915.995 cv
862.506 915.995 860.968 916.153 859.426 916.481 cv
847.541 919.007 839.955 930.69 842.48 942.574 cv
842.831 944.226 843.359 945.794 844.04 947.264 cv
842.437 948.236 840.906 949.286 839.45 950.407 cv
.737255 .960784 .960784 rgb
f
852.989 301.009 mo
848.998 301.009 844.941 300.257 841.013 298.67 cv
824.626 292.049 816.71 273.399 823.33 257.013 cv
828.363 244.555 840.352 236.992 853.011 236.992 cv
857.003 236.992 861.059 237.743 864.987 239.33 cv
869.536 241.168 873.431 243.932 876.545 247.318 cv
875.753 247.826 874.979 248.375 874.223 248.966 cv
873.27 249.71 872.372 250.501 871.533 251.33 cv
869.094 248.769 866.082 246.675 862.59 245.264 cv
859.448 243.995 856.201 243.393 853.008 243.393 cv
842.881 243.393 833.291 249.443 829.264 259.41 cv
823.968 272.519 830.301 287.439 843.41 292.736 cv
846.552 294.005 849.799 294.607 852.991 294.607 cv
858.266 294.607 863.393 292.966 867.666 289.986 cv
868.075 290.594 868.508 291.191 868.966 291.778 cv
869.844 292.902 870.786 293.948 871.781 294.914 cv
866.353 298.841 859.767 301.009 852.989 301.009 cv
876.376 290.866 mo
875.449 290.001 874.578 289.053 873.772 288.022 cv
873.226 287.323 872.724 286.604 872.266 285.868 cv
874.106 283.767 875.631 281.325 876.736 278.59 cv
879.792 271.026 878.976 262.858 875.22 256.284 cv
876.061 255.392 876.981 254.551 877.978 253.773 cv
878.71 253.2 879.465 252.677 880.238 252.201 cv
885.387 260.565 886.631 271.182 882.67 280.987 cv
881.149 284.752 878.993 288.069 876.376 290.866 cv
.603922 .960784 .960784 rgb
f
277.019 675.504 mo
275.491 675.504 273.941 675.333 272.389 674.974 cv
262.392 672.667 255.807 663.412 256.553 653.487 cv
257.897 653.707 259.259 653.859 260.632 653.94 cv
260.112 661.823 265.364 669.145 273.311 670.979 cv
274.552 671.266 275.794 671.404 277.015 671.404 cv
284.481 671.404 291.229 666.274 292.98 658.689 cv
294.216 653.333 292.675 647.983 289.299 644.15 cv
290.333 643.247 291.316 642.293 292.247 641.294 cv
296.556 646.095 298.536 652.849 296.975 659.611 cv
294.786 669.091 286.349 675.504 277.019 675.504 cv
262.976 646.008 mo
261.541 646.008 260.116 645.91 258.715 645.72 cv
262.188 638.865 269.281 634.495 276.981 634.495 cv
278.509 634.495 280.059 634.667 281.611 635.025 cv
283.081 635.365 284.477 635.854 285.787 636.474 cv
284.72 637.558 283.574 638.568 282.351 639.496 cv
281.812 639.311 281.258 639.152 280.689 639.021 cv
279.448 638.734 278.206 638.596 276.985 638.596 cv
271.434 638.596 266.279 641.433 263.28 646.006 cv
263.179 646.007 263.077 646.008 262.976 646.008 cv
.545098 .960784 .960784 rgb
f
537.986 963.504 mo
535.16 963.504 532.292 962.854 529.602 961.483 cv
520.497 956.845 516.878 945.705 521.516 936.602 cv
524.784 930.188 531.279 926.496 538.014 926.496 cv
540.84 926.496 543.708 927.146 546.398 928.517 cv
555.503 933.155 559.122 944.295 554.483 953.398 cv
551.216 959.812 544.721 963.504 537.986 963.504 cv
538.012 930.197 mo
532.622 930.197 527.427 933.15 524.814 938.281 cv
521.102 945.564 523.998 954.476 531.281 958.187 cv
533.433 959.283 535.728 959.803 537.988 959.803 cv
543.377 959.803 548.573 956.85 551.187 951.719 cv
554.897 944.436 552.002 935.524 544.719 931.814 cv
542.567 930.717 540.272 930.197 538.012 930.197 cv
.498039 .756863 .823529 rgb
f
144.467 917.492 mo
137.45 913.492 129.416 911.025 120.8 910.573 cv
119.845 910.523 118.899 910.499 117.955 910.499 cv
117.751 910.499 117.55 910.5 117.348 910.502 cv
107.851 904.911 100.11 896.186 95.854 885.098 cv
87.9578 864.527 94.4185 841.974 110.319 828.483 cv
119.68 828.132 128.388 823.96 134.538 817.205 cv
137.36 816.722 140.185 816.487 142.99 816.487 cv
163.293 816.487 182.436 828.816 190.146 848.902 cv
200.141 874.94 187.136 904.15 161.098 914.145 cv
155.626 916.246 150.011 917.331 144.467 917.492 cv
142.992 826.589 mo
138.178 826.589 133.285 827.455 128.522 829.283 cv
107.691 837.279 97.287 860.647 105.283 881.479 cv
111.451 897.546 126.768 907.41 143.008 907.411 cv
147.822 907.411 152.715 906.545 157.478 904.717 cv
178.309 896.721 188.713 873.352 180.717 852.521 cv
174.549 836.454 159.232 826.589 142.992 826.589 cv
.552941 .886274 .862745 rgb
f
180.103 293.665 mo
175.809 292.55 171.416 291.998 167.031 291.998 cv
166.922 291.998 166.816 291.999 166.707 291.999 cv
170.643 289.868 174.18 287.197 177.248 284.11 cv
196.149 281.113 210.6 264.744 210.6 245 cv
210.6 235.062 206.94 225.979 200.893 219.026 cv
202.735 216.005 204.177 212.696 205.14 209.158 cv
214.602 218.173 220.5 230.899 220.5 245 cv
220.5 269.228 203.092 289.39 180.103 293.665 cv
147.082 288.348 mo
131.829 279.914 121.5 263.663 121.5 245 cv
121.5 235.681 124.075 226.964 128.553 219.52 cv
130.314 218.631 132.166 217.876 134.107 217.268 cv
135.223 219.333 136.523 221.292 137.99 223.117 cv
133.825 229.387 131.4 236.909 131.4 245 cv
131.4 264.063 144.871 279.981 162.813 283.753 cv
160.404 285.102 157.803 286.196 155.033 286.99 cv
152.384 287.749 149.722 288.195 147.082 288.348 cv
143.003 216.994 mo
142.699 216.572 142.406 216.143 142.124 215.707 cv
142.91 215.644 143.695 215.606 144.476 215.595 cv
143.973 216.048 143.481 216.516 143.003 216.994 cv
195.13 213.598 mo
188.45 208.458 180.081 205.4 171 205.4 cv
165.979 205.4 161.177 206.334 156.758 208.038 cv
152.971 207.021 149.03 206.488 145.023 206.488 cv
143.186 206.488 141.337 206.6 139.483 206.829 cv
148.044 199.752 159.025 195.5 171 195.5 cv
181.143 195.5 190.576 198.552 198.426 203.786 cv
197.872 207.316 196.736 210.615 195.13 213.598 cv
.498039 .905882 .941176 rgb
f
158.02 292.781 mo
154.167 291.736 150.501 290.239 147.082 288.348 cv
149.722 288.195 152.384 287.749 155.033 286.99 cv
157.803 286.196 160.404 285.102 162.813 283.753 cv
165.455 284.308 168.193 284.6 171 284.6 cv
173.126 284.6 175.213 284.433 177.248 284.11 cv
174.18 287.197 170.643 289.868 166.707 291.999 cv
163.795 292.018 160.887 292.279 158.02 292.781 cv
128.553 219.52 mo
129.737 217.552 131.054 215.673 132.492 213.895 cv
132.976 215.047 133.516 216.173 134.107 217.268 cv
132.166 217.876 130.314 218.631 128.553 219.52 cv
142.124 215.707 mo
140.534 213.246 139.289 210.553 138.449 207.708 cv
138.789 207.411 139.134 207.117 139.483 206.829 cv
141.337 206.6 143.186 206.488 145.023 206.488 cv
149.03 206.488 152.971 207.021 156.758 208.038 cv
152.196 209.797 148.042 212.376 144.476 215.595 cv
143.695 215.606 142.91 215.644 142.124 215.707 cv
.305882 .886274 .921569 rgb
f
365.985 328.006 mo
357.339 328.006 349.293 323.3 345.062 315.744 cv
346.265 314.215 347.268 312.581 348.072 310.876 cv
350.937 318.376 358.156 323.204 365.988 323.205 cv
367.634 323.205 369.305 322.992 370.97 322.546 cv
381.212 319.801 387.29 309.273 384.546 299.031 cv
382.248 290.453 374.489 284.795 366.012 284.795 cv
364.366 284.795 362.695 285.008 361.03 285.454 cv
356.155 286.761 352.223 289.831 349.737 293.794 cv
349.277 291.953 348.609 290.153 347.732 288.431 cv
350.778 284.851 354.904 282.127 359.788 280.818 cv
361.868 280.26 363.959 279.994 366.015 279.994 cv
376.612 279.994 386.309 287.066 389.182 297.788 cv
392.613 310.591 385.015 323.752 372.212 327.182 cv
370.132 327.74 368.041 328.006 365.985 328.006 cv
342.769 310.031 mo
341.284 304.315 341.992 298.537 344.373 293.594 cv
346.154 298.993 345.619 304.989 342.769 310.031 cv
.607843 .960784 .960784 rgb
f
436.996 821.5 mo
432.477 821.5 427.949 819.855 424.383 816.53 cv
416.91 809.561 416.502 797.856 423.47 790.383 cv
427.113 786.476 432.052 784.5 437.004 784.5 cv
441.523 784.5 446.051 786.145 449.617 789.47 cv
457.09 796.438 457.498 808.145 450.53 815.617 cv
446.887 819.524 441.947 821.5 436.996 821.5 cv
437.003 788.2 mo
433.041 788.2 429.091 789.781 426.176 792.906 cv
420.601 798.885 420.929 808.249 426.906 813.824 cv
429.759 816.484 433.382 817.8 436.997 817.8 cv
440.958 817.8 444.91 816.219 447.824 813.094 cv
453.398 807.115 453.071 797.751 447.094 792.176 cv
444.241 789.516 440.618 788.2 437.003 788.2 cv
.498039 .823529 .764706 rgb
f
325 325.5 mo
322.465 325.5 319.93 325.125 317.486 324.373 cv
317.165 322.312 316.702 320.306 316.108 318.366 cv
318.908 319.722 321.954 320.4 325 320.4 cv
330.221 320.4 335.441 318.408 339.425 314.425 cv
340.766 313.084 341.88 311.604 342.769 310.031 cv
342.785 310.091 342.801 310.152 342.817 310.212 cv
343.346 312.186 344.107 314.038 345.062 315.744 cv
344.439 316.536 343.762 317.301 343.031 318.031 cv
338.052 323.01 331.526 325.5 325 325.5 cv
306.801 317.862 mo
304.067 315.077 302.101 311.821 300.902 308.357 cv
303.344 311.145 305.35 314.343 306.801 317.862 cv
348.072 310.876 mo
347.836 310.258 347.629 309.622 347.454 308.969 cv
346.016 303.602 347.001 298.157 349.737 293.794 cv
351.153 299.46 350.598 305.517 348.072 310.876 cv
304.601 299.808 mo
303.105 298.391 301.511 297.083 299.831 295.894 cv
300.658 290.795 303.037 285.9 306.969 281.969 cv
309.903 279.034 313.375 276.964 317.067 275.759 cv
314.697 277.851 312.967 280.704 312.295 284.037 cv
311.7 284.512 311.126 285.024 310.575 285.575 cv
306.64 289.51 304.649 294.651 304.601 299.808 cv
344.373 293.594 mo
343.796 291.847 342.977 290.161 341.916 288.592 cv
342.277 285.242 341.494 281.992 339.854 279.268 cv
340.967 280.068 342.03 280.968 343.031 281.969 cv
344.979 283.917 346.546 286.102 347.732 288.431 cv
346.395 290.003 345.266 291.74 344.373 293.594 cv
338.837 285.01 mo
334.935 281.403 329.968 279.6 325 279.6 cv
322.028 279.6 319.056 280.246 316.313 281.536 cv
318.343 277.561 322.469 274.998 326.987 274.998 cv
327.746 274.998 328.517 275.07 329.29 275.221 cv
334.34 276.202 338.031 280.218 338.837 285.01 cv
.584314 .960784 .960784 rgb
f
345.062 315.744 mo
344.107 314.038 343.346 312.186 342.817 310.212 cv
342.801 310.152 342.785 310.091 342.769 310.031 cv
345.619 304.989 346.154 298.993 344.373 293.594 cv
345.266 291.74 346.395 290.003 347.732 288.431 cv
348.609 290.153 349.277 291.953 349.737 293.794 cv
347.001 298.157 346.016 303.602 347.454 308.969 cv
347.629 309.622 347.836 310.258 348.072 310.876 cv
347.268 312.581 346.265 314.215 345.062 315.744 cv
.388235 .941176 .941176 rgb
f
456.958 618.51 mo
450.08 618.51 443.414 617.007 437.354 614.25 cv
438.912 611.48 440.227 608.588 441.289 605.602 cv
446.135 607.807 451.467 609.008 456.967 609.009 cv
459.798 609.009 462.671 608.691 465.548 608.026 cv
472.952 606.317 479.346 602.552 484.268 597.473 cv
485.6 600.832 486.528 604.295 487.061 607.791 cv
481.592 612.266 475.037 615.585 467.686 617.282 cv
464.091 618.112 460.496 618.51 456.958 618.51 cv
427.849 608.504 mo
423.74 605.315 420.142 601.446 417.241 597.013 cv
418.767 593.746 420.666 590.653 422.906 587.801 cv
425.088 592.238 428.083 596.125 431.658 599.319 cv
430.735 602.51 429.458 605.591 427.849 608.504 cv
496.737 597.023 mo
495.535 593.234 493.939 589.525 491.936 585.955 cv
492.32 585.06 492.671 584.149 492.986 583.224 cv
495.539 585.715 497.833 588.521 499.799 591.607 cv
498.896 593.478 497.873 595.288 496.737 597.023 cv
411.246 583.763 mo
411.055 583.077 410.88 582.386 410.718 581.686 cv
410.436 580.466 410.204 579.244 410.02 578.026 cv
410.67 577.5 411.337 576.988 412.022 576.491 cv
414.267 574.859 416.605 573.454 419.014 572.268 cv
419.038 572.98 419.083 573.693 419.148 574.409 cv
416.178 577.261 413.534 580.4 411.246 583.763 cv
504.036 577.71 mo
501.292 574.635 498.252 571.881 494.977 569.476 cv
494.881 567.151 494.569 564.802 494.026 562.452 cv
489.969 544.88 474.328 532.991 457.033 532.991 cv
454.202 532.991 451.329 533.309 448.452 533.974 cv
439.883 535.952 432.665 540.686 427.518 547.022 cv
425.22 544.808 422.746 542.811 420.134 541.045 cv
426.568 533.116 435.595 527.193 446.314 524.718 cv
449.909 523.888 453.504 523.49 457.042 523.49 cv
478.663 523.49 498.211 538.348 503.282 560.314 cv
504.64 566.195 504.841 572.073 504.036 577.71 cv
410.073 563.569 mo
410.801 558.976 412.199 554.553 414.186 550.426 cv
416.9 552.291 419.424 554.471 421.693 556.94 cv
421.478 557.478 421.275 558.022 421.085 558.57 cv
417.311 559.836 413.618 561.5 410.073 563.569 cv
.498039 .917647 .886274 rgb
f
437.354 614.25 mo
433.974 612.711 430.781 610.781 427.849 608.504 cv
429.458 605.591 430.735 602.51 431.658 599.319 cv
434.532 601.887 437.785 604.007 441.289 605.602 cv
440.227 608.588 438.912 611.48 437.354 614.25 cv
421.693 556.94 mo
419.424 554.471 416.9 552.291 414.186 550.426 cv
415.796 547.079 417.793 543.929 420.134 541.045 cv
422.746 542.811 425.22 544.808 427.518 547.022 cv
425.09 550.012 423.123 553.357 421.693 556.94 cv
.247059 .886274 .815686 rgb
f
966.989 638.503 mo
965.83 638.503 964.697 638.326 963.621 637.995 cv
964.127 637.347 964.608 636.68 965.063 635.996 cv
965.689 636.131 966.335 636.202 966.991 636.202 cv
967.624 636.202 968.268 636.136 968.913 635.999 cv
973.883 634.942 977.056 630.058 975.999 625.087 cv
975.861 624.436 975.656 623.816 975.395 623.232 cv
976.129 622.993 976.871 622.777 977.62 622.583 cv
977.887 623.227 978.099 623.903 978.249 624.609 cv
979.569 630.821 975.604 636.928 969.391 638.249 cv
968.585 638.42 967.781 638.503 966.989 638.503 cv
955.989 623.674 mo
957.1 620.007 960.017 617.002 963.918 615.92 cv
963.974 616.621 964.003 617.318 964.003 618.01 cv
961.15 619.611 958.462 621.507 955.989 623.674 cv
.498039 .862745 .94902 rgb
f
913.986 131.008 mo
909.946 131.008 905.841 130.214 901.888 128.536 cv
901.799 128.498 901.71 128.46 901.622 128.422 cv
898.667 125.783 895.359 123.478 891.742 121.589 cv
883.331 112.909 880.445 99.7119 885.465 87.8872 cv
890.476 76.0808 901.948 68.992 914.014 68.992 cv
918.054 68.992 922.159 69.7862 926.112 71.4643 cv
941.872 78.1538 949.226 96.3529 942.535 112.113 cv
937.524 123.919 926.052 131.008 913.986 131.008 cv
914.011 75.1936 mo
904.358 75.1936 895.181 80.8641 891.172 90.31 cv
885.819 102.918 891.702 117.477 904.31 122.829 cv
907.472 124.171 910.757 124.806 913.989 124.806 cv
923.642 124.807 932.819 119.136 936.828 109.69 cv
942.181 97.0821 936.298 82.5233 923.69 77.1714 cv
920.528 75.8292 917.243 75.1936 914.011 75.1936 cv
.639216 .960784 .960784 rgb
f
624.862 552.627 mo
618.132 550.27 613.711 543.477 614.615 536.111 cv
614.955 533.344 616.005 530.837 617.559 528.75 cv
618.446 529.301 619.357 529.812 620.292 530.283 cv
618.914 532.013 617.982 534.133 617.692 536.489 cv
616.914 542.828 621.065 548.635 627.142 550.067 cv
626.41 550.954 625.649 551.808 624.862 552.627 cv
643.038 546.388 mo
643.728 545.005 644.357 543.604 644.925 542.19 cv
644.502 543.703 643.86 545.113 643.038 546.388 cv
635.966 527.002 mo
635.889 527.002 635.81 527.002 635.733 527.001 cv
634.451 526.333 633.03 525.879 631.511 525.692 cv
630.998 525.629 630.488 525.599 629.983 525.599 cv
629.251 525.599 628.531 525.664 627.828 525.788 cv
626.283 525.316 624.791 524.713 623.364 523.99 cv
625.387 523.03 627.636 522.498 629.981 522.498 cv
630.611 522.498 631.247 522.537 631.889 522.615 cv
633.913 522.864 635.798 523.492 637.481 524.42 cv
637.417 525.271 637.33 526.125 637.218 526.974 cv
636.799 526.993 636.382 527.002 635.966 527.002 cv
.686274 .913725 .960784 rgb
f
929.992 504.01 mo
928.034 504.01 926.092 503.862 924.182 503.572 cv
925.304 501.157 926.221 498.642 926.918 496.055 cv
927.935 496.157 928.962 496.208 929.993 496.208 cv
933.189 496.209 936.438 495.714 939.642 494.673 cv
956.029 489.349 964.998 471.746 959.673 455.358 cv
955.389 442.174 943.158 433.792 930.006 433.792 cv
926.811 433.792 923.562 434.286 920.358 435.327 cv
914.791 437.136 910.081 440.361 906.496 444.475 cv
904.228 443.07 901.842 441.86 899.364 440.86 cv
903.976 434.995 910.319 430.388 917.948 427.909 cv
921.952 426.608 926.014 425.99 930.008 425.99 cv
946.448 425.99 961.736 436.467 967.091 452.948 cv
973.747 473.434 962.536 495.435 942.052 502.091 cv
938.048 503.392 933.985 504.01 929.992 504.01 cv
915.073 501.031 mo
904.904 496.814 896.577 488.342 892.909 477.052 cv
889.785 467.435 890.597 457.485 894.458 448.945 cv
896.918 449.821 899.276 450.953 901.494 452.317 cv
898.467 459.114 897.847 467.009 900.327 474.642 cv
903.242 483.615 909.841 490.364 917.903 493.76 cv
917.215 496.283 916.263 498.721 915.073 501.031 cv
.498039 .72549 .933333 rgb
f
924.182 503.572 mo
921.04 503.096 917.98 502.237 915.073 501.031 cv
916.263 498.721 917.215 496.283 917.903 493.76 cv
920.757 494.962 923.795 495.744 926.918 496.055 cv
926.221 498.642 925.304 501.157 924.182 503.572 cv
901.494 452.317 mo
899.276 450.953 896.918 449.821 894.458 448.945 cv
895.758 446.068 897.405 443.351 899.364 440.86 cv
901.842 441.86 904.228 443.07 906.496 444.475 cv
904.443 446.83 902.758 449.479 901.494 452.317 cv
.309804 .705882 .913725 rgb
f
257.984 891.012 mo
252.246 891.012 246.415 889.932 240.768 887.65 cv
234.715 885.205 229.466 881.617 225.169 877.237 cv
226.226 874.118 227.736 871.163 229.651 868.476 cv
233.42 873.034 238.345 876.749 244.214 879.12 cv
248.731 880.945 253.399 881.81 257.988 881.81 cv
268.32 881.81 278.26 877.431 285.232 869.767 cv
286.568 871.84 287.695 874.093 288.574 876.508 cv
288.842 877.244 289.083 877.985 289.297 878.727 cv
280.818 886.585 269.597 891.012 257.984 891.012 cv
295.62 871.489 mo
294.225 868.218 292.456 865.208 290.381 862.491 cv
291.021 861.302 291.603 860.067 292.12 858.785 cv
295.938 849.336 295.552 839.232 291.842 830.545 cv
294.418 829.075 296.843 827.241 299.041 825.042 cv
299.132 824.951 299.223 824.86 299.312 824.768 cv
304.852 836.089 305.743 849.626 300.65 862.231 cv
299.302 865.57 297.605 868.664 295.62 871.489 cv
219.194 869.706 mo
212.075 858.503 209.887 844.378 214.183 830.991 cv
214.45 830.997 214.718 831 214.986 831 cv
215.199 831 215.415 830.998 215.628 830.994 cv
218.703 830.94 221.682 830.502 224.518 829.727 cv
224.296 830.216 224.083 830.712 223.88 831.215 cv
219.838 841.219 220.508 851.957 224.845 860.969 cv
222.601 863.645 220.704 866.583 219.194 869.706 cv
288.606 824.56 mo
284.643 818.614 278.911 813.758 271.786 810.88 cv
267.269 809.055 262.601 808.19 258.012 808.19 cv
254.983 808.19 251.986 808.567 249.089 809.292 cv
248.931 808.797 248.788 808.299 248.659 807.797 cv
249.652 805.186 250.351 802.431 250.713 799.574 cv
251.871 799.387 253.042 799.244 254.216 799.146 cv
254.933 799.659 255.665 800.158 256.411 800.643 cv
266.148 806.966 277.072 809.994 287.877 810.007 cv
290.871 812.563 293.493 815.471 295.705 818.641 cv
295.24 819.186 294.749 819.718 294.233 820.233 cv
292.512 821.955 290.618 823.397 288.606 824.56 cv
217.217 823.716 mo
222.458 813.646 231.045 806.213 241.023 802.248 cv
241.074 803.651 241.212 805.054 241.436 806.444 cv
237.296 815.991 228.128 822.883 217.217 823.716 cv
.701961 .960784 .960784 rgb
f
144.928 154.377 mo
140.054 153.794 135.452 151.175 132.492 146.786 cv
127.757 139.766 128.793 130.547 134.512 124.736 cv
135.351 125.551 136.148 126.406 136.902 127.299 cv
132.421 131.953 131.635 139.256 135.394 144.828 cv
137.731 148.293 141.348 150.38 145.19 150.882 cv
145.176 151.405 145.151 151.929 145.114 152.455 cv
145.069 153.102 145.007 153.742 144.928 154.377 cv
153.891 153.089 mo
153.892 153.082 153.892 153.077 153.893 153.069 cv
153.985 151.745 154.018 150.431 153.994 149.128 cv
154.276 148.965 154.554 148.791 154.829 148.606 cv
161.239 144.283 162.93 135.581 158.606 129.171 cv
155.902 125.162 151.484 122.999 146.987 122.999 cv
146.28 122.999 145.571 123.052 144.866 123.16 cv
144.061 122.114 143.208 121.104 142.312 120.135 cv
143.848 119.708 145.42 119.498 146.984 119.498 cv
152.606 119.498 158.128 122.202 161.508 127.214 cv
166.913 135.227 164.798 146.104 156.786 151.508 cv
155.855 152.136 154.886 152.662 153.891 153.089 cv
.521569 .901961 .945098 rgb
f
275 835 mo
266.299 835 257.597 831.681 250.958 825.042 cv
248.188 822.272 245.997 819.143 244.382 815.805 cv
245.754 813.871 246.94 811.796 247.913 809.607 cv
248.303 809.496 248.694 809.391 249.089 809.292 cv
250.366 813.294 252.592 817.059 255.767 820.233 cv
261.078 825.544 268.039 828.2 275 828.2 cv
279.705 828.2 284.41 826.987 288.606 824.56 cv
289.868 826.454 290.951 828.459 291.842 830.545 cv
286.64 833.515 280.82 835 275 835 cv
299.312 824.768 mo
298.271 822.64 297.066 820.591 295.705 818.641 cv
298.298 815.605 300.114 812.135 301.154 808.488 cv
303.679 807.901 306.169 807.143 308.599 806.223 cv
307.552 812.994 304.457 819.508 299.312 824.768 cv
241.023 802.248 mo
240.859 797.767 241.577 793.261 243.175 789.01 cv
243.55 790.783 243.763 792.618 243.795 794.497 cv
243.837 796.904 243.583 799.247 243.066 801.492 cv
242.379 801.728 241.697 801.98 241.023 802.248 cv
301.794 796.303 mo
300.865 790.979 298.345 785.878 294.233 781.767 cv
288.922 776.456 281.961 773.8 275 773.8 cv
268.039 773.8 261.078 776.456 255.767 781.767 cv
255.161 782.373 254.589 783 254.052 783.647 cv
252.464 781.946 251.022 780.143 249.727 778.254 cv
250.124 777.814 250.535 777.382 250.958 776.958 cv
257.597 770.319 266.299 767 275 767 cv
283.701 767 292.403 770.319 299.041 776.958 cv
303.829 781.746 306.891 787.607 308.226 793.767 cv
306.143 794.773 303.992 795.62 301.794 796.303 cv
.647059 .952941 .960784 rgb
f
291.842 830.545 mo
290.951 828.459 289.868 826.454 288.606 824.56 cv
290.618 823.397 292.512 821.955 294.233 820.233 cv
294.749 819.718 295.24 819.186 295.705 818.641 cv
297.066 820.591 298.271 822.64 299.312 824.768 cv
299.223 824.86 299.132 824.951 299.041 825.042 cv
296.843 827.241 294.418 829.075 291.842 830.545 cv
247.913 809.607 mo
248.177 809.012 248.426 808.409 248.659 807.797 cv
248.788 808.299 248.931 808.797 249.089 809.292 cv
248.694 809.391 248.303 809.496 247.913 809.607 cv
241.436 806.444 mo
241.212 805.054 241.074 803.651 241.023 802.248 cv
241.697 801.98 242.379 801.728 243.066 801.492 cv
242.671 803.205 242.123 804.861 241.436 806.444 cv
.498039 .933333 .941176 rgb
f
808.972 225.509 mo
792.609 225.509 777.722 214.425 773.584 197.83 cv
768.707 178.27 780.61 158.461 800.17 153.584 cv
803.134 152.845 806.105 152.491 809.027 152.491 cv
813.206 152.491 817.288 153.214 821.12 154.567 cv
820.578 157.038 820.235 159.518 820.081 161.982 cv
816.623 160.561 812.874 159.793 809.022 159.793 cv
806.683 159.793 804.308 160.076 801.936 160.667 cv
786.288 164.569 776.766 180.416 780.667 196.064 cv
783.977 209.34 795.887 218.206 808.978 218.207 cv
811.317 218.207 813.692 217.924 816.064 217.332 cv
825.115 215.076 832.117 208.822 835.657 200.922 cv
837.474 202.611 839.431 204.171 841.517 205.582 cv
836.883 214.658 828.494 221.757 817.83 224.416 cv
814.866 225.155 811.895 225.509 808.972 225.509 cv
844.852 195.893 mo
842.358 193.943 840.132 191.712 838.206 189.263 cv
838.227 186.847 837.945 184.39 837.333 181.936 cv
836.041 176.752 833.435 172.239 829.962 168.665 cv
829.671 165.586 829.744 162.443 830.211 159.295 cv
837.037 164.164 842.228 171.397 844.416 180.17 cv
845.744 185.494 845.828 190.837 844.852 195.893 cv
.615686 .960784 .960784 rgb
f
582.966 216.001 mo
562.363 216.001 545.144 199.856 544.054 179.041 cv
542.926 157.531 559.449 139.181 580.959 138.054 cv
581.653 138.017 582.346 137.999 583.034 137.999 cv
603.638 137.999 620.856 154.144 621.946 174.959 cv
623.074 196.469 606.551 214.819 585.041 215.946 cv
584.347 215.983 583.654 216.001 582.966 216.001 cv
583.027 145.799 mo
582.476 145.799 581.924 145.814 581.367 145.843 cv
564.159 146.745 550.941 161.425 551.843 178.633 cv
552.715 195.284 566.491 208.2 582.973 208.201 cv
583.524 208.201 584.076 208.186 584.633 208.157 cv
601.841 207.255 615.059 192.575 614.157 175.367 cv
613.285 158.716 599.509 145.799 583.027 145.799 cv
.552941 .960784 .960784 rgb
f
478.029 174.502 mo
469.855 174.502 461.739 172.099 454.81 167.43 cv
455.871 164.64 456.666 161.778 457.197 158.884 cv
463.188 163.707 470.577 166.201 478.023 166.201 cv
485.171 166.202 492.371 163.904 498.44 159.162 cv
507.03 152.451 511.418 142.357 511.193 132.237 cv
513.991 131.94 516.75 131.404 519.437 130.644 cv
520.171 143.758 514.684 157.004 503.55 165.703 cv
495.965 171.629 486.963 174.502 478.029 174.502 cv
446.811 160.378 mo
446.293 159.787 445.788 159.177 445.298 158.55 cv
437.186 148.168 434.796 135.135 437.66 123.25 cv
440.692 126.49 443.082 130.146 444.814 134.041 cv
444.954 138.628 446.044 143.215 448.12 147.487 cv
448.397 151.797 447.966 156.16 446.811 160.378 cv
509.49 122.455 mo
508.323 118.97 506.554 115.621 504.162 112.56 cv
499.684 106.829 493.698 102.967 487.205 101.099 cv
490.069 99.5299 492.783 97.5836 495.276 95.2574 cv
501.138 97.9347 506.461 102.021 510.702 107.45 cv
513.924 111.574 516.243 116.115 517.689 120.837 cv
515.034 121.66 512.285 122.206 509.49 122.455 cv
447.555 119.743 mo
445.752 117.452 443.722 115.292 441.463 113.297 cv
443.716 109.115 446.721 105.265 450.454 101.959 cv
453.477 103.433 456.648 104.505 459.888 105.173 cv
459.096 105.69 458.319 106.245 457.56 106.838 cv
453.043 110.367 449.688 114.831 447.555 119.743 cv
469.339 97.9723 mo
468.653 96.2933 468.082 94.5672 467.63 92.8057 cv
471.029 91.9307 474.506 91.4981 477.971 91.4981 cv
480.739 91.4981 483.499 91.7736 486.21 92.3194 cv
481.125 95.8473 475.258 97.727 469.339 97.9723 cv
458.381 96.5261 mo
458.34 96.5134 458.3 96.5008 458.26 96.488 cv
458.292 96.4706 458.323 96.4539 458.355 96.4366 cv
458.364 96.4664 458.372 96.4963 458.381 96.5261 cv
.529412 .913725 .960784 rgb
f
459.888 105.173 mo
456.648 104.505 453.477 103.433 450.454 101.959 cv
451.098 101.388 451.764 100.834 452.45 100.297 cv
454.309 98.8454 456.253 97.5761 458.26 96.488 cv
458.3 96.5008 458.34 96.5134 458.381 96.5261 cv
459.141 99.1948 460.122 101.792 461.313 104.293 cv
460.834 104.573 460.357 104.867 459.888 105.173 cv
487.205 101.099 mo
484.205 100.236 481.096 99.7985 477.977 99.7985 cv
475.489 99.7985 472.996 100.077 470.545 100.639 cv
470.111 99.7653 469.709 98.8759 469.339 97.9723 cv
475.258 97.727 481.125 95.8473 486.21 92.3194 cv
489.321 92.9457 492.365 93.9278 495.276 95.2574 cv
492.783 97.5836 490.069 99.5299 487.205 101.099 cv
.321569 .85098 .921569 rgb
f
563.009 349.511 mo
562.837 349.511 562.664 349.51 562.493 349.508 cv
564.872 346.732 567.519 344.296 570.369 342.212 cv
570.572 342.203 570.776 342.199 570.981 342.199 cv
571.498 342.199 572.021 342.226 572.547 342.281 cv
575.619 342.604 578.372 343.845 580.563 345.703 cv
579.8 346.048 579.022 346.373 578.23 346.677 cv
573.222 348.6 568.072 349.511 563.009 349.511 cv
542.516 344.239 mo
534.021 339.572 527.069 331.989 523.323 322.23 cv
520.559 315.029 519.885 307.539 521.004 300.43 cv
521.177 300.497 521.347 300.565 521.519 300.634 cv
522.667 304.579 525.523 307.567 529.051 309.022 cv
529.254 312.417 529.974 315.84 531.258 319.184 cv
533.859 325.961 538.394 331.426 543.99 335.192 cv
543.887 338.283 543.385 341.321 542.516 344.239 cv
551.878 344.013 mo
552.227 342.494 552.496 340.955 552.685 339.399 cv
553.517 339.664 554.36 339.898 555.212 340.099 cv
554.054 341.344 552.942 342.648 551.878 344.013 cv
584.076 343.913 mo
581.733 341.569 578.75 339.839 575.37 339.022 cv
581.87 335.438 589.113 333.471 596.453 333.223 cv
593.127 337.476 588.96 341.132 584.076 343.913 cv
602.669 321.678 mo
601.129 321.556 599.589 321.496 598.048 321.496 cv
596.588 321.496 595.131 321.55 593.678 321.659 cv
594.943 319.009 595.866 316.201 596.416 313.301 cv
598.214 316.268 600.305 319.077 602.669 321.678 cv
605.51 307.27 mo
601.534 300.563 599.403 292.87 599.391 285.033 cv
600.661 287.142 601.764 289.392 602.677 291.77 cv
604.635 296.871 605.544 302.117 605.51 307.27 cv
529.002 306.12 mo
527.388 305.236 526.007 303.925 525.043 302.29 cv
526.434 303.038 527.778 303.877 529.063 304.802 cv
529.034 305.241 529.014 305.679 529.002 306.12 cv
531.057 295.354 mo
529.04 294.152 526.935 293.109 524.756 292.235 cv
526.024 289.776 528.265 287.826 531.134 287.003 cv
532.091 286.728 533.056 286.597 534.005 286.597 cv
534.575 286.597 535.14 286.645 535.693 286.736 cv
533.738 289.376 532.178 292.281 531.057 295.354 cv
525.341 287.3 mo
529.967 278.449 537.713 271.183 547.769 267.323 cv
552.778 265.4 557.928 264.488 562.991 264.488 cv
571.346 264.488 579.465 266.968 586.343 271.48 cv
587.014 272.044 587.731 272.546 588.486 272.982 cv
588.874 273.272 589.256 273.569 589.634 273.872 cv
588.897 277.398 588.521 280.952 588.491 284.487 cv
582.047 277.193 572.717 272.991 562.993 272.991 cv
558.942 272.991 554.824 273.72 550.816 275.258 cv
545.52 277.291 541.025 280.504 537.516 284.482 cv
536.387 284.164 535.207 283.997 534.007 283.997 cv
532.82 283.997 531.614 284.16 530.417 284.504 cv
528.471 285.062 526.756 286.035 525.341 287.3 cv
.658823 .960784 .960784 rgb
f
580.563 345.703 mo
578.372 343.845 575.619 342.604 572.547 342.281 cv
572.021 342.226 571.498 342.199 570.981 342.199 cv
570.776 342.199 570.572 342.203 570.369 342.212 cv
571.976 341.036 573.647 339.972 575.37 339.022 cv
578.75 339.839 581.733 341.569 584.076 343.913 cv
582.943 344.558 581.772 345.156 580.563 345.703 cv
.407843 .921569 .941176 rgb
f
588.486 272.982 mo
587.731 272.546 587.014 272.044 586.343 271.48 cv
587.071 271.958 587.787 272.46 588.486 272.982 cv
.443137 .941176 .941176 rgb
f
305.864 20.531 mo
303.899 15.3204 302.737 9.70573 302.532 3.83206 cv
302.487 2.5445 302.489 1.2675 302.536 0 cv
309.207 0 li
309.892 6.81123 308.853 13.8755 305.864 20.531 cv
.65098 .960784 .960784 rgb
f
354.966 54.5003 mo
336.951 54.5003 320.925 45.3607 311.459 31.3477 cv
312.524 29.6897 313.504 27.9522 314.389 26.1376 cv
315.399 24.066 316.255 21.9591 316.961 19.83 cv
323.69 34.1698 338.264 44.0005 354.974 44.0007 cv
355.469 44.0007 355.966 43.9921 356.466 43.9746 cv
377.348 43.2453 394.137 27.3887 396.67 7.30526 cv
400.401 5.44125 403.706 2.95121 406.481 0 cv
407.462 0 li
407.464 .0565489 407.466 .111471 407.468 .168068 cv
408.48 29.145 385.81 53.4559 356.832 54.4677 cv
356.209 54.4894 355.584 54.5003 354.966 54.5003 cv
f
407.462 1000 mo
406.48 1000 li
406.798 999.663 407.109 999.318 407.412 998.968 cv
407.432 999.311 407.449 999.655 407.462 1000 cv
309.207 1000 mo
302.536 1000 li
302.719 995.06 303.59 990.284 305.056 985.771 cv
307.295 990.208 308.709 995.038 309.207 1000 cv
396.897 999.058 mo
396.504 993.394 394.994 988.054 392.593 983.249 cv
395.514 978.533 396.217 972.882 394.778 967.732 cv
399.961 973.741 403.81 980.944 405.851 988.901 cv
403.758 992.929 400.696 996.437 396.897 999.058 cv
316.17 985.966 mo
314.651 981.989 312.632 978.203 310.146 974.705 cv
319.031 960.135 334.838 950.172 353.168 949.532 cv
353.79 949.51 354.415 949.5 355.033 949.5 cv
356.037 949.5 357.037 949.528 358.029 949.584 cv
354.568 952.599 351.742 956.261 349.702 960.333 cv
334.42 962.258 321.804 972.344 316.17 985.966 cv
390.304 979.236 mo
384.663 970.507 375.882 964.031 365.62 961.353 cv
368.555 958.731 372.273 957.4 376.005 957.4 cv
379.724 957.4 383.457 958.722 386.438 961.407 cv
391.559 966.017 392.915 973.25 390.304 979.236 cv
361.087 960.436 mo
360.053 960.286 359.008 960.174 357.952 960.1 cv
360.511 956.389 363.966 953.284 368.093 951.145 cv
370.524 951.769 372.891 952.565 375.176 953.517 cv
370.125 953.732 365.159 955.898 361.509 959.952 cv
361.365 960.112 361.225 960.273 361.087 960.436 cv
f
157.577 1000 mo
141.155 1000 li
152.325 992.803 159.993 980.524 160.741 966.24 cv
161.978 942.635 143.845 922.496 120.24 921.259 cv
119.478 921.219 118.717 921.199 117.963 921.199 cv
95.3522 921.199 76.4555 938.917 75.2587 961.76 cv
74.4261 977.644 82.3639 991.958 94.8389 1000 cv
90.0817 1000 li
88.0302 994.843 84.3756 990.269 79.3077 987.103 cv
75.7712 984.893 71.9209 983.602 68.0361 983.165 cv
65.4266 976.373 64.1679 968.935 64.5733 961.2 cv
66.0589 932.853 89.3569 910.82 117.348 910.502 cv
125.054 915.04 133.915 917.513 143.01 917.513 cv
143.495 917.513 143.981 917.506 144.467 917.492 cv
161.481 927.191 172.522 945.909 171.427 966.8 cv
170.754 979.639 165.607 991.182 157.577 1000 cv
84.1496 1000 mo
78.4241 1000 li
75.4529 996.733 72.8833 993.101 70.7894 989.185 cv
72.7385 989.728 74.6433 990.556 76.4463 991.683 cv
79.832 993.798 82.4293 996.698 84.1496 1000 cv
.639216 .960784 .960784 rgb
f
143.01 917.513 mo
133.915 917.513 125.054 915.04 117.348 910.502 cv
117.55 910.5 117.751 910.499 117.955 910.499 cv
118.899 910.499 119.845 910.523 120.8 910.573 cv
129.416 911.025 137.45 913.492 144.467 917.492 cv
143.981 917.506 143.495 917.513 143.01 917.513 cv
.415686 .905882 .894118 rgb
f
118.046 17.5015 mo
117.101 17.5015 116.155 17.4769 115.2 17.4269 cv
106.772 16.9851 98.9008 14.6153 91.9935 10.7676 cv
92.0948 7.08108 91.4393 3.41284 90.0817 0 cv
94.8385 0 li
100.902 3.90895 108.039 6.33661 115.76 6.74114 cv
116.522 6.78109 117.283 6.80085 118.037 6.80088 cv
126.51 6.80123 134.461 4.31289 141.155 0 cv
157.577 0 li
147.749 10.7918 133.599 17.5015 118.046 17.5015 cv
86.4173 7.19085 mo
83.5137 5.06343 80.8362 2.65213 78.4239 0 cv
84.1498 0 li
85.3226 2.25088 86.0876 4.68793 86.4173 7.19085 cv
.639216 .960784 .960784 rgb
f
84.0145 363.503 mo
83.0154 363.503 82.0017 363.399 80.9853 363.183 cv
76.4334 362.215 72.8381 359.21 70.9514 355.325 cv
70.8075 352.215 70.4179 349.132 69.7921 346.104 cv
69.8002 346.065 69.8084 346.025 69.8169 345.985 cv
71.2659 339.169 77.2856 334.497 83.9855 334.497 cv
84.9845 334.497 85.9981 334.601 87.0145 334.817 cv
94.8475 336.482 99.8483 344.182 98.1832 352.015 cv
96.7342 358.831 90.7145 363.503 84.0145 363.503 cv
83.9884 337.397 mo
78.6282 337.397 73.8126 341.134 72.6534 346.588 cv
71.3214 352.854 75.3218 359.015 81.5883 360.347 cv
82.4011 360.519 83.2129 360.602 84.0118 360.603 cv
89.3722 360.603 94.1875 356.865 95.3467 351.412 cv
96.6787 345.146 92.6783 338.985 86.4115 337.653 cv
85.5988 337.48 84.7872 337.397 83.9884 337.397 cv
.505882 .72549 .780392 rgb
f
712.941 412.01 mo
687.61 412.01 665.006 394.1 659.992 368.304 cv
657.737 356.704 659.379 345.248 664.003 335.292 cv
675.517 330.489 685.452 321.73 691.56 309.743 cv
691.74 309.389 691.917 309.033 692.088 308.677 cv
694.049 308.902 696.013 309.012 697.966 309.012 cv
703.294 309.012 708.561 308.19 713.583 306.611 cv
714.748 308.239 716.232 309.681 718.014 310.838 cv
720.789 312.641 723.904 313.502 726.985 313.502 cv
730.731 313.502 734.427 312.226 737.393 309.821 cv
751.742 317.097 762.7 330.68 766.008 347.696 cv
766.035 347.834 766.061 347.971 766.086 348.108 cv
762.283 351.545 758.937 355.505 756.168 359.901 cv
756.312 356.572 756.07 353.172 755.406 349.757 cv
751.395 329.121 733.311 314.792 713.048 314.792 cv
710.313 314.792 707.542 315.053 704.757 315.594 cv
681.337 320.146 666.041 342.823 670.594 366.243 cv
674.605 386.878 692.689 401.207 712.952 401.208 cv
715.687 401.208 718.458 400.948 721.243 400.406 cv
732.376 398.242 741.673 391.983 747.875 383.496 cv
747.26 388.761 747.396 393.953 748.2 398.963 cv
741.321 404.886 732.853 409.152 723.304 411.008 cv
719.825 411.684 716.358 412.01 712.941 412.01 cv
758.943 386.377 mo
759.036 385.233 759.174 384.082 759.356 382.929 cv
760.434 376.126 762.976 369.92 766.612 364.58 cv
765.653 372.403 762.991 379.826 758.943 386.377 cv
726.988 310.201 mo
724.524 310.201 722.031 309.512 719.811 308.07 cv
718.673 307.332 717.688 306.448 716.862 305.459 cv
717.734 305.119 718.595 304.757 719.448 304.372 cv
724.49 304.977 729.366 306.289 733.952 308.224 cv
731.855 309.522 729.435 310.202 726.988 310.201 cv
.54902 .890196 .952941 rgb
f
869.011 214.013 mo
863.992 214.013 858.89 213.236 853.858 211.601 cv
849.372 210.144 845.238 208.099 841.517 205.582 cv
843.068 202.543 844.198 199.283 844.852 195.893 cv
848.362 198.636 852.404 200.825 856.887 202.281 cv
860.911 203.589 864.995 204.21 869.009 204.211 cv
885.533 204.211 900.899 193.68 906.281 177.113 cv
912.972 156.523 901.703 134.409 881.113 127.719 cv
880.678 127.577 880.241 127.444 879.805 127.318 cv
878.278 123.092 875.761 119.23 872.394 116.106 cv
876.306 116.381 880.244 117.132 884.142 118.399 cv
886.804 119.264 889.341 120.334 891.742 121.589 cv
894.478 124.412 897.799 126.757 901.622 128.422 cv
914.236 139.683 920.46 157.042 917.121 174.267 cv
906.779 182.155 899.496 193.301 896.301 205.692 cv
888.322 211.038 878.829 214.013 869.011 214.013 cv
835.657 200.922 mo
825.024 191.04 819.16 176.742 820.081 161.982 cv
823.786 163.506 827.158 165.78 829.962 168.665 cv
830.674 176.211 833.571 183.369 838.206 189.263 cv
838.172 193.344 837.277 197.306 835.657 200.922 cv
830.211 159.295 mo
827.423 157.306 824.361 155.711 821.12 154.567 cv
821.465 152.993 821.89 151.423 822.398 149.859 cv
823.163 147.507 824.089 145.25 825.159 143.101 cv
826.13 147.518 828.141 151.672 831.047 155.185 cv
830.692 156.553 830.415 157.924 830.211 159.295 cv
833.382 148.621 mo
830.969 144.541 829.85 139.753 830.287 134.941 cv
838.244 124.692 849.988 118.04 862.749 116.389 cv
867.244 118.513 870.732 121.929 872.969 125.993 cv
871.639 125.857 870.311 125.789 868.991 125.789 cv
853.933 125.789 839.838 134.534 833.382 148.621 cv
.65098 .960784 .960784 rgb
f
901.622 128.422 mo
897.799 126.757 894.478 124.412 891.742 121.589 cv
895.359 123.478 898.667 125.783 901.622 128.422 cv
.470588 .941176 .941176 rgb
f
841.517 205.582 mo
839.431 204.171 837.474 202.611 835.657 200.922 cv
837.277 197.306 838.172 193.344 838.206 189.263 cv
840.132 191.712 842.358 193.943 844.852 195.893 cv
844.198 199.283 843.068 202.543 841.517 205.582 cv
829.962 168.665 mo
827.158 165.78 823.786 163.506 820.081 161.982 cv
820.235 159.518 820.578 157.038 821.12 154.567 cv
824.361 155.711 827.423 157.306 830.211 159.295 cv
829.744 162.443 829.671 165.586 829.962 168.665 cv
.458824 .941176 .941176 rgb
f
166.968 396.002 mo
165.77 396.002 164.57 395.96 163.372 395.878 cv
157.128 393.802 151.425 389.874 147.166 384.221 cv
145.777 382.378 144.606 380.437 143.65 378.431 cv
150.737 383.249 158.88 385.601 166.975 385.601 cv
174.017 385.602 181.021 383.823 187.269 380.341 cv
187.684 384.481 187.116 388.679 185.611 392.564 cv
179.646 394.844 173.318 396.002 166.968 396.002 cv
139.732 388.284 mo
137.99 387.208 136.295 386.019 134.653 384.714 cv
134.536 382.895 134.608 381.072 134.864 379.273 cv
136.087 382.401 137.707 385.429 139.732 388.284 cv
199.032 384.977 mo
198.521 382.101 198.448 379.097 198.877 376.047 cv
199.367 372.56 200.47 369.311 202.064 366.392 cv
202.488 365.729 202.892 365.057 203.274 364.379 cv
204.44 362.61 205.796 360.987 207.308 359.534 cv
208.358 367.419 206.582 375.524 202.201 382.283 cv
201.175 383.229 200.117 384.127 199.032 384.977 cv
128.279 378.72 mo
111.489 360.042 110.28 331.415 126.588 311.275 cv
131.41 305.321 137.275 300.711 143.709 297.494 cv
144.131 297.506 144.554 297.512 144.978 297.512 cv
149.13 297.512 153.352 296.939 157.542 295.737 cv
159.386 295.208 161.172 294.573 162.893 293.839 cv
165.531 294.274 168.238 294.5 171 294.5 cv
174.11 294.5 177.152 294.213 180.103 293.665 cv
187.068 295.473 193.768 298.765 199.725 303.588 cv
212.798 314.175 219.394 329.797 218.984 345.407 cv
216.795 345.915 214.673 346.628 212.645 347.527 cv
211.519 344.89 210.105 342.333 208.397 339.899 cv
207.339 329.222 202.177 318.957 193.18 311.671 cv
185.477 305.433 176.22 302.399 167.025 302.399 cv
154.906 302.399 142.892 307.668 134.671 317.82 cv
123.046 332.176 122.546 351.922 132.078 366.626 cv
132.086 366.764 132.095 366.904 132.105 367.042 cv
130.095 370.686 128.81 374.653 128.279 378.72 cv
215.937 361.625 mo
215.801 359.174 215.449 356.727 214.878 354.313 cv
215.962 353.8 217.08 353.355 218.228 352.982 cv
217.719 355.903 216.956 358.796 215.937 361.625 cv
.498039 .760784 .937255 rgb
f
144.978 297.512 mo
144.554 297.512 144.131 297.506 143.709 297.494 cv
148.251 295.223 153.079 293.645 158.02 292.781 cv
159.613 293.212 161.24 293.567 162.893 293.839 cv
161.172 294.573 159.386 295.208 157.542 295.737 cv
153.352 296.939 149.13 297.512 144.978 297.512 cv
.305882 .737255 .917647 rgb
f
185.611 392.564 mo
187.116 388.679 187.684 384.481 187.269 380.341 cv
188.753 379.514 190.194 378.591 191.582 377.573 cv
191.303 381.585 191.709 385.508 192.708 389.216 cv
190.418 390.517 188.044 391.634 185.611 392.564 cv
134.653 384.714 mo
134.527 384.614 134.401 384.513 134.275 384.412 cv
132.096 382.647 130.096 380.741 128.279 378.72 cv
128.81 374.653 130.095 370.686 132.105 367.042 cv
132.402 371.186 133.315 375.31 134.864 379.273 cv
134.608 381.072 134.536 382.895 134.653 384.714 cv
.247059 .67451 .917647 rgb
f
171 294.5 mo
168.238 294.5 165.531 294.274 162.893 293.839 cv
164.202 293.281 165.474 292.667 166.707 291.999 cv
166.816 291.999 166.922 291.998 167.031 291.998 cv
171.416 291.998 175.809 292.55 180.103 293.665 cv
177.152 294.213 174.11 294.5 171 294.5 cv
.247059 .713725 .905882 rgb
f
162.893 293.839 mo
161.24 293.567 159.613 293.212 158.02 292.781 cv
160.887 292.279 163.795 292.018 166.707 291.999 cv
165.474 292.667 164.202 293.281 162.893 293.839 cv
.152941 .701961 .898039 rgb
f
268.963 54.5114 mo
261.532 54.5114 253.991 52.8658 246.862 49.3891 cv
246.714 49.3167 246.567 49.2442 246.419 49.1705 cv
249.715 47.1641 252.732 44.769 255.417 42.0518 cv
259.861 43.6444 264.444 44.4087 268.97 44.4092 cv
283.933 44.4105 298.31 36.0639 305.312 21.7101 cv
305.503 21.3184 305.686 20.9257 305.864 20.531 cv
307.314 24.3767 309.198 28.0001 311.459 31.3477 cv
301.996 46.0806 285.772 54.5114 268.963 54.5114 cv
237.326 43.346 mo
224.227 32.8215 217.343 16.4602 218.645 0 cv
228.787 0 li
227.34 14.5702 233.95 29.1565 246.477 37.5452 cv
243.749 39.8885 240.673 41.8527 237.326 43.346 cv
.615686 .960784 .960784 rgb
f
316.961 19.83 mo
314.621 14.8456 313.23 9.31637 313.025 3.46577 cv
312.985 2.2999 312.992 1.1451 313.045 0 cv
319.349 0 li
319.877 6.56766 319.124 13.3028 316.961 19.83 cv
f
311.459 31.3477 mo
309.198 28.0001 307.314 24.3767 305.864 20.531 cv
308.853 13.8755 309.892 6.81123 309.207 0 cv
313.045 0 li
312.992 1.1451 312.985 2.2999 313.025 3.46577 cv
313.23 9.31637 314.621 14.8456 316.961 19.83 cv
316.255 21.9591 315.399 24.066 314.389 26.1376 cv
313.504 27.9522 312.524 29.6897 311.459 31.3477 cv
.439216 .941176 .941176 rgb
f
319.349 1000 mo
313.045 1000 li
313.275 995.061 314.364 990.331 316.17 985.966 cv
317.885 990.454 318.962 995.182 319.349 1000 cv
228.787 1000 mo
218.645 1000 li
219.13 993.868 220.751 987.725 223.611 981.862 cv
225.326 978.345 227.396 975.117 229.757 972.199 cv
233.347 972.954 236.764 974.226 239.919 975.94 cv
237.052 978.912 234.596 982.378 232.688 986.29 cv
230.526 990.725 229.248 995.362 228.787 1000 cv
305.056 985.771 mo
301.219 978.167 294.956 971.71 286.71 967.688 cv
281.009 964.908 274.973 963.591 269.03 963.591 cv
261.486 963.591 254.091 965.712 247.715 969.655 cv
244.519 967.564 241.062 965.854 237.411 964.585 cv
241.014 961.702 244.983 959.341 249.18 957.552 cv
251.167 959.389 253.743 960.624 256.641 960.929 cv
257.103 960.977 257.562 961.001 258.017 961.001 cv
263.136 961.001 267.692 957.986 269.785 953.494 cv
276.974 953.601 284.248 955.251 291.138 958.611 cv
298.996 962.444 305.415 968.047 310.146 974.705 cv
308.042 978.156 306.326 981.866 305.056 985.771 cv
258.013 958.401 mo
257.65 958.401 257.282 958.382 256.913 958.343 cv
255.059 958.148 253.37 957.477 251.955 956.464 cv
256.71 954.759 261.718 953.764 266.805 953.538 cv
264.945 956.491 261.658 958.401 258.013 958.401 cv
.615686 .960784 .960784 rgb
f
313.045 1000 mo
309.207 1000 li
308.709 995.038 307.295 990.208 305.056 985.771 cv
306.326 981.866 308.042 978.156 310.146 974.705 cv
312.632 978.203 314.651 981.989 316.17 985.966 cv
314.364 990.331 313.275 995.061 313.045 1000 cv
.439216 .941176 .941176 rgb
f
984.981 203.007 mo
971.735 203.007 959.614 194.168 956.023 180.765 cv
955.425 178.536 955.096 176.299 955.013 174.087 cv
957.058 174.222 959.081 174.493 961.07 174.895 cv
961.185 176.329 961.432 177.772 961.817 179.212 cv
964.69 189.934 974.389 197.005 984.985 197.006 cv
987.042 197.006 989.131 196.74 991.212 196.182 cv
991.256 196.17 991.3 196.158 991.344 196.146 cv
992.388 197.871 993.328 199.682 994.151 201.571 cv
993.694 201.716 993.233 201.852 992.765 201.977 cv
990.164 202.674 987.551 203.007 984.981 203.007 cv
962.942 163.54 mo
960.927 163.148 958.886 162.862 956.826 162.688 cv
960.075 153.836 967.435 146.648 977.235 144.022 cv
979.836 143.326 982.449 142.993 985.019 142.993 cv
990.357 142.993 995.512 144.428 1000 147.019 cv
1000 154.263 li
995.807 150.912 990.532 148.994 985.015 148.994 cv
982.958 148.994 980.869 149.26 978.788 149.818 cv
971.4 151.798 965.744 157.018 962.942 163.54 cv
.498039 .788235 .921569 rgb
f
4.26176 196.009 mo
3.39647 194.117 2.43766 192.293 1.39214 190.536 cv
7.64896 184.677 10.5558 175.647 8.182 166.788 cv
6.80508 161.65 3.85949 157.349 0 154.263 cv
0 147.019 li
6.64905 150.858 11.8336 157.233 13.9776 165.235 cv
17.0961 176.873 12.9237 188.747 4.26176 196.009 cv
f
529.009 977 mo
518.57 977 508.158 972.835 500.478 964.598 cv
485.787 948.846 486.649 924.167 502.402 909.478 cv
508.427 903.858 515.76 900.515 523.339 899.409 cv
529.888 903.409 537.42 905.505 545.039 905.505 cv
546.728 905.505 548.419 905.402 550.106 905.194 cv
552.768 906.91 555.264 908.98 557.522 911.402 cv
572.213 927.154 571.351 951.833 555.598 966.522 cv
548.082 973.531 538.534 977 529.009 977 cv
528.993 906.8 mo
521.372 906.8 513.735 909.574 507.722 915.182 cv
495.119 926.934 494.43 946.676 506.182 959.278 cv
512.326 965.867 520.657 969.2 529.007 969.2 cv
536.628 969.201 544.265 966.426 550.278 960.818 cv
562.881 949.066 563.57 929.324 551.818 916.722 cv
545.674 910.133 537.343 906.8 528.993 906.8 cv
.611765 .890196 .960784 rgb
f
987.016 706.012 mo
982.465 706.012 977.837 705.346 973.259 703.946 cv
950.138 696.878 936.433 673.598 940.793 650.38 cv
941.182 650.346 941.571 650.306 941.961 650.258 cv
945.206 649.859 948.281 648.995 951.125 647.741 cv
951.098 647.829 951.07 647.918 951.043 648.007 cv
944.972 667.865 956.148 688.886 976.007 694.957 cv
979.67 696.077 983.372 696.61 987.013 696.61 cv
991.498 696.61 995.891 695.801 1000 694.283 cv
1000 704.172 li
995.823 705.378 991.457 706.012 987.016 706.012 cv
942.597 643.591 mo
945.349 635.645 950.048 628.879 955.989 623.674 cv
955.445 625.47 955.333 627.425 955.751 629.391 cv
956.156 631.298 957.013 632.993 958.185 634.389 cv
954.376 639.08 948.938 642.458 942.597 643.591 cv
959.601 632.472 mo
958.841 631.445 958.284 630.244 958.001 628.913 cv
957.024 624.315 959.666 619.79 964.002 618.301 cv
963.948 623.481 962.349 628.373 959.601 632.472 cv
969.59 625.673 mo
970.154 623.354 970.466 620.949 970.5 618.491 cv
972.639 619.373 974.418 621.049 975.395 623.232 cv
973.393 623.883 971.451 624.701 969.59 625.673 cv
977.62 622.583 mo
976.298 619.394 973.626 617.026 970.441 616.025 cv
970.421 615.697 970.396 615.369 970.365 615.04 cv
975.612 613.05 981.237 611.988 986.984 611.988 cv
988.654 611.988 990.336 612.078 992.021 612.26 cv
992.036 612.723 992.06 613.185 992.093 613.65 cv
992.294 616.536 992.813 619.324 993.613 621.982 cv
991.398 621.584 989.18 621.39 986.987 621.39 cv
983.795 621.39 980.65 621.8 977.62 622.583 cv
1000 615.928 mo
999.883 615.212 999.791 614.488 999.725 613.755 cv
999.816 613.781 999.909 613.807 1000 613.834 cv
1000 615.928 li
.603922 .960784 .960784 rgb
f
958.185 634.389 mo
957.013 632.993 956.156 631.298 955.751 629.391 cv
955.333 627.425 955.445 625.47 955.989 623.674 cv
958.462 621.507 961.15 619.611 964.003 618.01 cv
964.003 618.108 964.003 618.204 964.002 618.301 cv
959.666 619.79 957.024 624.315 958.001 628.913 cv
958.284 630.244 958.841 631.445 959.601 632.472 cv
959.158 633.132 958.685 633.772 958.185 634.389 cv
975.395 623.232 mo
974.418 621.049 972.639 619.373 970.5 618.491 cv
970.512 617.674 970.492 616.851 970.441 616.025 cv
973.626 617.026 976.298 619.394 977.62 622.583 cv
976.871 622.777 976.129 622.993 975.395 623.232 cv
.352941 .894118 .933333 rgb
f
0 704.172 mo
0 694.283 li
10.6395 690.354 19.3852 681.676 22.9569 669.993 cv
25.1944 662.675 25.0897 655.2 23.0709 648.372 cv
23.9834 648.54 24.909 648.677 25.8414 648.778 cv
26.1746 649.453 26.5244 650.121 26.8931 650.786 cv
28.8862 654.382 31.2793 657.612 33.9892 660.456 cv
33.8606 664.531 33.1956 668.655 31.9463 672.741 cv
27.1229 688.518 14.7495 699.911 0 704.172 cv
22.6861 640.516 mo
21.4515 640.21 20.2461 639.829 19.0732 639.376 cv
15.3237 633.243 9.81282 628.159 2.98774 624.963 cv
1.54971 622.185 .525174 619.149 0 615.928 cv
0 613.833 li
.247227 613.905 .494828 613.978 .741788 614.054 cv
8.17617 616.327 14.6364 620.275 19.8363 625.359 cv
20.2076 625.987 20.5957 626.607 20.9989 627.215 cv
20.9205 631.65 21.47 636.127 22.6861 640.516 cv
.603922 .960784 .960784 rgb
f
250.009 408 mo
249.832 408 249.655 407.996 249.476 407.986 cv
249.283 407.976 249.09 407.961 248.9 407.94 cv
249.722 407.295 250.517 406.614 251.281 405.899 cv
254.922 405.313 257.788 402.252 257.989 398.419 cv
258.008 398.062 258.003 397.709 257.976 397.361 cv
258.486 396.451 258.958 395.514 259.39 394.553 cv
259.843 395.786 260.059 397.128 259.986 398.523 cv
259.707 403.861 255.291 408 250.009 408 cv
242.06 404.079 mo
240.663 402.258 239.884 399.949 240.014 397.476 cv
240.293 392.14 244.709 388 249.992 388 cv
250.168 388 250.345 388.004 250.523 388.014 cv
251.757 388.078 252.928 388.364 253.997 388.831 cv
253.789 389.47 253.559 390.097 253.309 390.714 cv
252.423 390.312 251.449 390.065 250.418 390.011 cv
250.276 390.003 250.134 390 249.993 390 cv
245.767 390 242.235 393.311 242.011 397.581 cv
241.905 399.601 242.558 401.485 243.72 402.957 cv
243.18 403.35 242.626 403.725 242.06 404.079 cv
.686274 .960784 .960784 rgb
f
597.032 47.5041 mo
590.602 47.5041 584.247 45.7094 578.745 42.2847 cv
579.223 39.2499 579.028 36.1455 578.186 33.203 cv
583.362 38.0304 590.141 40.6028 597.026 40.6033 cv
602.179 40.6036 607.389 39.1628 612.032 36.1474 cv
624.15 28.2779 628.046 12.5098 621.349 0 cv
628.964 0 li
635.096 15.0286 629.905 32.7676 615.79 41.9341 cv
609.987 45.7027 603.472 47.5041 597.032 47.5041 cv
574.796 39.417 mo
572.249 37.275 569.972 34.7258 568.065 31.79 cv
566.317 29.0971 564.992 26.2523 564.074 23.3318 cv
565.66 23.9471 567.179 24.816 568.572 25.9439 cv
572.786 29.3561 574.917 34.3859 574.796 39.417 cv
571.117 22.6003 mo
568.637 20.6166 565.844 19.2854 562.946 18.5855 cv
561.917 12.2888 562.667 5.84754 565.04 0 cv
572.647 0 li
568.992 6.86329 568.33 15.1083 571.117 22.6003 cv
.643137 .960784 .960784 rgb
f
628.964 1000 mo
621.349 1000 li
620.98 999.312 620.58 998.634 620.147 997.968 cv
614.861 989.827 606.008 985.397 596.974 985.397 cv
591.822 985.397 586.611 986.837 581.968 989.853 cv
577.909 992.488 574.772 996.011 572.647 1000 cv
565.04 1000 li
567.603 993.684 572.06 988.06 578.21 984.065 cv
584.013 980.297 590.527 978.496 596.967 978.496 cv
608.26 978.496 619.325 984.034 625.935 994.21 cv
627.146 996.075 628.154 998.014 628.964 1000 cv
f
635.719 534.002 mo
630.222 533.965 624.971 532.637 620.292 530.283 cv
622.154 527.945 624.827 526.321 627.828 525.788 cv
630.345 526.557 633.001 526.978 635.733 527.001 cv
636.208 527.249 636.663 527.526 637.097 527.829 cv
636.785 529.901 636.326 531.965 635.719 534.002 cv
647.964 531.901 mo
648.484 529.228 648.808 526.53 648.939 523.839 cv
653.615 521.402 657.475 517.699 660.117 513.228 cv
660.43 513.758 660.732 514.297 661.024 514.846 cv
662.024 516.725 662.861 518.648 663.542 520.598 cv
659.569 525.663 654.211 529.635 647.964 531.901 cv
617.559 528.75 mo
608.689 523.244 602.367 513.845 601.191 502.658 cv
601.132 502.09 601.086 501.524 601.054 500.96 cv
602.56 499.872 604.159 498.872 605.846 497.975 cv
606.583 497.584 607.327 497.217 608.076 496.874 cv
607.952 498.529 607.974 500.218 608.153 501.927 cv
609.185 511.741 615.171 519.837 623.364 523.99 cv
621.075 525.077 619.077 526.714 617.559 528.75 cv
669.516 509.114 mo
667.888 506.198 666.012 503.501 663.93 501.038 cv
664.047 499.411 664.023 497.751 663.846 496.073 cv
662.335 481.689 650.182 470.998 636.034 470.998 cv
635.055 470.998 634.068 471.049 633.073 471.153 cv
629.789 471.498 626.698 472.398 623.882 473.75 cv
623.332 473.379 622.772 473.016 622.205 472.661 cv
620.453 471.567 618.665 470.579 616.848 469.696 cv
621.356 466.744 626.615 464.793 632.342 464.191 cv
633.584 464.061 634.82 463.997 636.043 463.997 cv
653.73 463.997 668.919 477.36 670.808 495.342 cv
671.311 500.124 670.826 504.783 669.516 509.114 cv
602.724 488.121 mo
603.894 484.549 605.628 481.212 607.831 478.227 cv
610.048 479.05 612.226 480.056 614.346 481.249 cv
613.457 482.334 612.649 483.484 611.93 484.691 cv
608.81 485.521 605.728 486.66 602.724 488.121 cv
.709804 .960784 .960784 rgb
f
620.292 530.283 mo
619.357 529.812 618.446 529.301 617.559 528.75 cv
619.077 526.714 621.075 525.077 623.364 523.99 cv
624.791 524.713 626.283 525.316 627.828 525.788 cv
624.827 526.321 622.154 527.945 620.292 530.283 cv
637.097 527.829 mo
636.663 527.526 636.208 527.249 635.733 527.001 cv
635.81 527.002 635.889 527.002 635.966 527.002 cv
636.382 527.002 636.799 526.993 637.218 526.974 cv
637.18 527.26 637.141 527.543 637.097 527.829 cv
.552941 .917647 .941176 rgb
f
758.967 139.012 mo
751.749 139.012 744.419 137.473 737.446 134.222 cv
729.07 130.316 722.254 124.426 717.296 117.371 cv
719.84 114.77 722.076 111.951 723.996 108.968 cv
728.038 115.731 734.079 121.397 741.757 124.977 cv
747.334 127.578 753.201 128.809 758.973 128.81 cv
774.34 128.811 789.055 120.088 795.977 105.243 cv
797.173 102.679 798.079 100.053 798.71 97.4048 cv
801.52 97.8115 804.31 98.0087 807.071 98.0087 cv
807.724 98.0087 808.377 97.9976 809.027 97.9756 cv
808.243 101.89 806.983 105.775 805.221 109.554 cv
796.569 128.109 778.173 139.012 758.967 139.012 cv
711.853 107.447 mo
710.32 103.727 709.226 99.8299 708.601 95.8411 cv
711.808 96.5054 715.051 96.8826 718.295 96.9786 cv
716.686 100.713 714.53 104.248 711.853 107.447 cv
807.057 86.4066 mo
804.648 86.4065 802.205 86.2183 799.75 85.83 cv
798.962 71.2736 790.378 57.6138 776.243 51.0226 cv
775.894 50.8598 775.543 50.702 775.192 50.5499 cv
775.799 47.0236 776.063 43.4583 775.992 39.9099 cv
777.526 40.4539 779.049 41.0764 780.554 41.7783 cv
798.554 50.1721 809.353 67.7363 809.983 86.3139 cv
809.013 86.3754 808.038 86.4067 807.057 86.4066 cv
718.25 85.7698 mo
714.851 85.6399 711.454 85.1234 708.127 84.2105 cv
708.572 78.2221 710.09 72.2113 712.778 66.4463 cv
713.904 64.0329 715.195 61.747 716.631 59.5996 cv
718.898 63.7687 720.404 68.1908 721.18 72.6894 cv
719.446 76.9636 718.489 81.3804 718.25 85.7698 cv
728.837 60.5092 mo
727.548 57.2204 725.916 54.0197 723.93 50.9534 cv
730.951 44.3104 739.691 39.8498 749.029 37.9807 cv
748.903 41.4757 749.095 44.9279 749.581 48.3 cv
741.697 50.1755 734.423 54.3758 728.837 60.5092 cv
764.329 47.5385 mo
763.271 47.3987 762.214 47.3017 761.156 47.2461 cv
760.631 43.9173 760.465 40.491 760.693 37.0149 cv
762.008 37.058 763.33 37.1527 764.647 37.2996 cv
764.931 40.701 764.828 44.1355 764.329 47.5385 cv
.498039 .960784 .960784 rgb
f
287.946 810.007 mo
287.922 810.007 287.9 810.007 287.877 810.007 cv
284.2 806.869 279.96 804.26 275.232 802.35 cv
269.585 800.068 263.754 798.988 258.016 798.988 cv
256.743 798.988 255.476 799.041 254.216 799.146 cv
253.096 798.344 252.011 797.509 250.964 796.642 cv
250.997 795.891 251.008 795.134 250.995 794.372 cv
250.963 792.587 250.803 790.834 250.522 789.123 cv
251.458 787.195 252.634 785.355 254.052 783.647 cv
256.582 786.356 259.479 788.804 262.728 790.914 cv
270.534 795.983 279.295 798.405 287.956 798.405 cv
292.654 798.405 297.323 797.692 301.794 796.303 cv
302.499 800.348 302.286 804.522 301.154 808.488 cv
296.834 809.494 292.4 810.007 287.946 810.007 cv
308.599 806.223 mo
309.238 802.09 309.113 797.863 308.226 793.767 cv
315.602 790.204 322.127 784.643 326.914 777.271 cv
337.388 761.143 336.562 740.935 326.415 725.955 cv
328.589 726.32 330.783 726.502 332.973 726.502 cv
335.266 726.502 337.554 726.303 339.811 725.909 cv
348.757 743.717 348.28 765.669 336.643 783.589 cv
329.664 794.336 319.728 802.005 308.599 806.223 cv
243.123 788.767 mo
239.305 784.109 236.284 778.932 234.108 773.452 cv
238.564 777.406 241.791 782.725 243.123 788.767 cv
247.928 780.424 mo
244.517 772.73 238.496 766.468 231.004 762.744 cv
228.335 748.597 230.897 733.438 239.357 720.411 cv
249.237 705.198 265.043 696.151 281.772 694.334 cv
281.843 694.759 281.927 695.185 282.026 695.611 cv
282.935 699.549 284.921 702.957 287.602 705.597 cv
272.567 705.739 257.888 713.174 249.086 726.729 cv
238.564 742.932 239.447 763.254 249.727 778.254 cv
249.093 778.958 248.493 779.682 247.928 780.424 cv
298.852 706.874 mo
297.933 706.653 297.011 706.461 296.085 706.298 cv
291.19 704.4 287.29 700.19 286.021 694.69 cv
285.97 694.471 285.924 694.252 285.883 694.034 cv
286.606 694.007 287.33 693.993 288.054 693.993 cv
290.095 693.993 292.142 694.101 294.183 694.318 cv
295.008 698.701 296.573 702.955 298.852 706.874 cv
.721569 .960784 .960784 rgb
f
296.085 706.298 mo
293.416 705.827 290.725 705.595 288.043 705.595 cv
287.896 705.595 287.749 705.595 287.602 705.597 cv
284.921 702.957 282.935 699.549 282.026 695.611 cv
281.927 695.185 281.843 694.759 281.772 694.334 cv
283.137 694.185 284.509 694.085 285.883 694.034 cv
285.924 694.252 285.97 694.471 286.021 694.69 cv
287.29 700.19 291.19 704.4 296.085 706.298 cv
.54902 .941176 .941176 rgb
f
287.877 810.007 mo
277.072 809.994 266.148 806.966 256.411 800.643 cv
255.665 800.158 254.933 799.659 254.216 799.146 cv
255.476 799.041 256.743 798.988 258.016 798.988 cv
263.754 798.988 269.585 800.068 275.232 802.35 cv
279.96 804.26 284.2 806.869 287.877 810.007 cv
.572549 .941176 .941176 rgb
f
301.154 808.488 mo
302.286 804.522 302.499 800.348 301.794 796.303 cv
303.992 795.62 306.143 794.773 308.226 793.767 cv
309.113 797.863 309.238 802.09 308.599 806.223 cv
306.169 807.143 303.679 807.901 301.154 808.488 cv
250.522 789.123 mo
250.022 786.075 249.14 783.16 247.928 780.424 cv
248.493 779.682 249.093 778.958 249.727 778.254 cv
251.022 780.143 252.464 781.946 254.052 783.647 cv
252.634 785.355 251.458 787.195 250.522 789.123 cv
.545098 .937255 .941176 rgb
f
332.978 718.601 mo
326.176 718.601 319.321 716.414 313.545 711.901 cv
312.58 711.148 311.671 710.349 310.819 709.511 cv
314.052 707.975 316.757 705.645 318.749 702.822 cv
319.029 702.997 319.31 703.176 319.589 703.357 cv
325.958 707.493 331.244 712.665 335.374 718.511 cv
334.577 718.571 333.778 718.601 332.978 718.601 cv
307.955 706.283 mo
305.522 703.127 303.751 699.587 302.667 695.869 cv
306.943 696.987 311.141 698.611 315.181 700.759 cv
313.383 703.19 310.908 705.136 307.955 706.283 cv
.721569 .960784 .960784 rgb
f
310.819 709.511 mo
309.78 708.49 308.826 707.412 307.955 706.283 cv
310.908 705.136 313.383 703.19 315.181 700.759 cv
316.385 701.4 317.575 702.087 318.749 702.822 cv
316.757 705.645 314.052 707.975 310.819 709.511 cv
.54902 .941176 .941176 rgb
f
852.984 165.507 mo
849.11 165.507 845.175 164.713 841.408 163.036 cv
837.255 161.187 833.761 158.466 831.047 155.185 cv
831.247 154.418 831.47 153.651 831.719 152.887 cv
832.196 151.416 832.753 149.993 833.382 148.621 cv
835.707 152.554 839.234 155.829 843.727 157.829 cv
846.739 159.171 849.889 159.806 852.987 159.806 cv
861.718 159.807 870.049 154.764 873.829 146.274 cv
876.847 139.495 876.29 132.029 872.969 125.993 cv
875.247 126.228 877.533 126.665 879.805 127.318 cv
882.219 134 882.154 141.589 879.036 148.592 cv
874.311 159.204 863.896 165.507 852.984 165.507 cv
825.159 143.101 mo
823.897 137.364 824.391 131.186 826.964 125.408 cv
831.689 114.796 842.104 108.493 853.016 108.493 cv
856.889 108.493 860.825 109.287 864.592 110.964 cv
867.539 112.276 870.155 114.028 872.394 116.106 cv
871.256 116.026 870.121 115.987 868.99 115.987 cv
866.89 115.987 864.807 116.123 862.749 116.389 cv
862.592 116.315 862.433 116.242 862.273 116.171 cv
859.261 114.83 856.111 114.194 853.013 114.194 cv
844.282 114.194 835.951 119.236 832.171 127.727 cv
831.124 130.078 830.507 132.513 830.287 134.941 cv
828.337 137.452 826.614 140.179 825.159 143.101 cv
.498039 .8 .862745 rgb
f
831.047 155.185 mo
828.141 151.672 826.13 147.518 825.159 143.101 cv
826.614 140.179 828.337 137.452 830.287 134.941 cv
829.85 139.753 830.969 144.541 833.382 148.621 cv
832.753 149.993 832.196 151.416 831.719 152.887 cv
831.47 153.651 831.247 154.418 831.047 155.185 cv
879.805 127.318 mo
877.533 126.665 875.247 126.228 872.969 125.993 cv
870.732 121.929 867.244 118.513 862.749 116.389 cv
864.807 116.123 866.89 115.987 868.99 115.987 cv
870.121 115.987 871.256 116.026 872.394 116.106 cv
875.761 119.23 878.278 123.092 879.805 127.318 cv
.32549 .780392 .843137 rgb
f
408.975 199.001 mo
397.859 199.001 386.685 195.24 377.504 187.536 cv
356.772 170.141 354.068 139.234 371.464 118.504 cv
381.155 106.954 395.043 100.999 409.025 100.999 cv
420.14 100.999 431.315 104.76 440.496 112.464 cv
440.822 112.738 441.146 113.016 441.463 113.297 cv
439.762 116.457 438.49 119.805 437.66 123.25 cv
436.586 122.103 435.431 121.007 434.197 119.971 cv
426.853 113.809 417.911 110.799 409.02 110.799 cv
397.832 110.799 386.724 115.562 378.971 124.803 cv
365.055 141.387 367.218 166.113 383.803 180.029 cv
391.147 186.191 400.089 189.2 408.98 189.201 cv
420.168 189.201 431.275 184.438 439.029 175.197 cv
442.782 170.725 445.365 165.663 446.811 160.378 cv
449.213 163.12 451.907 165.473 454.81 167.43 cv
452.912 172.417 450.16 177.178 446.536 181.497 cv
436.845 193.046 422.957 199.001 408.975 199.001 cv
457.197 158.884 mo
455.247 157.314 453.445 155.497 451.838 153.44 cv
450.363 151.553 449.126 149.557 448.12 147.487 cv
447.823 142.871 446.715 138.314 444.814 134.041 cv
444.665 129.151 445.594 124.257 447.555 119.743 cv
456.364 130.944 459.691 145.284 457.197 158.884 cv
.772549 .960784 .960784 rgb
f
454.81 167.43 mo
451.907 165.473 449.213 163.12 446.811 160.378 cv
447.966 156.16 448.397 151.797 448.12 147.487 cv
449.126 149.557 450.363 151.553 451.838 153.44 cv
453.445 155.497 455.247 157.314 457.197 158.884 cv
456.666 161.778 455.871 164.64 454.81 167.43 cv
444.814 134.041 mo
443.082 130.146 440.692 126.49 437.66 123.25 cv
438.49 119.805 439.762 116.457 441.463 113.297 cv
443.722 115.292 445.752 117.452 447.555 119.743 cv
445.594 124.257 444.665 129.151 444.814 134.041 cv
.537255 .917647 .941176 rgb
f
785.784 998.73 mo
789.008 997.07 792.438 995.78 796.007 994.908 cv
795.051 995.518 794.044 996.072 792.988 996.564 cv
790.644 997.657 788.218 998.371 785.784 998.73 cv
769.466 995.782 mo
764.792 993.215 760.862 989.192 758.436 983.988 cv
755.055 976.738 755.305 968.727 758.439 962.003 cv
762.521 958.544 767.341 955.931 772.62 954.435 cv
762.631 959.476 758.387 971.578 763.148 981.79 cv
765.447 986.719 769.431 990.324 774.094 992.239 cv
772.493 993.342 770.95 994.523 769.466 995.782 cv
800.585 982.341 mo
803.338 976.854 803.647 970.206 800.852 964.21 cv
798.452 959.065 794.216 955.362 789.289 953.519 cv
794.744 954.427 799.799 956.495 804.197 959.456 cv
804.694 960.272 805.151 961.125 805.564 962.012 cv
808.615 968.554 808.709 975.717 806.395 981.994 cv
804.438 982.012 802.502 982.129 800.585 982.341 cv
.588235 .960784 .960784 rgb
f
642.956 339.512 mo
642.029 339.512 641.099 339.488 640.17 339.44 cv
637.819 337.001 635.222 334.733 632.386 332.672 cv
623.404 326.147 613.19 322.548 602.879 321.695 cv
604.569 317.114 605.478 312.237 605.51 307.27 cv
609.577 314.131 615.574 319.959 623.206 323.848 cv
629.545 327.078 636.307 328.609 642.965 328.609 cv
658.348 328.61 673.194 320.441 681.108 306.184 cv
684.444 307.335 687.831 308.124 691.227 308.571 cv
679.011 313.938 669.443 323.577 664.003 335.292 cv
657.369 338.058 650.209 339.512 642.956 339.512 cv
596.416 313.301 mo
591.173 304.652 588.403 294.653 588.491 284.487 cv
591.104 287.445 593.244 290.913 594.742 294.815 cv
597.089 300.93 597.552 307.306 596.416 313.301 cv
695.8 298.553 mo
692.207 298.363 688.594 297.702 685.054 296.538 cv
690.437 276.997 681.559 255.713 662.794 246.152 cv
661.352 245.418 659.889 244.771 658.41 244.21 cv
658.934 242.596 659.562 240.996 660.298 239.419 cv
661.128 237.638 662.068 235.944 663.107 234.341 cv
664.668 234.962 666.215 235.662 667.742 236.44 cv
690.921 248.25 702.032 274.367 695.8 298.553 cv
599.391 285.033 mo
596.775 280.687 593.453 276.936 589.634 273.872 cv
589.653 273.785 589.671 273.696 589.69 273.608 cv
591.643 274.514 593.793 275.004 595.997 275.004 cv
597.533 275.004 599.095 274.766 600.635 274.266 cv
600.67 274.254 600.706 274.242 600.741 274.231 cv
599.827 277.806 599.385 281.436 599.391 285.033 cv
595.997 272.003 mo
594.032 272.003 592.119 271.516 590.419 270.623 cv
591.385 267.106 592.72 263.634 594.44 260.257 cv
596.464 256.286 598.907 252.67 601.688 249.434 cv
604.313 250.847 606.419 253.233 607.413 256.292 cv
607.709 257.202 607.89 258.123 607.964 259.037 cv
606.548 260.954 605.27 263.013 604.152 265.206 cv
603.275 266.928 602.522 268.683 601.892 270.457 cv
601.21 270.84 600.481 271.162 599.708 271.413 cv
598.476 271.813 597.226 272.003 595.997 272.003 cv
610.45 255.976 mo
610.393 255.772 610.332 255.568 610.266 255.365 cv
609.106 251.796 606.736 248.959 603.757 247.161 cv
614.096 236.43 628.375 230.488 643.044 230.488 cv
646.274 230.488 649.525 230.777 652.755 231.365 cv
652.086 232.549 651.457 233.771 650.872 235.024 cv
649.847 237.223 648.989 239.456 648.292 241.711 cv
646.54 241.496 644.783 241.391 643.035 241.391 cv
630.743 241.391 618.794 246.606 610.45 255.976 cv
.537255 .960784 .960784 rgb
f
595.997 275.004 mo
593.793 275.004 591.643 274.514 589.69 273.608 cv
589.904 272.61 590.147 271.615 590.419 270.623 cv
592.119 271.516 594.032 272.003 595.997 272.003 cv
597.226 272.003 598.476 271.813 599.708 271.413 cv
600.481 271.162 601.21 270.84 601.892 270.457 cv
601.448 271.707 601.066 272.964 600.741 274.231 cv
600.706 274.242 600.67 274.254 600.635 274.266 cv
599.095 274.766 597.533 275.004 595.997 275.004 cv
607.964 259.037 mo
607.89 258.123 607.709 257.202 607.413 256.292 cv
606.419 253.233 604.313 250.847 601.688 249.434 cv
602.358 248.655 603.049 247.896 603.757 247.161 cv
606.736 248.959 609.106 251.796 610.266 255.365 cv
610.332 255.568 610.393 255.772 610.45 255.976 cv
609.581 256.952 608.752 257.972 607.964 259.037 cv
.321569 .941176 .941176 rgb
f
602.879 321.695 mo
602.809 321.689 602.739 321.684 602.669 321.678 cv
600.305 319.077 598.214 316.268 596.416 313.301 cv
597.552 307.306 597.089 300.93 594.742 294.815 cv
593.244 290.913 591.104 287.445 588.491 284.487 cv
588.521 280.952 588.897 277.398 589.634 273.872 cv
593.453 276.936 596.775 280.687 599.391 285.033 cv
599.403 292.87 601.534 300.563 605.51 307.27 cv
605.478 312.237 604.569 317.114 602.879 321.695 cv
.364706 .941176 .941176 rgb
f
664.003 335.292 mo
669.443 323.577 679.011 313.938 691.227 308.571 cv
691.514 308.609 691.801 308.644 692.088 308.677 cv
691.917 309.033 691.74 309.389 691.56 309.743 cv
685.452 321.73 675.517 330.489 664.003 335.292 cv
.309804 .905882 .937255 rgb
f
970.008 832.007 mo
959.722 832.007 949.983 825.863 945.894 815.74 cv
940.514 802.426 946.946 787.272 960.26 781.894 cv
963.451 780.604 966.749 779.993 969.992 779.993 cv
970.462 779.993 970.93 780.006 971.397 780.031 cv
976.528 786.599 983.953 790.854 991.987 792.115 cv
992.802 793.409 993.513 794.792 994.106 796.26 cv
999.486 809.574 993.054 824.727 979.74 830.106 cv
976.549 831.396 973.251 832.007 970.008 832.007 cv
969.993 785.195 mo
967.398 785.195 964.761 785.683 962.208 786.715 cv
951.556 791.018 946.411 803.141 950.715 813.792 cv
953.986 821.889 961.779 826.805 970.007 826.805 cv
972.602 826.806 975.238 826.317 977.792 825.285 cv
988.443 820.982 993.589 808.859 989.285 798.208 cv
986.014 790.111 978.221 785.195 969.993 785.195 cv
.596078 .913725 .960784 rgb
f
110.045 194.002 mo
109.014 194.002 107.975 193.966 106.931 193.893 cv
82.6894 192.198 64.4122 171.172 66.1074 146.931 cv
67.7291 123.736 87.0535 105.998 109.954 105.998 cv
110.987 105.998 112.023 106.034 113.069 106.108 cv
124.709 106.921 134.973 112.191 142.312 120.135 cv
140.542 120.627 138.821 121.408 137.214 122.492 cv
136.222 123.161 135.32 123.915 134.512 124.736 cv
128.76 119.15 121.08 115.489 112.456 114.886 cv
111.621 114.828 110.788 114.799 109.964 114.799 cv
91.6403 114.799 76.1833 128.986 74.8857 147.544 cv
73.5297 166.938 88.1513 183.758 107.544 185.114 cv
108.379 185.173 109.212 185.201 110.036 185.201 cv
127.722 185.203 142.737 171.984 144.928 154.377 cv
145.62 154.46 146.317 154.502 147.016 154.502 cv
149.338 154.502 151.678 154.04 153.891 153.089 cv
153.62 156.936 152.863 160.634 151.683 164.124 cv
141.729 168.792 133.945 177.638 130.89 188.731 cv
124.656 192.101 117.542 194.002 110.045 194.002 cv
147.013 151.001 mo
146.402 151.001 145.793 150.961 145.19 150.882 cv
145.419 141.968 142.285 133.678 136.902 127.299 cv
137.576 126.599 138.333 125.959 139.171 125.393 cv
140.942 124.199 142.886 123.464 144.866 123.16 cv
150.457 130.417 153.813 139.434 153.994 149.128 cv
151.806 150.393 149.398 151.002 147.013 151.001 cv
.611765 .960784 .960784 rgb
f
147.016 154.502 mo
146.317 154.502 145.62 154.46 144.928 154.377 cv
145.007 153.742 145.069 153.102 145.114 152.455 cv
145.151 151.929 145.176 151.405 145.19 150.882 cv
145.793 150.961 146.402 151.001 147.013 151.001 cv
149.398 151.002 151.806 150.393 153.994 149.128 cv
154.018 150.431 153.985 151.745 153.893 153.069 cv
153.892 153.077 153.892 153.082 153.891 153.089 cv
151.678 154.04 149.338 154.502 147.016 154.502 cv
136.902 127.299 mo
136.148 126.406 135.351 125.551 134.512 124.736 cv
135.32 123.915 136.222 123.161 137.214 122.492 cv
138.821 121.408 140.542 120.627 142.312 120.135 cv
143.208 121.104 144.061 122.114 144.866 123.16 cv
142.886 123.464 140.942 124.199 139.171 125.393 cv
138.333 125.959 137.576 126.599 136.902 127.299 cv
.372549 .913725 .933333 rgb
f
277 486.5 mo
267.915 486.5 258.829 483.034 251.898 476.103 cv
238.034 462.238 238.034 439.762 251.898 425.898 cv
256.879 420.916 262.973 417.725 269.38 416.323 cv
267.6 418.71 266.586 421.608 266.502 424.604 cv
263.013 425.99 259.742 428.095 256.918 430.918 cv
245.827 442.009 245.827 459.991 256.918 471.082 cv
262.464 476.628 269.732 479.4 277 479.4 cv
284.268 479.4 291.536 476.628 297.082 471.082 cv
308.173 459.991 308.173 442.009 297.082 430.918 cv
296.394 430.23 295.68 429.585 294.943 428.983 cv
295.744 426.185 295.711 423.128 294.686 420.209 cv
297.338 421.734 299.836 423.631 302.103 425.898 cv
315.966 439.762 315.966 462.238 302.103 476.103 cv
295.171 483.034 286.085 486.5 277 486.5 cv
292.404 427.133 mo
287.731 424.111 282.365 422.6 277 422.6 cv
274.47 422.6 271.939 422.936 269.482 423.608 cv
269.866 420.455 271.539 417.528 274.183 415.611 cv
275.12 415.537 276.061 415.5 277 415.5 cv
281.527 415.5 286.053 416.36 290.314 418.081 cv
290.85 418.804 291.31 419.602 291.678 420.468 cv
292.605 422.653 292.811 424.963 292.404 427.133 cv
.564706 .929412 .960784 rgb
f
294.943 428.983 mo
294.123 428.314 293.276 427.697 292.404 427.133 cv
292.811 424.963 292.605 422.653 291.678 420.468 cv
291.31 419.602 290.85 418.804 290.314 418.081 cv
291.808 418.685 293.27 419.394 294.686 420.209 cv
295.711 423.128 295.744 426.185 294.943 428.983 cv
266.502 424.604 mo
266.586 421.608 267.6 418.71 269.38 416.323 cv
270.966 415.976 272.57 415.739 274.183 415.611 cv
271.539 417.528 269.866 420.455 269.482 423.608 cv
268.474 423.884 267.48 424.215 266.502 424.604 cv
.341176 .878431 .941176 rgb
f
533.994 310.004 mo
532.275 310.004 530.599 309.66 529.051 309.022 cv
528.993 308.052 528.977 307.084 529.002 306.12 cv
529.956 306.643 530.991 307.017 532.07 307.221 cv
533.033 308.086 533.954 309.006 534.824 309.977 cv
534.547 309.995 534.269 310.004 533.994 310.004 cv
543.307 306.079 mo
542.764 305.392 542.204 304.725 541.624 304.075 cv
544.015 301.494 545.037 297.762 543.997 294.133 cv
542.854 290.145 539.531 287.372 535.693 286.736 cv
536.267 285.961 536.875 285.209 537.516 284.482 cv
541.707 285.664 545.208 288.923 546.496 293.416 cv
547.829 298.064 546.454 302.847 543.307 306.079 cv
523.35 291.697 mo
523.002 291.57 522.653 291.448 522.302 291.33 cv
523.039 289.811 524.069 288.437 525.341 287.3 cv
524.595 288.726 523.93 290.195 523.35 291.697 cv
.501961 .815686 .788235 rgb
f
529.051 309.022 mo
525.523 307.567 522.667 304.579 521.519 300.634 cv
522.722 301.123 523.899 301.676 525.043 302.29 cv
526.007 303.925 527.388 305.236 529.002 306.12 cv
528.977 307.084 528.993 308.052 529.051 309.022 cv
524.756 292.235 mo
524.292 292.048 523.821 291.868 523.35 291.697 cv
523.93 290.195 524.595 288.726 525.341 287.3 cv
526.756 286.035 528.471 285.062 530.417 284.504 cv
531.614 284.16 532.82 283.997 534.007 283.997 cv
535.207 283.997 536.387 284.164 537.516 284.482 cv
536.875 285.209 536.267 285.961 535.693 286.736 cv
535.14 286.645 534.575 286.597 534.005 286.597 cv
533.056 286.597 532.091 286.728 531.134 287.003 cv
528.265 287.826 526.024 289.776 524.756 292.235 cv
.329412 .796078 .768627 rgb
f
168.048 237.505 mo
166.264 237.505 164.459 237.381 162.642 237.125 cv
152.542 235.706 143.91 230.487 137.99 223.117 cv
139.456 220.911 141.137 218.86 143.003 216.994 cv
147.74 223.573 155.051 228.283 163.713 229.5 cv
165.167 229.704 166.611 229.804 168.039 229.804 cv
169.887 229.804 171.706 229.637 173.48 229.317 cv
175.159 231.424 176.62 233.739 177.816 236.238 cv
174.678 237.067 171.401 237.505 168.048 237.505 cv
186.294 232.879 mo
185.204 230.516 183.924 228.279 182.483 226.185 cv
187.792 223.35 192.229 218.989 195.13 213.598 cv
197.228 215.212 199.158 217.032 200.893 219.026 cv
197.322 224.884 192.254 229.654 186.294 232.879 cv
205.14 209.158 mo
203.065 207.18 200.82 205.383 198.426 203.786 cv
198.452 203.62 198.477 203.454 198.501 203.287 cv
200.868 186.442 189.131 170.867 172.287 168.5 cv
170.833 168.296 169.388 168.196 167.961 168.196 cv
152.851 168.196 139.663 179.322 137.499 194.713 cv
136.904 198.952 137.201 203.111 138.248 206.999 cv
136.318 207.291 134.385 207.71 132.458 208.263 cv
131.885 208.427 131.316 208.602 130.754 208.787 cv
129.491 203.988 129.141 198.863 129.875 193.642 cv
130.111 191.962 130.452 190.324 130.89 188.731 cv
140.537 183.516 148.079 174.782 151.683 164.124 cv
156.669 161.785 162.199 160.495 167.952 160.495 cv
169.736 160.495 171.541 160.619 173.358 160.874 cv
194.414 163.834 209.085 183.302 206.126 204.358 cv
205.895 205.998 205.564 207.6 205.14 209.158 cv
.729412 .960784 .960784 rgb
f
177.816 236.238 mo
176.62 233.739 175.159 231.424 173.48 229.317 cv
176.659 228.743 179.691 227.675 182.483 226.185 cv
183.924 228.279 185.204 230.516 186.294 232.879 cv
183.629 234.321 180.785 235.454 177.816 236.238 cv
132.492 213.895 mo
131.797 212.242 131.215 210.537 130.754 208.787 cv
131.316 208.602 131.885 208.427 132.458 208.263 cv
134.385 207.71 136.318 207.291 138.248 206.999 cv
138.312 207.236 138.379 207.472 138.449 207.708 cv
136.29 209.594 134.296 211.665 132.492 213.895 cv
.537255 .937255 .941176 rgb
f
137.99 223.117 mo
136.523 221.292 135.223 219.333 134.107 217.268 cv
134.391 217.179 134.679 217.093 134.967 217.01 cv
137.351 216.327 139.744 215.898 142.124 215.707 cv
142.406 216.143 142.699 216.572 143.003 216.994 cv
141.137 218.86 139.456 220.911 137.99 223.117 cv
200.893 219.026 mo
199.158 217.032 197.228 215.212 195.13 213.598 cv
196.736 210.615 197.872 207.316 198.426 203.786 cv
200.82 205.383 203.065 207.18 205.14 209.158 cv
204.177 212.696 202.735 216.005 200.893 219.026 cv
.478431 .913725 .929412 rgb
f
134.107 217.268 mo
133.516 216.173 132.976 215.047 132.492 213.895 cv
134.296 211.665 136.29 209.594 138.449 207.708 cv
139.289 210.553 140.534 213.246 142.124 215.707 cv
139.744 215.898 137.351 216.327 134.967 217.01 cv
134.679 217.093 134.391 217.179 134.107 217.268 cv
.384314 .905882 .921569 rgb
f
130.89 188.731 mo
133.945 177.638 141.729 168.792 151.683 164.124 cv
148.079 174.782 140.537 183.516 130.89 188.731 cv
.533333 .941176 .941176 rgb
f
0 792.37 mo
0 792.287 li
.00642602 792.314 .0129788 792.341 .0195301 792.368 cv
.0133171 792.368 .00621286 792.369 0 792.37 cv
21.4893 751.264 mo
21.3187 750.787 21.1334 750.313 20.9331 749.841 cv
18.8335 744.895 15.3807 740.935 11.1908 738.211 cv
13.1929 737.84 15.165 737.111 17.0131 736 cv
17.3913 735.773 17.7585 735.533 18.1132 735.282 cv
21.827 738.449 24.8798 742.503 26.9166 747.301 cv
26.9491 747.377 26.9809 747.453 27.0128 747.53 cv
25.0893 748.656 23.2439 749.905 21.4893 751.264 cv
.498039 .960784 .937255 rgb
f
11.9173 788.876 mo
11.9998 787.778 12.1251 786.692 12.2918 785.62 cv
12.8881 786.298 13.5037 786.964 14.1386 787.619 cv
13.4202 788.063 12.6791 788.483 11.9173 788.876 cv
22.4421 780.232 mo
20.8544 778.63 19.416 776.938 18.1219 775.168 cv
18.5654 774.549 18.9798 773.914 19.3661 773.261 cv
21.593 773.469 23.7471 774.181 25.657 775.333 cv
24.7378 777.053 23.6633 778.694 22.4421 780.232 cv
27.2196 771.959 mo
25.3257 770.873 23.2514 770.127 21.0987 769.76 cv
21.8336 767.945 22.3646 766.049 22.6771 764.107 cv
24.7133 761.895 26.9871 759.908 29.4581 758.184 cv
29.7233 762.93 28.934 767.628 27.2196 771.959 cv
12.0571 734.402 mo
12.3672 733.51 12.7057 732.627 13.0745 731.751 cv
13.7811 732.153 14.4743 732.582 15.1505 733.036 cv
14.1557 733.627 13.1175 734.081 12.0571 734.402 cv
.834985 733.031 mo
.551027 732.862 .272559 732.683 0 732.493 cv
0 727.633 li
.878627 727.715 1.75088 727.833 2.61639 727.985 cv
1.93875 729.643 1.34512 731.327 .834985 733.031 cv
f
997.014 792.508 mo
995.322 792.508 993.643 792.375 991.987 792.115 cv
987.438 784.893 979.673 780.482 971.397 780.031 cv
969.682 777.837 968.224 775.385 967.084 772.699 cv
960.07 756.177 967.779 737.097 984.301 730.084 cv
986.797 729.024 989.351 728.301 991.913 727.893 cv
992.223 728.614 992.585 729.322 993 730.013 cv
993.915 731.536 995.026 732.871 996.281 734.003 cv
993.121 734.089 989.927 734.757 986.841 736.066 cv
973.623 741.678 967.456 756.941 973.066 770.159 cv
977.27 780.061 986.893 786.006 997.012 786.007 cv
997.879 786.007 998.749 785.963 999.62 785.875 cv
999.374 787.985 999.489 790.153 1000 792.288 cv
1000 792.37 li
999.003 792.462 998.007 792.508 997.014 792.508 cv
1000 732.493 mo
998.425 731.398 997.052 729.961 996 728.211 cv
995.863 727.983 995.734 727.753 995.611 727.521 cv
996.07 727.502 996.528 727.492 996.985 727.492 cv
997.995 727.492 999.001 727.539 1000 727.633 cv
1000 732.493 li
f
991.987 792.115 mo
983.953 790.854 976.528 786.599 971.397 780.031 cv
979.673 780.482 987.438 784.893 991.987 792.115 cv
.298039 .917647 .917647 rgb
f
550.106 905.194 mo
543.715 901.075 536.361 899 528.991 899 cv
527.102 899 525.213 899.136 523.339 899.409 cv
518.211 896.277 513.686 891.978 510.195 886.602 cv
503.239 875.891 501.856 863.166 505.321 851.839 cv
507.696 853.375 510.202 854.718 512.816 855.847 cv
510.627 864.5 511.912 874.006 517.156 882.082 cv
523.515 891.874 534.165 897.203 545.031 897.204 cv
551.229 897.204 557.496 895.471 563.082 891.844 cv
578.46 881.857 582.83 861.296 572.844 845.918 cv
572.221 844.96 571.558 844.045 570.858 843.173 cv
572.758 841.067 574.481 838.806 576.01 836.412 cv
577.378 837.953 578.648 839.617 579.805 841.397 cv
592.288 860.62 586.824 886.322 567.602 898.805 cv
562.144 902.35 556.159 904.448 550.106 905.194 cv
516.805 846.456 mo
514.248 845.348 511.82 843.983 509.557 842.393 cv
512.692 837.243 517.003 832.698 522.398 829.195 cv
529.378 824.662 537.214 822.495 544.961 822.495 cv
553.194 822.495 561.325 824.941 568.225 829.594 cv
566.82 831.993 565.174 834.241 563.319 836.302 cv
557.857 832.693 551.452 830.796 544.969 830.796 cv
538.771 830.796 532.504 832.529 526.918 836.156 cv
522.693 838.9 519.298 842.442 516.805 846.456 cv
.498039 .752941 .866667 rgb
f
545.039 905.505 mo
537.42 905.505 529.888 903.409 523.339 899.409 cv
525.213 899.136 527.102 899 528.991 899 cv
536.361 899 543.715 901.075 550.106 905.194 cv
548.419 905.402 546.728 905.505 545.039 905.505 cv
.305882 .698039 .847059 rgb
f
221.946 56.0028 mo
197.84 56.0028 177.32 37.5631 175.179 13.0962 cv
174.786 8.60756 175.038 4.2127 175.857 0 cv
185.483 0 li
184.519 3.90956 184.173 8.04204 184.543 12.2768 cv
186.255 31.849 202.674 46.6014 221.958 46.6024 cv
223.056 46.6024 224.162 46.5546 225.277 46.4571 cv
229.558 46.0824 233.609 45.0041 237.326 43.346 cv
240.086 45.564 243.125 47.5245 246.419 49.1705 cv
240.438 52.8129 233.546 55.1694 226.096 55.8212 cv
224.704 55.9429 223.318 56.0028 221.946 56.0028 cv
255.417 42.0518 mo
254.026 41.5534 252.649 40.9741 251.29 40.3115 cv
249.601 39.4876 247.996 38.5624 246.477 37.5452 cv
255.356 29.9192 260.555 18.2721 259.457 5.72324 cv
259.285 3.76362 258.967 1.85302 258.512 0 cv
268.134 0 li
268.445 1.60392 268.676 3.2403 268.821 4.90384 cv
270.073 19.2093 264.776 32.5789 255.417 42.0518 cv
.498039 .894118 .960784 rgb
f
246.419 49.1705 mo
243.125 47.5245 240.086 45.564 237.326 43.346 cv
240.673 41.8527 243.749 39.8885 246.477 37.5452 cv
247.996 38.5624 249.601 39.4876 251.29 40.3115 cv
252.649 40.9741 254.026 41.5534 255.417 42.0518 cv
252.732 44.769 249.715 47.1641 246.419 49.1705 cv
.305882 .87451 .941176 rgb
f
268.134 1000 mo
258.512 1000 li
255.94 989.51 249.022 980.886 239.919 975.94 cv
242.267 973.506 244.892 971.402 247.715 969.655 cv
258.061 976.427 265.654 987.202 268.134 1000 cv
185.483 1000 mo
175.857 1000 li
179.76 979.943 196.534 964.049 217.904 962.179 cv
219.296 962.057 220.683 961.997 222.054 961.997 cv
227.404 961.997 232.576 962.905 237.411 964.585 cv
234.624 966.816 232.053 969.36 229.757 972.199 cv
227.259 971.673 224.677 971.398 222.042 971.398 cv
220.944 971.398 219.838 971.445 218.723 971.543 cv
202.271 972.982 189.224 984.811 185.483 1000 cv
.498039 .894118 .960784 rgb
f
239.919 975.94 mo
236.764 974.226 233.347 972.954 229.757 972.199 cv
232.053 969.36 234.624 966.816 237.411 964.585 cv
241.062 965.854 244.519 967.564 247.715 969.655 cv
244.892 971.402 242.267 973.506 239.919 975.94 cv
.305882 .87451 .941176 rgb
f
789.988 684.507 mo
786.273 684.507 782.499 683.777 778.864 682.234 cv
764.375 676.084 757.615 659.353 763.766 644.864 cv
768.373 634.01 778.92 627.492 790.012 627.492 cv
793.727 627.492 797.501 628.223 801.136 629.766 cv
803.686 630.848 805.996 632.258 808.04 633.926 cv
808.223 637.906 808.987 641.885 810.359 645.735 cv
808.017 641.084 804.077 637.206 798.908 635.013 cv
796.001 633.779 792.981 633.194 790.01 633.194 cv
781.135 633.194 772.699 638.407 769.013 647.092 cv
764.093 658.682 769.5 672.067 781.092 676.987 cv
783.999 678.221 787.019 678.805 789.99 678.806 cv
798.865 678.806 807.301 673.593 810.987 664.908 cv
813.2 659.694 813.324 654.116 811.734 649.11 cv
812.652 651.103 813.743 653.049 815.01 654.927 cv
816.034 656.446 817.144 657.875 818.326 659.212 cv
818.023 661.875 817.335 664.542 816.234 667.136 cv
811.627 677.99 801.08 684.507 789.988 684.507 cv
.556863 .960784 .960784 rgb
f
818.326 659.212 mo
817.144 657.875 816.034 656.446 815.01 654.927 cv
813.743 653.049 812.652 651.103 811.734 649.11 cv
811.366 647.95 810.906 646.822 810.359 645.735 cv
808.987 641.885 808.223 637.906 808.04 633.926 cv
815.526 640.039 819.419 649.614 818.326 659.212 cv
.419608 .941176 .941176 rgb
f
332.008 184.5 mo
324.759 184.5 317.539 181.543 312.306 175.732 cv
302.514 164.855 303.392 148.1 314.267 138.307 cv
315.433 137.258 316.665 136.331 317.95 135.526 cv
319.538 136.6 321.052 137.779 322.48 139.052 cv
320.827 139.884 319.256 140.947 317.814 142.245 cv
309.113 150.08 308.411 163.484 316.245 172.186 cv
320.431 176.835 326.208 179.2 332.007 179.2 cv
333.374 179.2 334.743 179.068 336.092 178.804 cv
335.742 180.703 335.265 182.561 334.671 184.367 cv
333.785 184.456 332.897 184.5 332.008 184.5 cv
346.745 180.023 mo
347.164 177.56 347.414 175.042 347.482 172.484 cv
354.937 164.534 355.18 152.061 347.755 143.814 cv
344.384 140.071 339.983 137.808 335.368 137.069 cv
333.759 135.11 332.017 133.272 330.153 131.563 cv
330.765 131.521 331.379 131.5 331.991 131.5 cv
339.241 131.5 346.46 134.456 351.693 140.268 cv
361.486 151.144 360.608 167.9 349.732 177.693 cv
348.779 178.552 347.78 179.328 346.745 180.023 cv
.533333 .960784 .960784 rgb
f
791.332 445.064 mo
789.155 444.565 787.036 443.946 784.976 443.212 cv
785.034 443.18 785.092 443.148 785.15 443.116 cv
785.75 442.784 786.328 442.429 786.885 442.053 cv
788.303 443.125 789.784 444.13 791.332 445.064 cv
779.035 440.702 mo
769.385 435.954 761.418 428.585 755.906 419.654 cv
756.713 415.307 759.073 411.278 762.732 408.451 cv
764.598 412.614 767.082 416.47 770.087 419.884 cv
772.917 427.066 777.352 433.617 783.168 438.953 cv
783.086 439 783.004 439.047 782.921 439.093 cv
781.663 439.79 780.36 440.324 779.035 440.702 cv
752.838 413.987 mo
750.62 409.266 749.043 404.216 748.2 398.963 cv
752.417 395.332 756.037 391.079 758.943 386.377 cv
758.444 392.495 759.203 398.464 761.017 404.013 cv
757.285 406.558 754.511 410.053 752.838 413.987 cv
747.875 383.496 mo
747.965 382.72 748.072 381.94 748.195 381.162 cv
749.431 373.361 752.209 366.186 756.168 359.901 cv
755.794 368.552 752.818 376.731 747.875 383.496 cv
854.495 364.644 mo
850.141 360.271 844.923 356.613 838.947 353.953 cv
834.397 351.927 829.709 350.614 825.01 349.966 cv
820.759 347.735 816.076 346.149 811.071 345.356 cv
808.677 344.977 806.294 344.793 803.945 344.793 cv
801.778 344.793 799.638 344.949 797.536 345.252 cv
799.047 341.017 801.194 337.053 803.881 333.492 cv
803.898 333.492 803.914 333.492 803.931 333.492 cv
806.87 333.492 809.844 333.721 812.839 334.196 cv
831.516 337.154 846.598 348.95 854.495 364.644 cv
766.612 364.58 mo
767.268 359.227 767.126 353.687 766.086 348.108 cv
772.813 342.027 780.968 337.586 789.862 335.283 cv
787.702 339.568 786.092 344.154 785.11 348.931 cv
777.68 352.357 771.255 357.762 766.612 364.58 cv
.670588 .960784 .960784 rgb
f
784.976 443.212 mo
782.933 442.484 780.951 441.645 779.035 440.702 cv
780.36 440.324 781.663 439.79 782.921 439.093 cv
783.004 439.047 783.086 439 783.168 438.953 cv
784.35 440.038 785.591 441.074 786.885 442.053 cv
786.328 442.429 785.75 442.784 785.15 443.116 cv
785.092 443.148 785.034 443.18 784.976 443.212 cv
755.906 419.654 mo
754.779 417.828 753.754 415.934 752.838 413.987 cv
754.511 410.053 757.285 406.558 761.017 404.013 cv
761.511 405.525 762.084 407.007 762.732 408.451 cv
759.073 411.278 756.713 415.307 755.906 419.654 cv
.419608 .921569 .941176 rgb
f
748.2 398.963 mo
747.396 393.953 747.26 388.761 747.875 383.496 cv
752.818 376.731 755.794 368.552 756.168 359.901 cv
758.937 355.505 762.283 351.545 766.086 348.108 cv
767.126 353.687 767.268 359.227 766.612 364.58 cv
762.976 369.92 760.434 376.126 759.356 382.929 cv
759.174 384.082 759.036 385.233 758.943 386.377 cv
756.037 391.079 752.417 395.332 748.2 398.963 cv
.447059 .905882 .937255 rgb
f
817.977 442.21 mo
812.378 442.21 806.688 441.062 801.242 438.638 cv
798.623 437.472 796.187 436.067 793.946 434.459 cv
794.012 434.344 794.077 434.229 794.14 434.113 cv
795.057 434.317 795.988 434.495 796.929 434.643 cv
799.323 435.023 801.705 435.206 804.055 435.207 cv
819.426 435.207 833.493 427.35 841.712 414.938 cv
843.664 414.839 845.629 414.636 847.603 414.323 cv
850.464 413.87 853.235 413.205 855.908 412.345 cv
850.511 424.907 840.779 434.893 828.848 440.747 cv
825.328 441.71 821.673 442.21 817.977 442.21 cv
847.228 403.224 mo
847.834 401.236 848.309 399.183 848.644 397.071 cv
850.222 387.107 848.415 377.389 844.074 369.087 cv
853.215 376.546 858.629 387.555 859.166 399.12 cv
855.489 401.014 851.485 402.416 847.228 403.224 cv
.670588 .960784 .960784 rgb
f
793.946 434.459 mo
793.683 434.271 793.422 434.079 793.165 433.885 cv
793.489 433.964 793.813 434.04 794.14 434.113 cv
794.077 434.229 794.012 434.344 793.946 434.459 cv
.419608 .921569 .941176 rgb
f
999.912 736.522 mo
998.613 735.846 997.391 735.004 996.281 734.003 cv
996.516 733.996 996.753 733.993 996.987 733.993 cv
997.998 733.993 999.004 734.052 1000 734.169 cv
1000 736.146 li
999.97 736.271 999.941 736.396 999.912 736.522 cv
991.913 727.893 mo
988.508 719.975 991.393 710.562 998.986 706 cv
999.32 705.799 999.658 705.611 1000 705.435 cv
1000 709.51 li
994.212 713.531 992.316 721.273 995.611 727.521 cv
994.381 727.574 993.145 727.697 991.913 727.893 cv
.498039 .768627 .890196 rgb
f
1000 734.169 mo
999.004 734.052 997.998 733.993 996.987 733.993 cv
996.753 733.993 996.516 733.996 996.281 734.003 cv
995.026 732.871 993.915 731.536 993 730.013 cv
992.585 729.322 992.223 728.614 991.913 727.893 cv
993.145 727.697 994.381 727.574 995.611 727.521 cv
995.734 727.753 995.863 727.983 996 728.211 cv
997.052 729.961 998.425 731.398 1000 732.493 cv
1000 734.169 li
.247059 .74902 .858823 rgb
f
10.9109 738.261 mo
10.927 738.196 10.9439 738.128 10.9604 738.063 cv
11.0374 738.112 11.1142 738.161 11.1908 738.211 cv
11.0976 738.229 11.0041 738.245 10.9109 738.261 cv
0 736.146 mo
0 734.169 li
.163283 734.188 .32747 734.209 .4902 734.231 cv
.314992 734.868 .152051 735.505 0 736.146 cv
.498039 .768627 .890196 rgb
f
18.1132 735.282 mo
17.1664 734.475 16.1771 733.725 15.1505 733.036 cv
15.1704 733.024 15.1906 733.012 15.2104 733 cv
20.3554 729.909 22.7984 724.035 21.7716 718.46 cv
21.8681 718.359 21.9638 718.258 22.0616 718.157 cv
22.9047 717.284 23.7756 716.452 24.6704 715.663 cv
26.9687 722.822 24.4177 730.829 18.1132 735.282 cv
0 709.51 mo
0 705.435 li
2.54298 704.125 5.27911 703.497 7.98387 703.497 cv
11.5772 703.497 15.1155 704.604 18.0781 706.688 cv
17.1667 707.463 16.2762 708.272 15.4054 709.115 cv
13.1777 707.73 10.6003 706.998 7.98693 706.998 cv
5.53235 706.998 3.0467 707.644 .789528 709 cv
.518899 709.162 .255567 709.333 0 709.51 cv
f
11.1908 738.211 mo
11.1142 738.161 11.0374 738.112 10.9604 738.063 cv
11.2722 736.831 11.6379 735.61 12.0571 734.402 cv
13.1175 734.081 14.1557 733.627 15.1505 733.036 cv
16.1771 733.725 17.1664 734.475 18.1132 735.282 cv
17.7585 735.533 17.3913 735.773 17.0131 736 cv
15.165 737.111 13.1929 737.84 11.1908 738.211 cv
.4902 734.231 mo
.32747 734.209 .163283 734.188 0 734.169 cv
0 732.493 li
.272559 732.683 .551027 732.862 .834985 733.031 cv
.715485 733.43 .600517 733.83 .4902 734.231 cv
.247059 .74902 .858823 rgb
f
1000 415.781 mo
996.755 415.104 993.529 414.144 990.355 412.889 cv
991.027 409.015 992.648 405.292 995.177 402.102 cv
996.771 402.712 998.382 403.23 1000 403.657 cv
1000 415.781 li
984.749 410.331 mo
973.181 404.318 964.39 394.941 959.021 383.971 cv
959.664 383.993 960.31 384.005 960.952 384.005 cv
964.633 384.005 968.304 383.636 971.901 382.909 cv
976.12 389.714 982.111 395.517 989.593 399.543 cv
987.242 402.825 985.62 406.502 984.749 410.331 cv
960.961 373.004 mo
958.916 373.004 956.866 372.861 954.826 372.574 cv
954.629 371.802 954.447 371.025 954.281 370.244 cv
958.313 369.76 962.139 368.599 965.639 366.879 cv
966.01 368.807 966.5 370.71 967.106 372.574 cv
965.074 372.859 963.02 373.004 960.961 373.004 cv
956.012 358 mo
955.822 358 955.631 357.998 955.441 357.995 cv
954.614 357.981 953.796 357.935 952.986 357.859 cv
953 349.542 954.781 341.099 958.527 333.065 cv
961.643 326.384 965.852 320.559 970.84 315.706 cv
973.615 318.701 975.752 322.297 977.035 326.275 cv
973.93 329.699 971.279 333.643 969.223 338.052 cv
966.393 344.12 964.964 350.483 964.804 356.774 cv
962.008 357.572 959.057 358 956.012 358 cv
982.644 321.026 mo
981.066 317.344 978.885 313.985 976.223 311.07 cv
978.051 309.679 979.957 308.398 981.923 307.236 cv
984.234 310.423 985.971 314.053 986.984 317.967 cv
985.486 318.901 984.035 319.923 982.644 321.026 cv
994.251 314.263 mo
993.078 310.437 991.346 306.852 989.147 303.605 cv
991.153 302.763 993.207 302.031 995.293 301.414 cv
997.111 303.671 998.683 306.085 1000 308.608 cv
1000 312.349 li
998.045 312.864 996.123 313.504 994.251 314.263 cv
.615686 .960784 .960784 rgb
f
953.221 363.219 mo
953.062 361.444 952.983 359.652 952.986 357.859 cv
953.796 357.935 954.614 357.981 955.441 357.995 cv
955.631 357.998 955.822 358 956.012 358 cv
959.057 358 962.008 357.572 964.804 356.774 cv
964.783 357.598 964.784 358.42 964.806 359.24 cv
961.36 361.349 957.43 362.744 953.221 363.219 cv
986.984 317.967 mo
985.971 314.053 984.234 310.423 981.923 307.236 cv
984.25 305.859 986.662 304.648 989.147 303.605 cv
991.346 306.852 993.078 310.437 994.251 314.263 cv
991.731 315.285 989.301 316.523 986.984 317.967 cv
.364706 .937255 .937255 rgb
f
11.9612 417.014 mo
7.98342 417.014 3.97866 416.611 0 415.781 cv
0 403.657 li
3.96466 404.704 7.98744 405.211 11.9697 405.211 cv
18.8402 405.212 25.5971 403.704 31.7661 400.864 cv
32.0689 401.198 32.3641 401.542 32.6512 401.896 cv
34.9562 404.743 36.5032 407.957 37.3175 411.294 cv
29.444 415.028 20.775 417.014 11.9612 417.014 cv
.615686 .960784 .960784 rgb
f
42.7394 408.367 mo
41.6498 404.735 39.8486 401.249 37.3144 398.12 cv
37.2654 398.059 37.2158 397.999 37.1664 397.939 cv
44.5897 393.272 50.7964 386.486 54.7779 377.948 cv
65.7944 354.322 55.5732 326.239 31.9477 315.222 cv
25.7774 312.345 19.2997 310.916 12.9048 310.797 cv
11.4872 306.743 9.59149 302.842 7.23349 299.183 cv
8.82801 299.052 10.4303 298.986 12.0385 298.986 cv
20.3878 298.986 28.8684 300.767 36.9345 304.528 cv
54.5069 312.722 66.1475 328.472 69.7921 346.104 cv
69.131 349.345 69.608 352.558 70.9514 355.325 cv
71.3779 364.542 69.642 373.993 65.4722 382.935 cv
60.3686 393.879 52.3336 402.523 42.7394 408.367 cv
0 312.349 mo
0 308.609 li
.573161 309.707 1.09765 310.826 1.57406 311.963 cv
1.047 312.083 .522295 312.212 0 312.349 cv
f
70.9514 355.325 mo
69.608 352.558 69.131 349.345 69.7921 346.104 cv
70.4179 349.132 70.8075 352.215 70.9514 355.325 cv
.368627 .823529 .85098 rgb
f
326.415 725.955 mo
320.146 724.901 314.043 722.315 308.682 718.126 cv
306.148 716.146 303.92 713.918 302.008 711.504 cv
303.527 711.503 305.069 711.331 306.611 710.974 cv
307.287 710.819 307.946 710.631 308.589 710.414 cv
310.181 711.204 311.744 712.094 313.271 713.086 cv
318.635 716.569 323.04 720.973 326.415 725.955 cv
300.668 707.35 mo
300.105 707.305 299.55 707.23 299.001 707.128 cv
298.951 707.043 298.901 706.959 298.852 706.874 cv
299.459 707.02 300.064 707.179 300.668 707.35 cv
.623529 .960784 .960784 rgb
f
302.008 711.504 mo
300.899 710.104 299.897 708.642 299.001 707.128 cv
299.55 707.23 300.105 707.305 300.668 707.35 cv
303.36 708.115 306.014 709.135 308.589 710.414 cv
307.946 710.631 307.287 710.819 306.611 710.974 cv
305.069 711.331 303.527 711.503 302.008 711.504 cv
.45098 .941176 .941176 rgb
f
339.811 725.909 mo
338.525 723.349 337.044 720.875 335.374 718.511 cv
343.934 717.864 352.2 713.752 357.901 706.455 cv
361.993 701.218 364.173 695.094 364.544 688.927 cv
367.155 689.534 369.783 689.88 372.392 689.981 cv
371.83 697.496 369.114 704.934 364.126 711.318 cv
357.858 719.341 349.107 724.284 339.811 725.909 cv
302.667 695.869 mo
299.863 695.136 297.029 694.621 294.183 694.318 cv
293.057 688.335 293.31 682.112 295.005 676.163 cv
296.043 675.675 297.148 675.289 298.311 675.021 cv
299.552 674.734 300.793 674.596 302.015 674.596 cv
302.643 674.596 303.266 674.633 303.882 674.704 cv
301.011 681.489 300.661 688.984 302.667 695.869 cv
372.123 681.557 mo
369.357 681.401 366.567 680.898 363.821 680.022 cv
362.271 673.159 358.431 666.768 352.455 662.099 cv
349.096 659.474 345.372 657.636 341.506 656.558 cv
340.789 653.847 340.408 651.036 340.392 648.189 cv
346.376 649.324 352.188 651.865 357.318 655.874 cv
365.734 662.448 370.76 671.754 372.123 681.557 cv
296.8 671.17 mo
298.1 668.204 299.788 665.351 301.873 662.682 cv
309.434 653.004 320.604 647.809 331.991 647.512 cv
331.961 650.174 332.186 652.815 332.651 655.401 cv
323.383 655.509 314.249 659.673 308.099 667.545 cv
307.263 668.614 306.508 669.72 305.831 670.856 cv
304.587 670.618 303.311 670.495 302.018 670.495 cv
300.492 670.495 298.94 670.667 297.389 671.025 cv
297.191 671.071 296.995 671.119 296.8 671.17 cv
.623529 .960784 .960784 rgb
f
295.005 676.163 mo
295.486 674.473 296.085 672.804 296.8 671.17 cv
296.995 671.119 297.191 671.071 297.389 671.025 cv
298.94 670.667 300.492 670.495 302.018 670.495 cv
303.311 670.495 304.587 670.618 305.831 670.856 cv
305.087 672.105 304.437 673.392 303.882 674.704 cv
303.266 674.633 302.643 674.596 302.015 674.596 cv
300.793 674.596 299.552 674.734 298.311 675.021 cv
297.148 675.289 296.043 675.675 295.005 676.163 cv
.45098 .941176 .941176 rgb
f
332.973 726.502 mo
330.783 726.502 328.589 726.32 326.415 725.955 cv
323.04 720.973 318.635 716.569 313.271 713.086 cv
311.744 712.094 310.181 711.204 308.589 710.414 cv
309.357 710.154 310.101 709.852 310.819 709.511 cv
311.671 710.349 312.58 711.148 313.545 711.901 cv
319.321 716.414 326.176 718.601 332.978 718.601 cv
333.778 718.601 334.577 718.571 335.374 718.511 cv
337.044 720.875 338.525 723.349 339.811 725.909 cv
337.554 726.303 335.266 726.502 332.973 726.502 cv
301.985 707.404 mo
301.543 707.404 301.104 707.386 300.668 707.35 cv
300.064 707.179 299.459 707.02 298.852 706.874 cv
296.573 702.955 295.008 698.701 294.183 694.318 cv
297.029 694.621 299.863 695.136 302.667 695.869 cv
303.751 699.587 305.522 703.127 307.955 706.283 cv
307.228 706.565 306.472 706.799 305.689 706.979 cv
304.448 707.266 303.207 707.404 301.985 707.404 cv
.482353 .941176 .941176 rgb
f
308.589 710.414 mo
306.014 709.135 303.36 708.115 300.668 707.35 cv
301.104 707.386 301.543 707.404 301.985 707.404 cv
303.207 707.404 304.448 707.266 305.689 706.979 cv
306.472 706.799 307.228 706.565 307.955 706.283 cv
308.826 707.412 309.78 708.49 310.819 709.511 cv
310.101 709.852 309.357 710.154 308.589 710.414 cv
.396078 .929412 .929412 rgb
f
274.946 374.005 mo
270.311 374.005 265.804 373.255 261.563 371.857 cv
260.537 367.504 258.699 363.422 256.198 359.808 cv
261.651 363.37 268.128 365.404 274.957 365.404 cv
276.551 365.404 278.164 365.294 279.788 365.065 cv
298.601 362.421 311.709 345.026 309.065 326.212 cv
308.653 323.277 307.881 320.481 306.801 317.862 cv
306.857 317.918 306.913 317.975 306.969 318.031 cv
310.014 321.076 313.638 323.19 317.486 324.373 cv
317.519 324.587 317.551 324.8 317.581 325.016 cv
318.793 333.639 317.357 342.026 313.893 349.351 cv
313.032 349.138 312.133 349.018 311.209 349.002 cv
311.137 349.001 311.066 349 310.995 349 cv
304.466 349 299.116 354.236 299.002 360.79 cv
298.97 362.629 299.353 364.379 300.065 365.949 cv
294.595 369.88 288.118 372.579 280.984 373.581 cv
278.955 373.867 276.938 374.005 274.946 374.005 cv
252.607 367.71 mo
247.051 364.317 242.286 359.684 238.739 354.132 cv
244.876 356.913 249.752 361.777 252.607 367.71 cv
246.558 350.364 mo
242.956 347.983 238.87 346.231 234.434 345.286 cv
233.505 342.641 232.823 339.867 232.418 336.984 cv
229.113 313.467 245.499 291.724 269.016 288.419 cv
271.045 288.133 273.062 287.995 275.054 287.995 cv
284.151 287.995 292.751 290.884 299.831 295.894 cv
299.156 300.051 299.513 304.343 300.902 308.357 cv
294.518 301.068 285.166 296.595 275.043 296.595 cv
273.449 296.595 271.836 296.706 270.212 296.934 cv
251.399 299.579 238.29 316.974 240.935 335.788 cv
241.695 341.198 243.675 346.136 246.558 350.364 cv
316.108 318.366 mo
314.109 317.398 312.235 316.084 310.575 314.425 cv
306.543 310.393 304.552 305.093 304.601 299.808 cv
309.861 304.793 313.894 311.128 316.108 318.366 cv
.623529 .960784 .945098 rgb
f
317.486 324.373 mo
313.638 323.19 310.014 321.076 306.969 318.031 cv
306.913 317.975 306.857 317.918 306.801 317.862 cv
305.35 314.343 303.344 311.145 300.902 308.357 cv
299.513 304.343 299.156 300.051 299.831 295.894 cv
301.511 297.083 303.105 298.391 304.601 299.808 cv
304.552 305.093 306.543 310.393 310.575 314.425 cv
312.235 316.084 314.109 317.398 316.108 318.366 cv
316.702 320.306 317.165 322.312 317.486 324.373 cv
.415686 .941176 .92549 rgb
f
302.037 364.445 mo
301.606 363.325 301.379 362.106 301.401 360.833 cv
301.493 355.588 305.773 351.4 310.998 351.4 cv
311.054 351.4 311.111 351.4 311.168 351.401 cv
311.714 351.411 312.248 351.466 312.768 351.562 cv
310.073 356.503 306.426 360.889 302.037 364.445 cv
.623529 .960784 .945098 rgb
f
36.4471 648.452 mo
35.9812 647.731 35.5363 646.99 35.1142 646.228 cv
34.2165 644.609 33.4511 642.952 32.8143 641.27 cv
33.8305 641.176 34.8296 641.033 35.8119 640.843 cv
39.2301 642.714 42.9665 644.136 46.9611 645.016 cv
43.706 646.641 40.1773 647.814 36.4471 648.452 cv
23.0709 648.372 mo
13.8042 646.662 5.63594 641.564 0 634.331 cv
0 623.718 li
1.02244 624.093 2.0172 624.509 2.98774 624.963 cv
6.40457 631.565 12.1546 636.706 19.0732 639.376 cv
20.7879 642.181 22.1353 645.208 23.0709 648.372 cv
0 606.042 mo
0 587.675 li
6.39913 579.45 16.1351 573.877 27.349 573.093 cv
27.4244 573.087 27.4985 573.082 27.5738 573.078 cv
24.669 575.744 22.1244 578.83 20.0467 582.268 cv
9.55959 585.893 1.80697 595.049 0 606.042 cv
.670588 .960784 .960784 rgb
f
25.8414 648.778 mo
24.909 648.677 23.9834 648.54 23.0709 648.372 cv
22.1353 645.208 20.7879 642.181 19.0732 639.376 cv
20.2461 639.829 21.4515 640.21 22.6861 640.516 cv
23.4625 643.318 24.5116 646.085 25.8414 648.778 cv
2.98774 624.963 mo
2.0172 624.509 1.02244 624.093 0 623.718 cv
0 615.928 li
.525174 619.149 1.54971 622.185 2.98774 624.963 cv
.470588 .941176 .941176 rgb
f
56.0321 637.607 mo
53.7181 637.607 51.3684 637.367 49.0141 636.866 cv
48.2741 636.709 47.5435 636.528 46.8258 636.325 cv
55.6259 630.467 61.116 620.179 60.3261 608.88 cv
59.9069 602.885 57.7764 597.418 54.446 592.923 cv
56.9921 591.936 59.5974 591.244 62.2188 590.837 cv
65.4257 595.951 67.4567 601.906 67.9073 608.349 cv
68.696 619.626 64.479 630.098 57.1494 637.588 cv
56.7779 637.601 56.4056 637.607 56.0321 637.607 cv
47.1317 585.886 mo
42.7025 582.86 37.4517 580.984 31.8313 580.652 cv
34.2669 578.135 37.0791 576.017 40.1533 574.371 cv
45.8619 575.952 51.0583 578.841 55.378 582.716 cv
52.5813 583.498 49.8191 584.551 47.1317 585.886 cv
.670588 .960784 .960784 rgb
f
1000 634.331 mo
997.171 630.7 994.981 626.531 993.613 621.982 cv
995.075 622.245 996.538 622.598 997.993 623.043 cv
998.672 623.25 999.342 623.476 1000 623.718 cv
1000 634.331 li
999.725 613.755 mo
997.161 613.033 994.588 612.539 992.021 612.26 cv
991.71 603.062 994.718 594.465 1000 587.676 cv
1000 606.042 li
999.623 608.332 999.505 610.704 999.674 613.12 cv
999.689 613.333 999.706 613.544 999.725 613.755 cv
f
1000 623.718 mo
999.342 623.476 998.672 623.25 997.993 623.043 cv
996.538 622.598 995.075 622.245 993.613 621.982 cv
992.813 619.324 992.294 616.536 992.093 613.65 cv
992.06 613.185 992.036 612.723 992.021 612.26 cv
994.588 612.539 997.161 613.033 999.725 613.755 cv
999.791 614.488 999.883 615.212 1000 615.928 cv
1000 623.718 li
.470588 .941176 .941176 rgb
f
56.042 646.009 mo
53.1482 646.009 50.2117 645.708 47.2676 645.082 cv
47.1651 645.06 47.0632 645.038 46.9611 645.016 cv
50.776 643.112 54.2126 640.59 57.1494 637.588 cv
72.2239 637.084 85.5889 626.403 88.8658 610.986 cv
89.9041 606.102 89.8241 601.241 88.7984 596.667 cv
92.2632 598.963 95.3845 601.861 97.9867 605.308 cv
97.9074 607.764 97.6108 610.245 97.0821 612.732 cv
92.8851 632.477 75.4491 646.009 56.042 646.009 cv
35.8119 640.843 mo
34.4394 640.091 33.1174 639.267 31.8517 638.377 cv
30.6608 634.243 30.2131 630.002 30.4576 625.833 cv
34.6375 630.73 40.2468 634.465 46.8258 636.325 cv
43.5603 638.499 39.8369 640.064 35.8119 640.843 cv
21.0152 626.554 mo
20.6298 626.149 20.2369 625.751 19.8363 625.359 cv
14.6692 616.616 12.6399 605.985 14.9178 595.268 cv
15.9216 590.545 17.6826 586.179 20.0467 582.268 cv
22.5194 581.413 25.1449 580.865 27.8795 580.674 cv
28.6012 580.623 29.3181 580.599 30.0307 580.599 cv
30.6342 580.599 31.2354 580.616 31.8313 580.652 cv
27.5932 585.03 24.4945 590.614 23.1342 597.014 cv
21.9892 602.4 22.2046 607.76 23.5478 612.735 cv
22.0247 617.175 21.165 621.836 21.0152 626.554 cv
95.5783 589.927 mo
91.5543 587.016 87.1181 584.782 82.4477 583.275 cv
77.7563 577.281 71.0135 572.84 62.9858 571.134 cv
60.6316 570.634 58.2815 570.393 55.9675 570.393 cv
50.3464 570.393 44.9332 571.811 40.1533 574.371 cv
36.923 573.476 33.5282 572.999 30.0384 572.999 cv
29.2234 572.999 28.3985 573.025 27.5738 573.078 cv
35.1833 566.094 45.2718 561.991 55.9581 561.991 cv
58.8518 561.991 61.7883 562.292 64.7324 562.918 cv
79.5333 566.064 90.8426 576.649 95.5783 589.927 cv
.72549 .960784 .960784 rgb
f
20.9989 627.215 mo
20.5957 626.607 20.2076 625.987 19.8363 625.359 cv
20.2369 625.751 20.6298 626.149 21.0152 626.554 cv
21.0082 626.774 21.0028 626.995 20.9989 627.215 cv
.52549 .941176 .941176 rgb
f
46.9611 645.016 mo
42.9665 644.136 39.2301 642.714 35.8119 640.843 cv
39.8369 640.064 43.5603 638.499 46.8258 636.325 cv
47.5435 636.528 48.2741 636.709 49.0141 636.866 cv
51.3684 637.367 53.7181 637.607 56.0321 637.607 cv
56.4056 637.607 56.7779 637.601 57.1494 637.588 cv
54.2126 640.59 50.776 643.112 46.9611 645.016 cv
20.0467 582.268 mo
22.1244 578.83 24.669 575.744 27.5738 573.078 cv
28.3985 573.025 29.2234 572.999 30.0384 572.999 cv
33.5282 572.999 36.923 573.476 40.1533 574.371 cv
37.0791 576.017 34.2669 578.135 31.8313 580.652 cv
31.2354 580.616 30.6342 580.599 30.0307 580.599 cv
29.3181 580.599 28.6012 580.623 27.8795 580.674 cv
25.1449 580.865 22.5194 581.413 20.0467 582.268 cv
.560784 .941176 .941176 rgb
f
260.973 558.002 mo
254.247 558.002 247.461 555.953 241.603 551.697 cv
226.858 540.985 223.59 520.347 234.302 505.604 cv
240.759 496.716 250.823 491.998 261.027 491.998 cv
267.753 491.998 274.539 494.047 280.397 498.303 cv
291.739 506.543 296.29 520.657 292.911 533.443 cv
290.134 534.185 287.397 535.218 284.744 536.55 cv
290.257 525.251 287.041 511.287 276.518 503.642 cv
271.832 500.238 266.402 498.598 261.022 498.598 cv
252.858 498.598 244.808 502.372 239.642 509.482 cv
231.072 521.278 233.686 537.788 245.482 546.358 cv
250.168 549.762 255.598 551.401 260.978 551.402 cv
263.648 551.402 266.306 550.998 268.855 550.206 cv
267.167 552.601 265.74 555.148 264.584 557.805 cv
263.386 557.936 262.181 558.002 260.973 558.002 cv
276.727 554.02 mo
279.277 550.703 282.48 547.799 286.283 545.514 cv
286.623 545.309 286.966 545.111 287.31 544.92 cv
284.379 548.794 280.75 551.843 276.727 554.02 cv
.498039 .8 .87451 rgb
f
249.18 957.552 mo
246.273 954.863 244.625 950.883 245.071 946.641 cv
245.773 939.963 251.415 934.999 257.984 934.999 cv
258.438 934.999 258.897 935.023 259.359 935.071 cv
266.499 935.821 271.679 942.219 270.929 949.358 cv
270.774 950.832 270.378 952.223 269.785 953.494 cv
269.536 953.491 269.286 953.489 269.037 953.489 cv
268.292 953.489 267.547 953.505 266.805 953.538 cv
267.628 952.233 268.171 950.725 268.343 949.087 cv
268.943 943.375 264.799 938.258 259.087 937.657 cv
258.718 937.618 258.35 937.599 257.987 937.599 cv
252.731 937.599 248.218 941.569 247.657 946.913 cv
247.251 950.771 249.01 954.357 251.955 956.464 cv
251.019 956.8 250.095 957.162 249.18 957.552 cv
.623529 .960784 .960784 rgb
f
258.017 961.001 mo
257.562 961.001 257.103 960.977 256.641 960.929 cv
253.743 960.624 251.167 959.389 249.18 957.552 cv
250.095 957.162 251.019 956.8 251.955 956.464 cv
253.37 957.477 255.059 958.148 256.913 958.343 cv
257.282 958.382 257.65 958.401 258.013 958.401 cv
261.658 958.401 264.945 956.491 266.805 953.538 cv
267.547 953.505 268.292 953.489 269.037 953.489 cv
269.286 953.489 269.536 953.491 269.785 953.494 cv
267.692 957.986 263.136 961.001 258.017 961.001 cv
.431373 .941176 .941176 rgb
f
677.728 1000 mo
667.364 1000 li
669.46 999.075 671.729 998.599 674.015 998.599 cv
675.669 998.599 677.333 998.849 678.945 999.359 cv
678.548 999.586 678.143 999.799 677.728 1000 cv
660.11 999.916 mo
654.937 997.346 650.913 992.567 649.513 986.499 cv
647.027 975.736 653.738 964.997 664.501 962.513 cv
666.014 962.163 667.528 961.996 669.018 961.996 cv
678.121 961.996 686.352 968.252 688.487 977.501 cv
690.135 984.638 687.74 991.765 682.8 996.481 cv
681.368 995.799 679.886 995.296 678.379 994.968 cv
683.432 991.31 686.082 984.86 684.59 978.4 cv
682.882 971.002 676.297 965.996 669.014 965.996 cv
667.822 965.996 666.612 966.13 665.4 966.41 cv
656.791 968.397 651.422 976.989 653.41 985.599 cv
654.705 991.209 658.805 995.444 663.886 997.163 cv
662.542 997.924 661.274 998.843 660.11 999.916 cv
.498039 .839216 .831372 rgb
f
668.982 2.00434 mo
667.506 2.00434 666.052 1.83978 664.644 1.52476 cv
665.506 .927038 666.417 .417505 667.363 0 cv
677.728 0 li
676.405 .639622 674.991 1.14287 673.499 1.48721 cv
671.985 1.83666 670.471 2.00434 668.982 2.00434 cv
f
262.969 654.009 mo
262.186 654.009 261.408 653.986 260.632 653.94 cv
260.689 653.068 260.817 652.189 261.02 651.31 cv
261.469 649.366 262.246 647.583 263.28 646.006 cv
265.746 645.983 268.244 645.672 270.742 645.05 cv
275.085 643.967 278.999 642.043 282.351 639.496 cv
285.106 640.443 287.471 642.074 289.299 644.15 cv
284.674 648.191 279.046 651.224 272.677 652.812 cv
269.428 653.622 266.172 654.009 262.969 654.009 cv
256.553 653.487 mo
241.263 650.984 228.174 639.664 224.188 623.677 cv
218.844 602.242 231.888 580.532 253.323 575.188 cv
255.889 574.549 258.46 574.172 261.005 574.042 cv
260.943 576.699 261.127 579.371 261.566 582.026 cv
259.476 582.122 257.366 582.425 255.258 582.95 cv
238.11 587.226 227.675 604.594 231.951 621.741 cv
235.215 634.834 246.112 644.013 258.715 645.72 cv
257.98 647.171 257.408 648.733 257.025 650.389 cv
256.786 651.424 256.63 652.459 256.553 653.487 cv
292.247 641.294 mo
290.464 639.307 288.281 637.654 285.787 636.474 cv
290.908 631.272 294.167 624.399 294.866 617.019 cv
297.472 617.586 300.134 617.912 302.812 617.989 cv
301.932 626.761 298.161 634.946 292.247 641.294 cv
302.737 609.381 mo
299.924 609.275 297.136 608.824 294.442 608.045 cv
294.329 607.45 294.198 606.854 294.049 606.259 cv
291.067 594.297 281.712 585.601 270.507 582.886 cv
269.856 580.125 269.558 577.321 269.598 574.538 cv
284.824 577.091 297.839 588.388 301.812 604.323 cv
302.232 606.009 302.539 607.699 302.737 609.381 cv
.529412 .960784 .960784 rgb
f
260.632 653.94 mo
259.259 653.859 257.897 653.707 256.553 653.487 cv
256.63 652.459 256.786 651.424 257.025 650.389 cv
257.408 648.733 257.98 647.171 258.715 645.72 cv
260.116 645.91 261.541 646.008 262.976 646.008 cv
263.077 646.008 263.179 646.007 263.28 646.006 cv
262.246 647.583 261.469 649.366 261.02 651.31 cv
260.817 652.189 260.689 653.068 260.632 653.94 cv
289.299 644.15 mo
287.471 642.074 285.106 640.443 282.351 639.496 cv
283.574 638.568 284.72 637.558 285.787 636.474 cv
288.281 637.654 290.464 639.307 292.247 641.294 cv
291.316 642.293 290.333 643.247 289.299 644.15 cv
.301961 .941176 .941176 rgb
f
375.994 992.5 mo
371.672 992.5 367.337 991.072 363.754 988.176 cv
363.977 987.8 364.186 987.413 364.381 987.013 cv
364.794 986.167 365.125 985.3 365.378 984.425 cv
365.439 984.482 365.5 984.537 365.561 984.593 cv
368.543 987.277 372.276 988.6 375.995 988.6 cv
380.263 988.6 384.512 986.86 387.593 983.439 cv
388.747 982.156 389.65 980.736 390.304 979.236 cv
391.138 980.527 391.902 981.865 392.593 983.249 cv
391.988 984.226 391.288 985.163 390.491 986.048 cv
386.641 990.324 381.327 992.5 375.994 992.5 cv
361.365 985.889 mo
357.252 981.231 355.72 975.019 356.871 969.199 cv
358.286 970.097 359.474 971.239 360.406 972.543 cv
360.319 975.564 361.106 978.597 362.744 981.232 cv
362.601 982.713 362.196 984.195 361.505 985.611 cv
361.459 985.705 361.413 985.797 361.365 985.889 cv
361.075 968.447 mo
360.107 967.519 359.006 966.7 357.786 966.022 cv
358.546 964.037 359.645 962.145 361.087 960.436 cv
362.626 960.66 364.138 960.967 365.62 961.353 cv
365.199 961.729 364.794 962.133 364.407 962.562 cv
362.828 964.315 361.72 966.329 361.075 968.447 cv
394.778 967.732 mo
389.469 961.578 382.765 956.68 375.176 953.517 cv
375.452 953.506 375.729 953.5 376.006 953.5 cv
380.656 953.5 385.32 955.152 389.048 958.509 cv
391.899 961.076 393.816 964.292 394.778 967.732 cv
.666667 .94902 .960784 rgb
f
392.593 983.249 mo
391.902 981.865 391.138 980.527 390.304 979.236 cv
392.915 973.25 391.559 966.017 386.438 961.407 cv
383.457 958.722 379.724 957.4 376.005 957.4 cv
372.273 957.4 368.555 958.731 365.62 961.353 cv
364.138 960.967 362.626 960.66 361.087 960.436 cv
361.225 960.273 361.365 960.112 361.509 959.952 cv
365.159 955.898 370.125 953.732 375.176 953.517 cv
382.765 956.68 389.469 961.578 394.778 967.732 cv
396.217 972.882 395.514 978.533 392.593 983.249 cv
.494118 .929412 .941176 rgb
f
1000 443.542 mo
996.509 441.703 993.326 439.141 990.686 435.88 cv
984.661 428.441 982.78 418.994 984.749 410.331 cv
985.51 410.727 986.281 411.107 987.065 411.473 cv
988.154 411.98 989.252 412.453 990.355 412.889 cv
989.212 419.475 990.811 426.5 995.349 432.103 cv
996.731 433.81 998.299 435.277 1000 436.5 cv
1000 443.542 li
995.177 402.102 mo
994.128 401.701 993.087 401.259 992.053 400.777 cv
991.216 400.387 990.395 399.975 989.593 399.543 cv
991.127 397.4 992.972 395.425 995.12 393.685 cv
996.668 392.432 998.303 391.358 1000 390.46 cv
1000 397.506 li
999.626 397.774 999.258 398.055 998.896 398.349 cv
997.494 399.484 996.254 400.745 995.177 402.102 cv
.670588 .960784 .960784 rgb
f
990.355 412.889 mo
989.252 412.453 988.154 411.98 987.065 411.473 cv
986.281 411.107 985.51 410.727 984.749 410.331 cv
985.62 406.502 987.242 402.825 989.593 399.543 cv
990.395 399.975 991.216 400.387 992.053 400.777 cv
993.087 401.259 994.128 401.701 995.177 402.102 cv
992.648 405.292 991.027 409.015 990.355 412.889 cv
.478431 .941176 .941176 rgb
f
14.0179 447.001 mo
9.17038 447.001 4.34739 445.833 0 443.542 cv
0 436.501 li
4.13607 439.473 9.06117 441 14.0147 441.001 cv
19.3202 441.001 24.6591 439.25 29.1034 435.651 cv
36.5584 429.615 39.4504 420.033 37.3175 411.294 cv
39.1726 410.414 40.9808 409.438 42.7394 408.367 cv
46.1331 419.68 42.6263 432.422 32.8793 440.315 cv
27.3247 444.813 20.649 447.001 14.0179 447.001 cv
.670588 .960784 .960784 rgb
f
31.7661 400.864 mo
27.0693 395.683 20.5536 392.999 13.9856 392.999 cv
9.11238 392.999 4.2107 394.476 0 397.506 cv
0 390.461 li
4.39209 388.137 9.19835 386.999 13.9821 386.999 cv
22.6499 386.999 31.2421 390.736 37.1664 397.939 cv
35.4287 399.031 33.6237 400.008 31.7661 400.864 cv
f
37.3175 411.294 mo
36.5032 407.957 34.9562 404.743 32.6512 401.896 cv
32.3641 401.542 32.0689 401.198 31.7661 400.864 cv
33.6237 400.008 35.4287 399.031 37.1664 397.939 cv
37.2158 397.999 37.2654 398.059 37.3144 398.12 cv
39.8486 401.249 41.6498 404.735 42.7394 408.367 cv
40.9808 409.438 39.1726 410.414 37.3175 411.294 cv
.478431 .941176 .941176 rgb
f
64.9741 37.0036 mo
60.0874 37.0036 55.1419 35.6778 50.6923 32.8975 cv
39.4396 25.8658 35.1552 11.9009 39.915 0 cv
45.853 0 li
40.6652 9.90699 43.9124 22.2931 53.5536 28.3178 cv
57.1128 30.5418 61.0707 31.6027 64.9795 31.603 cv
72.1813 31.6035 79.2201 28.0039 83.3179 21.4462 cv
86.0817 17.0233 87.0492 11.9871 86.4173 7.19085 cv
88.1947 8.49308 90.0556 9.68815 91.9935 10.7676 cv
91.8658 15.4112 90.5371 20.0834 87.8976 24.3076 cv
82.7757 32.504 73.9754 37.0036 64.9741 37.0036 cv
.498039 .843137 .85098 rgb
f
91.9935 10.7676 mo
90.0556 9.68815 88.1947 8.49308 86.4173 7.19085 cv
86.0876 4.68793 85.3226 2.25088 84.1498 0 cv
90.0817 0 li
91.4393 3.41284 92.0948 7.08108 91.9935 10.7676 cv
.317647 .823529 .831372 rgb
f
45.853 1000 mo
39.915 1000 li
40.5043 998.527 41.2319 997.086 42.1024 995.692 cv
47.2243 987.496 56.0242 982.996 65.0255 982.996 cv
66.0282 982.996 67.0331 983.052 68.0361 983.165 cv
68.8314 985.235 69.752 987.244 70.7894 989.185 cv
68.8911 988.656 66.9491 988.397 65.0205 988.397 cv
57.8187 988.397 50.7799 991.996 46.6821 998.554 cv
46.385 999.029 46.1088 999.511 45.853 1000 cv
.498039 .843137 .85098 rgb
f
90.0817 1000 mo
84.1496 1000 li
82.4293 996.698 79.832 993.798 76.4463 991.683 cv
74.6433 990.556 72.7385 989.728 70.7894 989.185 cv
69.752 987.244 68.8314 985.235 68.0361 983.165 cv
71.9209 983.602 75.7712 984.893 79.3077 987.103 cv
84.3756 990.269 88.0302 994.843 90.0817 1000 cv
.317647 .823529 .831372 rgb
f
849.458 664.8 mo
847.142 664.43 844.873 663.542 842.822 662.106 cv
835.584 657.038 833.825 647.062 838.893 639.823 cv
842.006 635.378 846.97 632.999 852.014 632.999 cv
855.183 632.999 858.384 633.938 861.178 635.894 cv
868.416 640.962 870.175 650.939 865.106 658.177 cv
863.667 660.233 861.83 661.848 859.773 662.989 cv
856.41 664.16 852.927 664.755 849.458 664.8 cv
852.011 636.199 mo
847.976 636.199 844.005 638.102 841.515 641.658 cv
837.46 647.449 838.867 655.431 844.658 659.485 cv
846.893 661.05 849.454 661.801 851.989 661.801 cv
856.024 661.801 859.995 659.898 862.485 656.342 cv
866.54 650.551 865.133 642.569 859.342 638.515 cv
857.107 636.95 854.546 636.199 852.011 636.199 cv
.737255 .960784 .960784 rgb
f
851.986 665.001 mo
851.143 665.001 850.297 664.935 849.458 664.8 cv
852.927 664.755 856.41 664.16 859.773 662.989 cv
857.384 664.314 854.696 665.001 851.986 665.001 cv
.6 .941176 .941176 rgb
f
939.012 220.501 mo
934.92 220.501 930.911 218.495 928.517 214.808 cv
924.757 209.018 926.402 201.276 932.192 197.517 cv
934.295 196.151 936.655 195.499 938.988 195.499 cv
943.08 195.499 947.089 197.505 949.483 201.192 cv
953.243 206.982 951.598 214.724 945.808 218.483 cv
943.705 219.849 941.345 220.501 939.012 220.501 cv
938.991 197.999 mo
937.124 197.999 935.236 198.521 933.554 199.613 cv
928.922 202.621 927.605 208.814 930.613 213.446 cv
932.529 216.396 935.736 218.001 939.009 218.001 cv
940.876 218.001 942.764 217.479 944.446 216.387 cv
949.078 213.379 950.395 207.186 947.387 202.554 cv
945.471 199.604 942.264 197.999 938.991 197.999 cv
.627451 .960784 .960784 rgb
f
708.601 95.8411 mo
700.751 94.2147 693.126 90.8687 686.299 85.7236 cv
671.389 74.4882 663.681 57.2405 664.007 39.9003 cv
667.694 38.5191 671.509 37.6752 675.343 37.3501 cv
674.15 52.1333 680.317 67.1925 693.039 76.7788 cv
697.699 80.2905 702.823 82.7546 708.127 84.2105 cv
707.837 88.1223 708.004 92.0229 708.601 95.8411 cv
718.895 95.5138 mo
718.295 92.3255 718.071 89.0554 718.25 85.7698 cv
718.822 85.7917 719.394 85.8026 719.966 85.8026 cv
720.447 85.8026 720.927 85.7949 721.408 85.7795 cv
720.954 89.1036 720.113 92.3725 718.895 95.5138 cv
.596078 .952941 .933333 rgb
f
718.295 96.9786 mo
715.051 96.8826 711.808 96.5054 708.601 95.8411 cv
708.004 92.0229 707.837 88.1223 708.127 84.2105 cv
711.454 85.1234 714.851 85.6399 718.25 85.7698 cv
718.071 89.0554 718.295 92.3255 718.895 95.5138 cv
718.704 96.0059 718.505 96.4931 718.295 96.9786 cv
.345098 .933333 .913725 rgb
f
730.025 96.0956 mo
731.254 92.1862 732.033 88.1484 732.346 84.0681 cv
741.384 81.4848 749.686 76.0469 755.779 67.9614 cv
755.858 67.8577 755.935 67.7544 756.012 67.6502 cv
757.882 71.0932 760.095 74.3394 762.614 77.3355 cv
753.966 87.4963 742.352 93.8553 730.025 96.0956 cv
769.463 67.2748 mo
766.588 63.3195 764.336 58.913 762.82 54.2137 cv
763.497 52.0184 764 49.7843 764.329 47.5385 cv
767.991 48.022 771.645 49.0141 775.192 50.5499 cv
774.202 56.2953 772.303 61.9435 769.463 67.2748 cv
775.992 39.9099 mo
772.257 38.5853 768.455 37.724 764.647 37.2996 cv
764.575 36.4318 764.477 35.5633 764.355 34.7014 cv
767.996 36.2563 771.872 37.37 775.919 37.9747 cv
775.955 38.6198 775.979 39.2636 775.992 39.9099 cv
.596078 .952941 .933333 rgb
f
775.192 50.5499 mo
771.645 49.0141 767.991 48.022 764.329 47.5385 cv
764.828 44.1355 764.931 40.701 764.647 37.2996 cv
768.455 37.724 772.257 38.5853 775.992 39.9099 cv
776.063 43.4583 775.799 47.0236 775.192 50.5499 cv
.345098 .933333 .913725 rgb
f
665.462 28.2268 mo
667.182 20.8624 670.432 13.7267 675.276 7.29839 cv
677.169 4.78677 679.232 2.48007 681.437 .38116 cv
682.111 .724965 682.769 1.11978 683.406 1.56594 cv
686.013 3.39114 687.927 5.8374 689.087 8.56461 cv
687.346 10.2275 685.717 12.0535 684.221 14.0387 cv
681.289 17.9295 679.088 22.1413 677.594 26.5136 cv
673.528 26.6171 669.454 27.184 665.462 28.2268 cv
692.308 5.76912 mo
691.239 3.64446 689.789 1.68477 687.976 0 cv
701.923 0 li
698.526 1.49388 695.291 3.42152 692.308 5.76912 cv
.596078 .952941 .933333 rgb
f
774.481 28.0407 mo
770.575 27.1464 766.901 25.6513 763.562 23.6596 cv
764.918 20.0439 766.7 16.6688 768.843 13.5792 cv
771.402 18.1422 773.289 23.0169 774.481 28.0407 cv
755.386 13.5076 mo
753.303 10.8299 750.882 8.35056 748.135 6.13608 cv
747.28 4.16998 746.587 2.12014 746.072 0 cv
758.151 0 li
759.422 1.18016 760.627 2.40877 761.767 3.68107 cv
759.332 6.70748 757.188 9.99522 755.386 13.5076 cv
f
758.151 1000 mo
746.072 1000 li
745.361 997.075 744.989 994.02 745 990.879 cv
748.007 992.383 750.92 994.18 753.701 996.276 cv
755.263 997.453 756.748 998.698 758.151 1000 cv
701.922 1000 mo
687.977 1000 li
687.289 999.361 686.549 998.761 685.758 998.207 cv
685.409 997.963 685.056 997.732 684.698 997.512 cv
694.827 989.277 707.379 984.997 720.043 984.997 cv
725.28 984.997 730.536 985.729 735.649 987.215 cv
735.572 988.191 735.524 989.178 735.507 990.171 cv
735.453 993.261 735.696 996.287 736.208 999.223 cv
730.984 997.193 725.494 996.197 720.034 996.197 cv
713.82 996.197 707.642 997.484 701.922 1000 cv
f
557.987 60.0009 mo
554.782 60.0009 551.563 59.2709 548.598 57.7828 cv
545.799 53.0484 542.207 48.7628 537.917 45.1463 cv
535.95 38.6976 537.117 31.4183 541.68 25.7842 cv
545.829 20.6598 551.895 17.9991 558.013 17.9991 cv
559.666 17.9991 561.322 18.1933 562.946 18.5855 cv
563.207 20.1807 563.582 21.7674 564.074 23.3318 cv
562.118 22.573 560.061 22.1995 558.01 22.1995 cv
553.116 22.1995 548.264 24.3273 544.944 28.4272 cv
539.104 35.6382 540.217 46.2167 547.428 52.0561 cv
550.538 54.575 554.276 55.8003 557.99 55.8005 cv
562.884 55.8008 567.736 53.6727 571.056 49.5728 cv
573.483 46.5755 574.709 42.9957 574.796 39.417 cv
576.05 40.4724 577.372 41.4298 578.745 42.2847 cv
578.19 45.8107 576.728 49.2422 574.32 52.2158 cv
570.171 57.3401 564.104 60.0009 557.987 60.0009 cv
578.186 33.203 mo
576.57 31.6961 575.11 29.9688 573.853 28.0322 cv
572.722 26.2906 571.812 24.4687 571.117 22.6003 cv
571.15 22.6268 571.183 22.6529 571.216 22.6797 cv
574.696 25.4983 577.041 29.201 578.186 33.203 cv
.666667 .960784 .960784 rgb
f
578.745 42.2847 mo
577.372 41.4298 576.05 40.4724 574.796 39.417 cv
574.917 34.3859 572.786 29.3561 568.572 25.9439 cv
567.179 24.816 565.66 23.9471 564.074 23.3318 cv
563.582 21.7674 563.207 20.1807 562.946 18.5855 cv
565.844 19.2854 568.637 20.6166 571.117 22.6003 cv
571.812 24.4687 572.722 26.2906 573.853 28.0322 cv
575.11 29.9688 576.57 31.6961 578.186 33.203 cv
579.028 36.1455 579.223 39.2499 578.745 42.2847 cv
.490196 .941176 .941176 rgb
f
10.761 1000 mo
0 1000 li
0 994.987 li
.333221 995 .667096 995.007 1.00178 995.007 cv
3.95512 995.007 6.95645 994.5 9.89256 993.432 cv
23.3857 988.521 30.3432 973.6 25.4321 960.107 cv
21.5896 949.55 11.6177 942.993 .998172 942.993 cv
.665974 942.993 .333302 943 0 943.013 cv
0 936.507 li
.333317 936.496 .664794 936.491 .997201 936.491 cv
14.2738 936.491 26.736 944.686 31.5401 957.885 cv
37.6793 974.751 28.9825 993.401 12.1157 999.54 cv
11.6658 999.704 11.2131 999.857 10.761 1000 cv
.635294 .960784 .960784 rgb
f
1000 1000 mo
991.235 1000 li
981.933 997.063 974.054 989.99 970.46 980.115 cv
969.334 977.023 968.708 973.87 968.538 970.746 cv
970.942 969.164 973.18 967.39 975.238 965.456 cv
974.676 969.517 975.068 973.772 976.568 977.893 cv
980.29 988.117 989.76 994.589 1000 994.987 cv
1000 1000 li
972.055 954.22 mo
973.193 951.99 974.59 949.887 976.219 947.964 cv
975.033 950.168 973.64 952.264 972.055 954.22 cv
987.803 946.593 mo
988.805 943.932 989.582 941.182 990.121 938.375 cv
993.383 937.215 996.713 936.609 1000 936.507 cv
1000 943.013 li
997.37 943.114 994.713 943.62 992.107 944.568 cv
990.587 945.122 989.15 945.802 987.803 946.593 cv
f
1.00252 1.50883 mo
.668049 1.50883 .333334 1.50359 0 1.49324 cv
0 0 li
10.7612 0 li
7.52591 1.02157 4.24061 1.50883 1.00252 1.50883 cv
f
1000 1.49325 mo
997.001 1.40012 994.053 .889894 991.235 0 cv
1000 0 li
1000 1.49325 li
f
126.972 598.504 mo
115.782 598.504 105.868 590.482 103.857 579.081 cv
101.603 566.299 110.138 554.11 122.919 551.857 cv
124.299 551.614 125.673 551.496 127.028 551.496 cv
138.218 551.496 148.133 559.518 150.143 570.919 cv
152.397 583.701 143.862 595.89 131.081 598.143 cv
129.701 598.386 128.327 598.504 126.972 598.504 cv
127.022 556.197 mo
125.938 556.197 124.84 556.291 123.735 556.485 cv
113.51 558.289 106.683 568.039 108.486 578.264 cv
110.094 587.385 118.027 593.802 126.978 593.803 cv
128.063 593.803 129.16 593.709 130.265 593.515 cv
140.49 591.711 147.317 581.961 145.514 571.735 cv
143.906 562.614 135.973 556.197 127.022 556.197 cv
.556863 .960784 .960784 rgb
f
676.264 31.2432 mo
676.618 29.6517 677.061 28.0722 677.594 26.5136 cv
678.048 26.502 678.502 26.4963 678.956 26.4963 cv
681.084 26.4963 683.209 26.623 685.317 26.874 cv
682.786 29.2917 679.6 30.7776 676.264 31.2432 cv
665.307 28.9071 mo
665.076 28.7626 664.847 28.611 664.621 28.4537 cv
664.902 28.3754 665.18 28.3003 665.462 28.2268 cv
665.408 28.4548 665.358 28.6787 665.307 28.9071 cv
.498039 .85098 .819608 rgb
f
673.986 31.4016 mo
671.004 31.4015 667.995 30.5906 665.307 28.9071 cv
665.358 28.6787 665.408 28.4548 665.462 28.2268 cv
669.454 27.184 673.528 26.6171 677.594 26.5136 cv
677.061 28.0722 676.618 29.6517 676.264 31.2432 cv
675.51 31.3484 674.749 31.4016 673.986 31.4016 cv
.298039 .827451 .788235 rgb
f
679.044 133.504 mo
662.499 133.504 646.186 125.855 635.718 111.446 cv
618.351 87.5424 623.649 54.0849 647.554 36.7178 cv
651.481 33.8642 655.667 31.6227 659.997 29.9749 cv
660.692 30.6232 661.441 31.2316 662.242 31.7925 cv
662.986 32.3137 663.753 32.7783 664.537 33.1877 cv
664.225 35.4187 664.049 37.6596 664.007 39.9003 cv
660.469 41.2256 657.048 43.0455 653.843 45.3742 cv
634.72 59.268 630.481 86.0337 644.374 105.157 cv
652.748 116.683 665.801 122.802 679.035 122.803 cv
687.759 122.804 696.56 120.146 704.157 114.626 cv
707.073 112.508 709.641 110.091 711.853 107.447 cv
713.29 110.933 715.114 114.266 717.296 117.371 cv
715.217 119.496 712.932 121.476 710.446 123.282 cv
700.951 130.181 689.946 133.504 679.044 133.504 cv
723.996 108.968 mo
721.775 105.254 720.158 101.21 719.203 96.9981 cv
719.453 97.0015 719.707 97.0032 719.957 97.0032 cv
723.336 97.0032 726.706 96.6988 730.025 96.0956 cv
728.607 100.601 726.591 104.934 723.996 108.968 cv
.498039 .85098 .819608 rgb
f
717.296 117.371 mo
715.114 114.266 713.29 110.933 711.853 107.447 cv
714.53 104.248 716.686 100.713 718.295 96.9786 cv
718.599 96.9876 718.899 96.994 719.203 96.9981 cv
720.158 101.21 721.775 105.254 723.996 108.968 cv
722.076 111.951 719.84 114.77 717.296 117.371 cv
.247059 .831372 .8 rgb
f
721.408 85.7795 mo
721.998 81.4551 721.93 77.0362 721.18 72.6894 cv
721.443 72.0417 721.724 71.3981 722.022 70.7574 cv
723.813 66.917 726.126 63.4851 728.837 60.5092 cv
731.815 68.1085 732.952 76.1693 732.346 84.0681 cv
728.784 85.0861 725.108 85.6608 721.408 85.7795 cv
716.631 59.5996 mo
715.745 57.9717 714.744 56.3825 713.626 54.8429 cv
705.252 43.3166 692.2 37.1969 678.965 37.1969 cv
677.757 37.1969 676.55 37.2477 675.343 37.3501 cv
675.395 36.7124 675.459 36.079 675.538 35.4427 cv
681.101 35.0207 686.451 32.3431 690.119 27.6676 cv
702.605 30.3155 714.189 37.4142 722.282 48.5538 cv
722.856 49.3431 723.405 50.1442 723.93 50.9534 cv
721.218 53.5186 718.765 56.4069 716.631 59.5996 cv
.498039 .85098 .819608 rgb
f
721.18 72.6894 mo
720.404 68.1908 718.898 63.7687 716.631 59.5996 cv
718.765 56.4069 721.218 53.5186 723.93 50.9534 cv
725.916 54.0197 727.548 57.2204 728.837 60.5092 cv
726.126 63.4851 723.813 66.917 722.022 70.7574 cv
721.724 71.3981 721.443 72.0417 721.18 72.6894 cv
.247059 .831372 .8 rgb
f
719.957 97.0032 mo
719.707 97.0032 719.453 97.0015 719.203 96.9981 cv
719.091 96.5051 718.988 96.0111 718.895 95.5138 cv
720.113 92.3725 720.954 89.1036 721.408 85.7795 cv
725.108 85.6608 728.784 85.0861 732.346 84.0681 cv
732.033 88.1484 731.254 92.1862 730.025 96.0956 cv
726.706 96.6988 723.336 97.0032 719.957 97.0032 cv
.298039 .827451 .788235 rgb
f
719.203 96.9981 mo
718.899 96.994 718.599 96.9876 718.295 96.9786 cv
718.505 96.4931 718.704 96.0059 718.895 95.5138 cv
718.988 96.0111 719.091 96.5051 719.203 96.9981 cv
.172549 .819608 .776471 rgb
f
664.007 39.9003 mo
664.049 37.6596 664.225 35.4187 664.537 33.1877 cv
667.525 34.7469 670.766 35.5017 673.982 35.5017 cv
674.502 35.5017 675.021 35.482 675.538 35.4427 cv
675.459 36.079 675.395 36.7124 675.343 37.3501 cv
671.509 37.6752 667.694 38.5191 664.007 39.9003 cv
.298039 .827451 .788235 rgb
f
327.016 302.003 mo
326.066 302.003 325.105 301.913 324.138 301.725 cv
316.006 300.144 310.695 292.27 312.276 284.138 cv
312.282 284.104 312.289 284.071 312.295 284.037 cv
313.554 283.033 314.903 282.199 316.313 281.536 cv
315.813 282.515 315.441 283.578 315.221 284.71 cv
313.956 291.216 318.205 297.515 324.71 298.779 cv
325.483 298.93 326.254 299.002 327.013 299.002 cv
332.642 299.002 337.665 295.022 338.779 289.29 cv
339.062 287.835 339.069 286.39 338.837 285.01 cv
339.036 285.194 339.232 285.382 339.425 285.575 cv
340.367 286.517 341.197 287.528 341.916 288.592 cv
341.871 289.014 341.807 289.438 341.725 289.862 cv
340.331 297.027 334.052 302.003 327.016 302.003 cv
339.854 279.268 mo
335.429 276.089 330.214 274.5 325 274.5 cv
322.32 274.5 319.64 274.92 317.067 275.759 cv
319.754 273.389 323.264 271.997 326.984 271.997 cv
327.934 271.997 328.896 272.087 329.862 272.275 cv
334.203 273.119 337.74 275.756 339.854 279.268 cv
.533333 .803922 .960784 rgb
f
341.916 288.592 mo
341.197 287.528 340.367 286.517 339.425 285.575 cv
339.232 285.382 339.036 285.194 338.837 285.01 cv
338.031 280.218 334.34 276.202 329.29 275.221 cv
328.517 275.07 327.746 274.998 326.987 274.998 cv
322.469 274.998 318.343 277.561 316.313 281.536 cv
314.903 282.199 313.554 283.033 312.295 284.037 cv
312.967 280.704 314.697 277.851 317.067 275.759 cv
319.64 274.92 322.32 274.5 325 274.5 cv
330.214 274.5 335.429 276.089 339.854 279.268 cv
341.494 281.992 342.277 285.242 341.916 288.592 cv
.32549 .784314 .941176 rgb
f
53.0173 843.5 mo
52.7112 843.5 52.4083 843.497 52.1011 843.492 cv
25.5827 843.03 4.09555 822.599 1.71817 796.784 cv
4.39691 801.76 9.07932 805.053 14.2848 806.124 cv
19.9603 821.668 34.7458 832.888 52.2808 833.193 cv
52.5252 833.198 52.7711 833.2 53.0145 833.2 cv
65.6798 833.2 77.0504 827.464 84.6196 818.416 cv
87.0358 820.833 89.8251 822.906 92.923 824.535 cv
83.4658 836.124 69.0714 843.5 53.0173 843.5 cv
13.0043 801.931 mo
9.41728 800.645 6.32426 797.982 4.58641 794.255 cv
4.21263 793.453 3.91666 792.634 3.69573 791.809 cv
5.71627 791.381 7.72626 790.753 9.6988 789.916 cv
10.4572 789.594 11.1966 789.247 11.9173 788.876 cv
11.8574 789.671 11.8202 790.473 11.8061 791.281 cv
11.742 794.955 12.1609 798.526 13.0043 801.931 cv
3.46883 785.187 mo
3.96295 782.645 5.11749 780.254 6.83553 778.279 cv
7.75771 779.762 8.75499 781.209 9.82972 782.617 cv
8.9751 783.101 8.08443 783.541 7.15908 783.934 cv
5.94327 784.45 4.71014 784.866 3.46883 785.187 cv
4.10859 775.775 mo
4.26792 775.294 4.43411 774.817 4.60707 774.343 cv
4.70658 774.537 4.80637 774.729 4.90831 774.922 cv
4.63173 775.199 4.36552 775.483 4.10859 775.775 cv
14.7511 769.783 mo
13.3588 767.155 12.2481 764.415 11.4198 761.608 cv
14.2773 757.705 17.6718 754.221 21.4893 751.264 cv
23.0067 755.506 23.3521 759.912 22.6771 764.107 cv
21.1345 765.782 19.7291 767.586 18.4781 769.502 cv
18.3147 769.498 18.1515 769.495 17.9877 769.495 cv
16.9118 769.495 15.829 769.59 14.7511 769.783 cv
86.4252 767.909 mo
79.0871 757.745 67.2176 751.042 53.7192 750.807 cv
53.4748 750.802 53.2285 750.8 52.985 750.8 cv
44.2538 750.8 36.138 753.526 29.4581 758.184 cv
29.2586 754.614 28.4616 751.016 27.0128 747.53 cv
34.6467 743.058 43.5265 740.5 52.9828 740.5 cv
53.2888 740.5 53.5918 740.502 53.899 740.508 cv
70.9992 740.806 86.0071 749.406 95.1481 762.4 cv
91.9826 763.791 89.0397 765.65 86.4252 767.909 cv
.772549 .960784 .960784 rgb
f
3.69573 791.809 mo
3.10558 789.603 3.0499 787.341 3.46883 785.187 cv
4.71014 784.866 5.94327 784.45 7.15908 783.934 cv
8.08443 783.541 8.9751 783.101 9.82972 782.617 cv
10.6104 783.64 11.4306 784.642 12.2918 785.62 cv
12.1251 786.692 11.9998 787.778 11.9173 788.876 cv
11.1966 789.247 10.4572 789.594 9.6988 789.916 cv
7.72626 790.753 5.71627 791.381 3.69573 791.809 cv
22.6771 764.107 mo
23.3521 759.912 23.0067 755.506 21.4893 751.264 cv
23.2439 749.905 25.0893 748.656 27.0128 747.53 cv
28.4616 751.016 29.2586 754.614 29.4581 758.184 cv
26.9871 759.908 24.7133 761.895 22.6771 764.107 cv
.52549 .941176 .929412 rgb
f
96.9599 818.843 mo
93.7773 817.303 90.9743 815.187 88.6568 812.656 cv
92.065 806.785 94.0669 799.988 94.194 792.719 cv
94.2247 790.958 94.1446 789.222 93.9599 787.516 cv
97.2026 784.152 99.9351 780.485 102.161 776.609 cv
103.768 781.745 104.591 787.223 104.492 792.898 cv
104.326 802.41 101.59 811.275 96.9599 818.843 cv
90.3272 774.539 mo
90.2333 774.339 90.1371 774.138 90.0401 773.939 cv
90.5661 773.443 91.1093 772.969 91.6712 772.517 cv
91.2438 773.2 90.7955 773.875 90.3272 774.539 cv
.772549 .960784 .960784 rgb
f
281.995 264.504 mo
280.062 264.504 278.096 264.14 276.193 263.371 cv
268.256 260.165 264.422 251.131 267.629 243.193 cv
270.067 237.159 275.873 233.496 282.005 233.496 cv
283.938 233.496 285.904 233.86 287.807 234.629 cv
295.744 237.835 299.578 246.869 296.371 254.807 cv
293.933 260.841 288.127 264.504 281.995 264.504 cv
282.004 236.597 mo
277.099 236.597 272.453 239.527 270.503 244.355 cv
267.937 250.705 271.005 257.931 277.355 260.497 cv
278.877 261.112 280.449 261.403 281.996 261.403 cv
286.901 261.403 291.547 258.473 293.497 253.645 cv
296.063 247.295 292.995 240.068 286.645 237.503 cv
285.123 236.888 283.551 236.597 282.004 236.597 cv
.498039 .945098 .960784 rgb
f
109.035 828.507 mo
106.658 828.507 104.245 828.26 101.827 827.746 cv
98.6476 827.07 95.6649 825.977 92.923 824.535 cv
94.3918 822.735 95.7414 820.834 96.9599 818.843 cv
98.924 819.793 101.032 820.523 103.262 820.997 cv
105.196 821.408 107.127 821.606 109.027 821.606 cv
121.781 821.606 133.239 812.715 135.997 799.738 cv
139.166 784.828 129.648 770.172 114.738 767.003 cv
112.804 766.592 110.873 766.394 108.973 766.394 cv
108.205 766.394 107.442 766.426 106.686 766.49 cv
107.446 764.192 108.053 761.855 108.505 759.496 cv
108.658 759.494 108.812 759.493 108.965 759.493 cv
111.342 759.493 113.755 759.74 116.173 760.254 cv
134.811 764.216 146.707 782.535 142.746 801.173 cv
141.428 807.375 138.519 812.831 134.538 817.205 cv
131.307 817.757 128.079 818.635 124.902 819.855 cv
119.435 821.953 114.544 824.898 110.319 828.483 cv
109.892 828.499 109.464 828.507 109.035 828.507 cv
95.9507 763.575 mo
95.6885 763.179 95.4208 762.788 95.1481 762.4 cv
95.5991 762.202 96.0543 762.013 96.5142 761.834 cv
96.3386 762.417 96.1508 762.998 95.9507 763.575 cv
.498039 .823529 .898039 rgb
f
110.319 828.483 mo
114.544 824.898 119.435 821.953 124.902 819.855 cv
128.079 818.635 131.307 817.757 134.538 817.205 cv
128.388 823.96 119.68 828.132 110.319 828.483 cv
.27451 .768627 .827451 rgb
f
84.6196 818.416 mo
79.732 813.526 76.3717 807.227 75.0812 800.355 cv
77.2985 799.446 79.4696 798.388 81.5762 797.181 cv
82.251 803.006 84.7737 808.414 88.6568 812.656 cv
87.4738 814.694 86.1217 816.62 84.6196 818.416 cv
75.0022 788.132 mo
75.0776 787.697 75.1613 787.263 75.2539 786.827 cv
76.8806 779.174 80.9282 772.657 86.4252 767.909 cv
87.7945 769.805 89.0052 771.821 90.0401 773.939 cv
87.8282 776.026 85.9472 778.491 84.5089 781.259 cv
81.5935 784.021 78.3937 786.311 75.0022 788.132 cv
.498039 .823529 .898039 rgb
f
92.923 824.535 mo
89.8251 822.906 87.0358 820.833 84.6196 818.416 cv
86.1217 816.62 87.4738 814.694 88.6568 812.656 cv
90.9743 815.187 93.7773 817.303 96.9599 818.843 cv
95.7414 820.834 94.3918 822.735 92.923 824.535 cv
90.0401 773.939 mo
89.0052 771.821 87.7945 769.805 86.4252 767.909 cv
89.0397 765.65 91.9826 763.791 95.1481 762.4 cv
95.4208 762.788 95.6885 763.179 95.9507 763.575 cv
94.8778 766.669 93.4511 769.672 91.6712 772.517 cv
91.1093 772.969 90.5661 773.443 90.0401 773.939 cv
.384314 .803922 .878431 rgb
f
681.842 1000 mo
680.638 1000 li
680.082 999.753 679.516 999.539 678.945 999.359 cv
680.355 998.551 681.647 997.581 682.8 996.481 cv
683.444 996.788 684.078 997.132 684.698 997.512 cv
683.723 998.305 682.771 999.134 681.842 1000 cv
660.281 1000 mo
660.02 1000 li
660.05 999.972 660.08 999.944 660.11 999.916 cv
660.167 999.944 660.224 999.972 660.281 1000 cv
668.986 998.004 mo
667.225 998.003 665.506 997.711 663.886 997.163 cv
666.986 995.409 670.487 994.498 674.018 994.498 cv
675.475 994.498 676.938 994.653 678.379 994.968 cv
676.698 996.185 674.75 997.093 672.599 997.59 cv
671.388 997.87 670.178 998.004 668.986 998.004 cv
.529412 .941176 .952941 rgb
f
667.364 1000 mo
660.281 1000 li
660.224 999.972 660.167 999.944 660.11 999.916 cv
661.274 998.843 662.542 997.924 663.886 997.163 cv
665.506 997.711 667.225 998.003 668.986 998.004 cv
670.178 998.004 671.388 997.87 672.599 997.59 cv
674.75 997.093 676.698 996.185 678.379 994.968 cv
679.886 995.296 681.368 995.799 682.8 996.481 cv
681.647 997.581 680.355 998.551 678.945 999.359 cv
677.333 998.849 675.669 998.599 674.015 998.599 cv
671.729 998.599 669.46 999.075 667.364 1000 cv
.278431 .862745 .870588 rgb
f
687.977 1000 mo
681.842 1000 li
682.771 999.134 683.723 998.305 684.698 997.512 cv
685.056 997.732 685.409 997.963 685.758 998.207 cv
686.549 998.761 687.289 999.361 687.977 1000 cv
.329412 .917647 .921569 rgb
f
659.997 29.9749 mo
652.643 23.1162 651.275 11.715 657.207 3.24159 cv
658.047 2.04269 658.992 .960531 660.02 0 cv
660.28 0 li
661.664 .671312 663.128 1.18546 664.644 1.52476 cv
663.097 2.599 661.71 3.95976 660.566 5.59314 cv
655.371 13.0127 657.174 23.2389 664.594 28.4342 cv
664.603 28.4408 664.612 28.447 664.621 28.4537 cv
663.066 28.8874 661.521 29.3946 659.997 29.9749 cv
690.119 27.6676 mo
688.531 27.3308 686.928 27.0659 685.317 26.874 cv
686.088 26.1373 686.799 25.3138 687.434 24.4067 cv
690.804 19.594 691.229 13.6002 689.087 8.56461 cv
690.123 7.57454 691.198 6.64323 692.308 5.76912 cv
695.589 12.2902 695.273 20.3594 690.793 26.7583 cv
690.575 27.069 690.35 27.3727 690.119 27.6676 cv
.529412 .941176 .952941 rgb
f
681.437 .38116 mo
681.173 .246277 680.906 .119317 680.638 0 cv
681.842 0 li
681.707 .125712 681.571 .253916 681.437 .38116 cv
f
664.644 1.52476 mo
663.128 1.18546 661.664 .671312 660.28 0 cv
667.363 0 li
666.417 .417505 665.506 .927038 664.644 1.52476 cv
.278431 .862745 .870588 rgb
f
689.087 8.56461 mo
687.927 5.8374 686.013 3.39114 683.406 1.56594 cv
682.769 1.11978 682.111 .724965 681.437 .38116 cv
681.571 .253916 681.707 .125712 681.842 0 cv
687.976 0 li
689.789 1.68477 691.239 3.64446 692.308 5.76912 cv
691.198 6.64323 690.123 7.57454 689.087 8.56461 cv
.329412 .917647 .921569 rgb
f
675.538 35.4427 mo
675.713 34.0375 675.955 32.634 676.264 31.2432 cv
679.6 30.7776 682.786 29.2917 685.317 26.874 cv
686.928 27.0659 688.531 27.3308 690.119 27.6676 cv
686.451 32.3431 681.101 35.0207 675.538 35.4427 cv
664.537 33.1877 mo
663.753 32.7783 662.986 32.3137 662.242 31.7925 cv
661.441 31.2316 660.692 30.6232 659.997 29.9749 cv
661.521 29.3946 663.066 28.8874 664.621 28.4537 cv
664.847 28.611 665.076 28.7626 665.307 28.9071 cv
664.994 30.326 664.737 31.7562 664.537 33.1877 cv
.278431 .870588 .866667 rgb
f
673.982 35.5017 mo
670.766 35.5017 667.525 34.7469 664.537 33.1877 cv
664.737 31.7562 664.994 30.326 665.307 28.9071 cv
667.995 30.5906 671.004 31.4015 673.986 31.4016 cv
674.749 31.4016 675.51 31.3484 676.264 31.2432 cv
675.955 32.634 675.713 34.0375 675.538 35.4427 cv
675.021 35.482 674.502 35.5017 673.982 35.5017 cv
.180392 .858823 .85098 rgb
f
227.044 415.504 mo
225.4 415.504 223.735 415.39 222.06 415.154 cv
211.368 413.652 202.462 407.533 197.073 399.097 cv
197.818 398.606 198.554 398.087 199.276 397.543 cv
200.476 396.639 201.613 395.683 202.688 394.681 cv
206.955 401.738 214.244 406.886 223.047 408.124 cv
224.387 408.312 225.72 408.404 227.035 408.404 cv
232.481 408.404 237.656 406.837 242.06 404.079 cv
243.669 406.18 246.099 407.632 248.9 407.94 cv
242.806 412.715 235.166 415.504 227.044 415.504 cv
250.007 406 mo
249.866 406 249.724 405.997 249.581 405.989 cv
247.189 405.864 245.097 404.7 243.72 402.957 cv
247.924 399.894 251.288 395.687 253.309 390.714 cv
255.909 391.896 257.743 394.421 257.976 397.361 cv
256.181 400.561 253.915 403.433 251.281 405.899 cv
250.866 405.966 250.44 406 250.007 406 cv
259.39 394.553 mo
258.452 392.002 256.499 389.922 253.997 388.831 cv
254.506 387.267 254.887 385.637 255.123 383.953 cv
255.934 378.19 254.954 372.589 252.607 367.71 cv
255.41 369.422 258.413 370.818 261.563 371.857 cv
262.547 376.026 262.787 380.443 262.154 384.94 cv
261.676 388.344 260.729 391.567 259.39 394.553 cv
193.387 391.443 mo
193.292 391.166 193.2 390.886 193.113 390.606 cv
193.257 389.995 193.384 389.379 193.494 388.761 cv
195.406 387.629 197.255 386.368 199.032 384.977 cv
199.102 385.373 199.181 385.767 199.268 386.157 cv
197.778 387.853 196.094 389.422 194.221 390.834 cv
193.945 391.042 193.667 391.245 193.387 391.443 cv
193.307 376.236 mo
193.045 374.982 192.709 373.737 192.298 372.51 cv
194.117 364.039 198.881 356.847 205.344 351.871 cv
205.916 353.347 206.377 354.849 206.73 356.368 cv
205.875 359.117 204.725 361.804 203.274 364.379 cv
202.845 365.03 202.44 365.702 202.064 366.392 cv
201.233 367.69 200.322 368.954 199.329 370.18 cv
197.496 372.443 195.476 374.463 193.307 376.236 cv
238.739 354.132 mo
236.324 353.037 233.712 352.264 230.953 351.876 cv
229.612 351.688 228.28 351.596 226.964 351.596 cv
223.94 351.596 220.999 352.08 218.228 352.982 cv
218.666 350.471 218.917 347.94 218.984 345.407 cv
221.56 344.81 224.23 344.496 226.955 344.496 cv
228.601 344.496 230.264 344.61 231.94 344.846 cv
232.783 344.964 233.614 345.111 234.434 345.286 cv
235.538 348.431 236.99 351.394 238.739 354.132 cv
.498039 .929412 .909804 rgb
f
193.113 390.606 mo
192.968 390.146 192.834 389.684 192.708 389.216 cv
192.971 389.067 193.233 388.915 193.494 388.761 cv
193.384 389.379 193.257 389.995 193.113 390.606 cv
191.582 377.573 mo
191.64 376.738 191.727 375.901 191.846 375.059 cv
191.967 374.198 192.118 373.347 192.298 372.51 cv
192.709 373.737 193.045 374.982 193.307 376.236 cv
192.742 376.699 192.166 377.145 191.582 377.573 cv
.247059 .847059 .890196 rgb
f
193.494 388.761 mo
194.224 384.635 194.172 380.381 193.307 376.236 cv
195.476 374.463 197.496 372.443 199.329 370.18 cv
200.322 368.954 201.233 367.69 202.064 366.392 cv
200.47 369.311 199.367 372.56 198.877 376.047 cv
198.448 379.097 198.521 382.101 199.032 384.977 cv
197.255 386.368 195.406 387.629 193.494 388.761 cv
203.274 364.379 mo
204.725 361.804 205.875 359.117 206.73 356.368 cv
206.974 357.417 207.167 358.473 207.308 359.534 cv
205.796 360.987 204.44 362.61 203.274 364.379 cv
214.878 354.313 mo
214.334 352.012 213.591 349.741 212.645 347.527 cv
214.673 346.628 216.795 345.915 218.984 345.407 cv
218.917 347.94 218.666 350.471 218.228 352.982 cv
217.08 353.355 215.962 353.8 214.878 354.313 cv
.247059 .811765 .878431 rgb
f
192.708 389.216 mo
191.709 385.508 191.303 381.585 191.582 377.573 cv
192.166 377.145 192.742 376.699 193.307 376.236 cv
194.172 380.381 194.224 384.635 193.494 388.761 cv
193.233 388.915 192.971 389.067 192.708 389.216 cv
.121569 .768627 .870588 rgb
f
248.9 407.94 mo
246.099 407.632 243.669 406.18 242.06 404.079 cv
242.626 403.725 243.18 403.35 243.72 402.957 cv
245.097 404.7 247.189 405.864 249.581 405.989 cv
249.724 405.997 249.866 406 250.007 406 cv
250.44 406 250.866 405.966 251.281 405.899 cv
250.517 406.614 249.722 407.295 248.9 407.94 cv
257.976 397.361 mo
257.743 394.421 255.909 391.896 253.309 390.714 cv
253.559 390.097 253.789 389.47 253.997 388.831 cv
256.499 389.922 258.452 392.002 259.39 394.553 cv
258.958 395.514 258.486 396.451 257.976 397.361 cv
.341176 .909804 .890196 rgb
f
256.198 359.808 mo
252.418 357.338 249.129 354.132 246.558 350.364 cv
250.365 352.88 253.631 356.098 256.198 359.808 cv
.498039 .929412 .909804 rgb
f
261.563 371.857 mo
258.413 370.818 255.41 369.422 252.607 367.71 cv
249.752 361.777 244.876 356.913 238.739 354.132 cv
236.99 351.394 235.538 348.431 234.434 345.286 cv
238.87 346.231 242.956 347.983 246.558 350.364 cv
249.129 354.132 252.418 357.338 256.198 359.808 cv
258.699 363.422 260.537 367.504 261.563 371.857 cv
.309804 .909804 .882353 rgb
f
625.044 585.01 mo
615.709 585.01 606.53 582.44 598.564 577.623 cv
604.019 576.987 609.369 575.567 614.429 573.407 cv
617.873 574.331 621.44 574.808 625.035 574.808 cv
631.497 574.808 638.051 573.269 644.154 570.024 cv
662.17 560.445 670.065 539.283 663.542 520.598 cv
666.207 517.2 668.248 513.311 669.516 509.114 cv
669.691 509.426 669.861 509.739 670.03 510.057 cv
683.254 534.927 673.813 565.807 648.943 579.03 cv
641.316 583.086 633.12 585.01 625.044 585.01 cv
591.957 566.606 mo
589.766 566.606 587.567 566.448 585.38 566.128 cv
583.354 563.625 581.538 560.893 579.97 557.943 cv
566.746 533.073 576.187 502.193 601.057 488.97 cv
601.609 488.676 602.166 488.393 602.724 488.121 cv
601.402 492.158 600.8 496.493 601.054 500.96 cv
584.798 512.71 579.294 534.946 588.976 553.154 cv
591.697 558.271 595.354 562.573 599.622 565.959 cv
597.096 566.388 594.531 566.606 591.957 566.606 cv
660.117 513.228 mo
656.173 506.549 650.583 501.38 644.145 497.967 cv
641.954 492.993 639.042 488.307 635.447 484.08 cv
646.365 486.37 656.471 492.21 663.93 501.038 cv
663.615 505.43 662.271 509.584 660.117 513.228 cv
608.076 496.874 mo
608.405 492.481 609.763 488.331 611.93 484.691 cv
613.913 484.164 615.914 483.761 617.917 483.48 cv
621.958 486.267 625.417 489.603 628.257 493.325 cv
627.164 493.237 626.066 493.192 624.964 493.192 cv
619.283 493.192 613.531 494.381 608.076 496.874 cv
.654902 .960784 .960784 rgb
f
663.542 520.598 mo
662.861 518.648 662.024 516.725 661.024 514.846 cv
660.732 514.297 660.43 513.758 660.117 513.228 cv
662.271 509.584 663.615 505.43 663.93 501.038 cv
666.012 503.501 667.888 506.198 669.516 509.114 cv
668.248 513.311 666.207 517.2 663.542 520.598 cv
601.054 500.96 mo
600.8 496.493 601.402 492.158 602.724 488.121 cv
605.728 486.66 608.81 485.521 611.93 484.691 cv
609.763 488.331 608.405 492.481 608.076 496.874 cv
607.327 497.217 606.583 497.584 605.846 497.975 cv
604.159 498.872 602.56 499.872 601.054 500.96 cv
.509804 .941176 .941176 rgb
f
311.005 373 mo
310.934 373 310.863 372.999 310.791 372.998 cv
306.003 372.914 301.92 370.038 300.065 365.949 cv
300.738 365.466 301.395 364.965 302.037 364.445 cv
303.399 367.987 306.804 370.528 310.832 370.599 cv
310.889 370.6 310.946 370.6 311.002 370.6 cv
316.227 370.601 320.507 366.412 320.599 361.167 cv
320.682 356.412 317.293 352.404 312.768 351.562 cv
313.163 350.837 313.539 350.1 313.893 349.351 cv
319.204 350.665 323.098 355.507 322.998 361.21 cv
322.884 367.764 317.534 373 311.005 373 cv
.498039 .870588 .960784 rgb
f
300.065 365.949 mo
299.353 364.379 298.97 362.629 299.002 360.79 cv
299.116 354.236 304.466 349 310.995 349 cv
311.066 349 311.137 349.001 311.209 349.002 cv
312.133 349.018 313.032 349.138 313.893 349.351 cv
313.539 350.1 313.163 350.837 312.768 351.562 cv
312.248 351.466 311.714 351.411 311.168 351.401 cv
311.111 351.4 311.054 351.4 310.998 351.4 cv
305.773 351.4 301.493 355.588 301.401 360.833 cv
301.379 362.106 301.606 363.325 302.037 364.445 cv
301.395 364.965 300.738 365.466 300.065 365.949 cv
.309804 .85098 .933333 rgb
f
817.971 452.513 mo
810.972 452.513 803.86 451.078 797.053 448.048 cv
795.061 447.161 793.151 446.162 791.332 445.064 cv
792.59 445.352 793.867 445.6 795.161 445.805 cv
798.156 446.279 801.13 446.508 804.068 446.508 cv
812.848 446.508 821.291 444.456 828.848 440.747 cv
840.354 437.599 850.408 429.505 855.638 417.758 cv
856.525 415.766 857.24 413.742 857.792 411.701 cv
861.889 410.217 865.736 408.27 869.277 405.932 cv
868.758 411.324 867.372 416.726 865.048 421.947 cv
856.509 441.124 837.69 452.513 817.971 452.513 cv
789.554 432.837 mo
781.871 430.256 775.22 425.715 770.087 419.884 cv
768.351 415.479 767.219 410.834 766.743 406.09 cv
769.088 405.081 771.549 404.597 773.984 404.597 cv
774.988 404.597 775.987 404.679 776.972 404.841 cv
777.931 414.987 782.641 424.568 790.31 431.522 cv
790.076 431.97 789.824 432.408 789.554 432.837 cv
766.488 401.257 mo
766.448 394.167 767.881 386.952 770.952 380.053 cv
774.085 373.016 778.603 367.028 784.041 362.266 cv
784.13 364.364 784.34 366.48 784.677 368.604 cv
785.02 370.772 785.486 372.89 786.066 374.952 cv
783.811 377.719 781.883 380.826 780.362 384.243 cv
778.054 389.427 776.903 394.831 776.798 400.169 cv
775.865 400.054 774.924 399.996 773.979 399.996 cv
771.472 399.996 768.94 400.407 766.488 401.257 cv
859.814 398.779 mo
861.72 386.658 859.621 374.829 854.495 364.644 cv
862.054 372.235 867.007 381.983 868.782 392.396 cv
866.095 394.87 863.089 397.022 859.814 398.779 cv
844.074 369.087 mo
841.301 366.824 838.185 364.887 834.758 363.362 cv
829.313 360.938 823.621 359.79 818.023 359.79 cv
809.992 359.79 802.15 362.15 795.482 366.492 cv
794.888 362.516 794.846 358.583 795.301 354.771 cv
802.325 351.327 810.105 349.487 818.028 349.487 cv
820.349 349.487 822.68 349.645 825.01 349.966 cv
833.239 354.283 839.854 361.015 844.074 369.087 cv
.498039 .882353 .960784 rgb
f
793.165 433.885 mo
791.938 433.583 790.734 433.233 789.554 432.837 cv
789.824 432.408 790.076 431.97 790.31 431.522 cv
791.22 432.348 792.173 433.137 793.165 433.885 cv
766.743 406.09 mo
766.582 404.488 766.497 402.878 766.488 401.257 cv
768.94 400.407 771.472 399.996 773.979 399.996 cv
774.924 399.996 775.865 400.054 776.798 400.169 cv
776.767 401.734 776.826 403.295 776.972 404.841 cv
775.987 404.679 774.988 404.597 773.984 404.597 cv
771.549 404.597 769.088 405.081 766.743 406.09 cv
.247059 .843137 .941176 rgb
f
804.068 446.508 mo
801.13 446.508 798.156 446.279 795.161 445.805 cv
793.867 445.6 792.59 445.352 791.332 445.064 cv
789.784 444.13 788.303 443.125 786.885 442.053 cv
789.868 440.041 792.247 437.423 793.946 434.459 cv
796.187 436.067 798.623 437.472 801.242 438.638 cv
806.688 441.062 812.378 442.21 817.977 442.21 cv
821.673 442.21 825.328 441.71 828.848 440.747 cv
821.291 444.456 812.848 446.508 804.068 446.508 cv
783.168 438.953 mo
777.352 433.617 772.917 427.066 770.087 419.884 cv
775.22 425.715 781.871 430.256 789.554 432.837 cv
788.005 435.291 785.853 437.411 783.168 438.953 cv
.333333 .862745 .941176 rgb
f
786.885 442.053 mo
785.591 441.074 784.35 440.038 783.168 438.953 cv
785.853 437.411 788.005 435.291 789.554 432.837 cv
790.734 433.233 791.938 433.583 793.165 433.885 cv
793.422 434.079 793.683 434.271 793.946 434.459 cv
792.247 437.423 789.868 440.041 786.885 442.053 cv
.207843 .843137 .929412 rgb
f
859.166 399.12 mo
858.629 387.555 853.215 376.546 844.074 369.087 cv
839.854 361.015 833.239 354.283 825.01 349.966 cv
829.709 350.614 834.397 351.927 838.947 353.953 cv
844.923 356.613 850.141 360.271 854.495 364.644 cv
859.621 374.829 861.72 386.658 859.814 398.779 cv
859.599 398.895 859.383 399.008 859.166 399.12 cv
.333333 .862745 .941176 rgb
f
783.017 38.5 mo
782.735 38.5 782.454 38.4975 782.171 38.4926 cv
780.05 38.4556 777.962 38.28 775.919 37.9747 cv
775.737 34.6272 775.256 31.3031 774.481 28.0407 cv
777.011 28.62 779.638 28.9471 782.337 28.9942 cv
782.562 28.9982 782.788 29.0001 783.013 29.0001 cv
800.832 29.0006 815.876 16.6881 819.927 0 cv
820.997 0 li
821.867 4.25174 823.31 8.46025 825.358 12.5194 cv
817.495 27.9678 801.443 38.5 783.017 38.5 cv
.647059 .960784 .960784 rgb
f
764.355 34.7014 mo
763.25 34.2293 762.166 33.7166 761.106 33.1651 cv
761.127 33.0231 761.148 32.8833 761.171 32.7411 cv
761.492 30.7159 761.939 28.7425 762.503 26.827 cv
763.357 29.3942 763.976 32.0312 764.355 34.7014 cv
750.744 25.8689 mo
743.455 19.1207 738.293 10.1207 736.35 0 cv
738.081 0 li
741.169 1.36484 744.148 3.10189 746.961 5.22127 cv
747.359 5.52118 747.749 5.82564 748.135 6.13608 cv
749.678 9.68564 751.75 12.9584 754.251 15.8496 cv
752.797 19.0297 751.617 22.3767 750.744 25.8689 cv
f
775.919 37.9747 mo
771.872 37.37 767.996 36.2563 764.355 34.7014 cv
763.976 32.0312 763.357 29.3942 762.503 26.827 cv
762.82 25.7531 763.174 24.6957 763.562 23.6596 cv
766.901 25.6513 770.575 27.1464 774.481 28.0407 cv
775.256 31.3031 775.737 34.6272 775.919 37.9747 cv
.443137 .937255 .92549 rgb
f
748.135 6.13608 mo
747.749 5.82564 747.359 5.52118 746.961 5.22127 cv
744.148 3.10189 741.169 1.36484 738.081 0 cv
746.072 0 li
746.587 2.12014 747.28 4.16998 748.135 6.13608 cv
f
820.997 1000 mo
819.927 1000 li
820.154 999.067 820.345 998.122 820.502 997.163 cv
820.639 998.111 820.804 999.055 820.997 1000 cv
745 990.879 mo
741.965 989.361 738.835 988.141 735.649 987.215 cv
737.587 962.668 758.128 943.499 782.985 943.499 cv
783.267 943.499 783.546 943.502 783.829 943.507 cv
801.628 943.818 816.97 953.881 824.85 968.513 cv
822.593 973.263 821.093 978.346 820.411 983.569 cv
820.364 983.557 820.314 983.546 820.268 983.535 cv
818.279 973.556 812.373 964.961 804.197 959.456 cv
799.391 951.558 790.857 946.994 781.983 946.994 cv
778.304 946.994 774.566 947.778 771.012 949.436 cv
765.247 952.124 760.932 956.657 758.439 962.003 cv
750.387 968.828 745.204 978.954 745.006 990.337 cv
745.003 990.517 745.001 990.699 745 990.879 cv
830.325 986.881 mo
830.258 986.852 830.19 986.822 830.123 986.793 cv
830.15 986.455 830.182 986.12 830.218 985.783 cv
830.258 986.148 830.294 986.514 830.325 986.881 cv
772.62 954.435 mo
772.815 954.336 773.011 954.241 773.21 954.148 cv
776.054 952.823 779.043 952.195 781.987 952.195 cv
784.495 952.195 786.968 952.651 789.289 953.519 cv
787.455 953.213 785.578 953.039 783.663 953.006 cv
783.438 953.002 783.212 953 782.987 953 cv
779.396 953 775.919 953.5 772.62 954.435 cv
.647059 .960784 .960784 rgb
f
758.439 962.003 mo
760.932 956.657 765.247 952.124 771.012 949.436 cv
774.566 947.778 778.304 946.994 781.983 946.994 cv
790.857 946.994 799.391 951.558 804.197 959.456 cv
799.799 956.495 794.744 954.427 789.289 953.519 cv
786.968 952.651 784.495 952.195 781.987 952.195 cv
779.043 952.195 776.054 952.823 773.21 954.148 cv
773.011 954.241 772.815 954.336 772.62 954.435 cv
767.341 955.931 762.521 958.544 758.439 962.003 cv
.439216 .941176 .941176 rgb
f
738.081 1000 mo
736.35 1000 li
736.301 999.741 736.253 999.483 736.208 999.223 cv
736.837 999.467 737.46 999.725 738.081 1000 cv
.647059 .960784 .960784 rgb
f
746.072 1000 mo
738.081 1000 li
737.46 999.725 736.837 999.467 736.208 999.223 cv
735.696 996.287 735.453 993.261 735.507 990.171 cv
735.524 989.178 735.572 988.191 735.649 987.215 cv
738.835 988.141 741.965 989.361 745 990.879 cv
744.989 994.02 745.361 997.075 746.072 1000 cv
.443137 .937255 .92549 rgb
f
415.295 655.701 mo
412.554 654.039 409.959 652.085 407.558 649.844 cv
407.675 647.73 407.589 645.626 407.312 643.561 cv
409.519 647.953 412.22 651.966 415.322 655.559 cv
415.313 655.607 415.304 655.653 415.295 655.701 cv
402.021 629.454 mo
399.597 625.785 396.441 622.568 392.661 620.05 cv
392.319 616.818 392.311 613.567 392.627 610.354 cv
395.68 611.86 398.478 613.698 400.996 615.811 cv
400.904 620.3 401.328 624.847 402.302 629.366 cv
402.209 629.395 402.114 629.425 402.021 629.454 cv
.639216 .909804 .960784 rgb
f
402.481 630.17 mo
402.331 629.929 402.177 629.691 402.021 629.454 cv
402.114 629.425 402.209 629.395 402.302 629.366 cv
402.36 629.634 402.42 629.903 402.481 630.17 cv
.388235 .882353 .890196 rgb
f
373.992 690.011 mo
373.459 690.011 372.926 690.001 372.392 689.981 cv
372.602 687.166 372.511 684.342 372.123 681.557 cv
372.748 681.592 373.371 681.609 373.993 681.609 cv
386.618 681.61 398.569 674.443 404.266 662.595 cv
406.537 664.301 408.913 665.83 411.37 667.176 cv
404.08 681.428 389.438 690.011 373.992 690.011 cv
364.544 688.927 mo
362.667 688.491 360.799 687.92 358.948 687.21 cv
344.717 681.747 335.167 669.383 332.651 655.401 cv
332.774 655.399 332.898 655.399 333.022 655.399 cv
335.868 655.399 338.724 655.782 341.506 656.558 cv
344.171 666.641 351.478 675.345 361.959 679.368 cv
362.577 679.606 363.197 679.823 363.821 680.022 cv
364.479 682.938 364.724 685.937 364.544 688.927 cv
340.392 648.189 mo
337.954 647.727 335.488 647.498 333.027 647.498 cv
332.682 647.498 332.336 647.503 331.991 647.512 cv
332.047 642.662 332.95 637.741 334.79 632.948 cv
336.849 627.585 339.89 622.885 343.626 618.977 cv
345.271 621.316 347.075 623.497 349.019 625.516 cv
346.34 628.491 344.152 631.998 342.632 635.959 cv
341.087 639.984 340.368 644.123 340.392 648.189 cv
357.771 618.578 mo
355.77 616.6 353.94 614.413 352.317 612.028 cv
358.807 608.122 366.308 605.989 374.008 605.989 cv
376.36 605.989 378.731 606.188 381.096 606.596 cv
380.698 609.385 380.496 612.204 380.495 615.028 cv
378.332 614.599 376.16 614.391 374.007 614.391 cv
368.283 614.391 362.698 615.863 357.771 618.578 cv
.639216 .909804 .960784 rgb
f
349.019 625.516 mo
347.075 623.497 345.271 621.316 343.626 618.977 cv
346.219 616.265 349.147 613.935 352.317 612.028 cv
353.94 614.413 355.77 616.6 357.771 618.578 cv
354.517 620.371 351.549 622.707 349.019 625.516 cv
.388235 .882353 .890196 rgb
f
372.392 689.981 mo
369.783 689.88 367.155 689.534 364.544 688.927 cv
364.724 685.937 364.479 682.938 363.821 680.022 cv
366.567 680.898 369.357 681.401 372.123 681.557 cv
372.511 684.342 372.602 687.166 372.392 689.981 cv
341.506 656.558 mo
338.724 655.782 335.868 655.399 333.022 655.399 cv
332.898 655.399 332.774 655.399 332.651 655.401 cv
332.186 652.815 331.961 650.174 331.991 647.512 cv
332.336 647.503 332.682 647.498 333.027 647.498 cv
335.488 647.498 337.954 647.727 340.392 648.189 cv
340.408 651.036 340.789 653.847 341.506 656.558 cv
.45098 .890196 .941176 rgb
f
505.989 132.513 mo
500.091 132.513 494.096 131.452 488.261 129.212 cv
476.395 124.658 467.29 116.03 461.928 105.539 cv
463.94 105.846 465.973 106 468.005 106 cv
469.839 106 471.673 105.875 473.494 105.624 cv
477.868 111.92 484.112 117.015 491.809 119.97 cv
496.476 121.761 501.275 122.611 505.992 122.611 cv
507.165 122.611 508.331 122.558 509.49 122.455 cv
510.557 125.641 511.12 128.941 511.193 132.237 cv
509.471 132.421 507.736 132.513 505.989 132.513 cv
519.437 130.644 mo
519.252 127.343 518.672 124.047 517.689 120.837 cv
528.888 117.37 538.442 108.985 542.97 97.1913 cv
550.808 76.7735 540.609 53.8683 520.191 46.0302 cv
519.956 45.9398 519.721 45.8522 519.485 45.7666 cv
519.673 45.1106 519.845 44.4455 520 43.773 cv
520.614 41.1125 520.94 38.4517 520.999 35.8253 cv
521.915 36.1177 522.83 36.4384 523.739 36.7876 cv
529.047 38.8249 533.802 41.6774 537.917 45.1463 cv
539.097 49.0145 541.404 52.5836 544.784 55.3203 cv
545.988 56.2955 547.267 57.1153 548.598 57.7828 cv
556.023 70.3454 557.848 86.0573 552.212 100.739 cv
546.396 115.892 533.939 126.542 519.437 130.644 cv
458.355 96.4366 mo
455.678 86.9707 455.791 76.6301 459.261 66.6976 cv
461.952 68.6295 464.919 70.2371 468.12 71.4514 cv
465.931 78.6054 465.876 85.9691 467.63 92.8057 cv
464.448 93.625 461.332 94.8324 458.355 96.4366 cv
471.118 64.2448 mo
467.939 63.0667 465.046 61.4054 462.501 59.3655 cv
467.544 50.0543 475.287 42.8905 484.352 38.4847 cv
486.745 39.9089 488.991 41.6714 491.019 43.7711 cv
491.619 44.3926 492.19 45.033 492.729 45.6888 cv
483.7 48.9053 475.878 55.3658 471.118 64.2448 cv
511.923 43.8371 mo
509.948 43.5364 507.971 43.3893 506.008 43.3893 cv
504.395 43.3893 502.79 43.4887 501.204 43.6835 cv
499.912 41.7664 498.435 39.9346 496.773 38.214 cv
495.705 37.1072 494.588 36.0759 493.429 35.1191 cv
497.504 34.0456 501.731 33.4866 506.01 33.4866 cv
508.394 33.4866 510.793 33.6599 513.192 34.0143 cv
513.274 36.6467 513.021 39.3317 512.4 42.0187 cv
512.258 42.6335 512.099 43.2396 511.923 43.8371 cv
.603922 .960784 .960784 rgb
f
468.005 106 mo
465.973 106 463.94 105.846 461.928 105.539 cv
461.717 105.126 461.513 104.712 461.313 104.293 cv
464.244 102.584 467.357 101.372 470.545 100.639 cv
471.404 102.367 472.39 104.034 473.494 105.624 cv
471.673 105.875 469.839 106 468.005 106 cv
492.729 45.6888 mo
492.19 45.033 491.619 44.3926 491.019 43.7711 cv
488.991 41.6714 486.745 39.9089 484.352 38.4847 cv
487.257 37.0731 490.299 35.9439 493.429 35.1191 cv
494.588 36.0759 495.705 37.1072 496.773 38.214 cv
498.435 39.9346 499.912 41.7664 501.204 43.6835 cv
498.302 44.0399 495.461 44.7157 492.729 45.6888 cv
.396078 .898039 .921569 rgb
f
468.12 71.4514 mo
464.919 70.2371 461.952 68.6295 459.261 66.6976 cv
459.429 66.2173 459.604 65.7388 459.788 65.2606 cv
460.574 63.2122 461.483 61.2443 462.501 59.3655 cv
465.046 61.4054 467.939 63.0667 471.118 64.2448 cv
470.337 65.702 469.638 67.2245 469.03 68.8085 cv
468.694 69.6858 468.391 70.5663 468.12 71.4514 cv
.352941 .831372 .917647 rgb
f
519.485 45.7666 mo
516.988 44.8614 514.456 44.2227 511.923 43.8371 cv
512.099 43.2396 512.258 42.6335 512.4 42.0187 cv
513.021 39.3317 513.274 36.6467 513.192 34.0143 cv
515.804 34.4001 518.412 35.0003 520.999 35.8253 cv
520.94 38.4517 520.614 41.1125 520 43.773 cv
519.845 44.4455 519.673 45.1106 519.485 45.7666 cv
f
511.193 132.237 mo
511.12 128.941 510.557 125.641 509.49 122.455 cv
512.285 122.206 515.034 121.66 517.689 120.837 cv
518.672 124.047 519.252 127.343 519.437 130.644 cv
516.75 131.404 513.991 131.94 511.193 132.237 cv
468.004 98 mo
464.755 97.9999 461.505 97.5077 458.381 96.5261 cv
458.372 96.4963 458.364 96.4664 458.355 96.4366 cv
461.332 94.8324 464.448 93.625 467.63 92.8057 cv
468.082 94.5672 468.653 96.2933 469.339 97.9723 cv
468.895 97.9907 468.449 98 468.004 98 cv
.368627 .917647 .941176 rgb
f
461.313 104.293 mo
460.122 101.792 459.141 99.1948 458.381 96.5261 cv
461.505 97.5077 464.755 97.9999 468.004 98 cv
468.449 98 468.895 97.9907 469.339 97.9723 cv
469.709 98.8759 470.111 99.7653 470.545 100.639 cv
467.357 101.372 464.244 102.584 461.313 104.293 cv
.266667 .886274 .921569 rgb
f
548.598 57.7828 mo
547.267 57.1153 545.988 56.2955 544.784 55.3203 cv
541.404 52.5836 539.097 49.0145 537.917 45.1463 cv
542.207 48.7628 545.799 53.0484 548.598 57.7828 cv
.439216 .941176 .941176 rgb
f
999.62 785.875 mo
999.704 785.15 999.832 784.432 1000 783.725 cv
1000 785.834 li
999.873 785.848 999.747 785.862 999.62 785.875 cv
.498039 .807843 .784314 rgb
f
1000 792.288 mo
999.489 790.153 999.374 787.985 999.62 785.875 cv
999.747 785.862 999.873 785.848 1000 785.834 cv
1000 792.288 li
.247059 .788235 .752941 rgb
f
18.012 806.504 mo
16.7537 806.504 15.5049 806.375 14.2848 806.124 cv
13.7859 804.758 13.3581 803.36 13.0043 801.931 cv
14.5998 802.504 16.2934 802.804 18.0092 802.804 cv
20.104 802.804 22.231 802.357 24.2548 801.413 cv
25.9178 800.638 27.3694 799.592 28.581 798.354 cv
29.7324 798.947 30.9 799.498 32.0814 800.005 cv
30.412 801.966 28.3046 803.607 25.8182 804.766 cv
23.2897 805.946 20.6294 806.504 18.012 806.504 cv
1.71817 796.784 mo
1.54829 796.469 1.38681 796.147 1.23343 795.818 cv
.706876 794.689 .304083 793.534 .0195301 792.368 cv
.513457 792.322 1.00617 792.264 1.50015 792.195 cv
1.50529 793.743 1.57875 795.271 1.71817 796.784 cv
0 785.833 mo
0 783.725 li
.696378 780.801 2.09887 778.061 4.10859 775.775 cv
3.07062 778.905 2.32448 782.171 1.9026 785.539 cv
1.26897 785.662 .6347 785.76 0 785.833 cv
.498039 .807843 .784314 rgb
f
.0195301 792.368 mo
.0129788 792.341 .00642602 792.314 0 792.287 cv
0 785.833 li
.6347 785.76 1.26897 785.662 1.9026 785.539 cv
1.67395 787.365 1.54073 789.22 1.50787 791.102 cv
1.5015 791.466 1.49895 791.832 1.50015 792.195 cv
1.00617 792.264 .513457 792.322 .0195301 792.368 cv
.247059 .788235 .752941 rgb
f
14.2848 806.124 mo
9.07932 805.053 4.39691 801.76 1.71817 796.784 cv
1.57875 795.271 1.50529 793.743 1.50015 792.195 cv
2.23233 792.092 2.9654 791.963 3.69573 791.809 cv
3.91666 792.634 4.21263 793.453 4.58641 794.255 cv
6.32426 797.982 9.41728 800.645 13.0043 801.931 cv
13.3581 803.36 13.7859 804.758 14.2848 806.124 cv
1.9026 785.539 mo
2.32448 782.171 3.07062 778.905 4.10859 775.775 cv
4.36552 775.483 4.63173 775.199 4.90831 774.922 cv
5.50835 776.058 6.15145 777.179 6.83553 778.279 cv
5.11749 780.254 3.96295 782.645 3.46883 785.187 cv
2.94743 785.321 2.42622 785.438 1.9026 785.539 cv
.384314 .788235 .764706 rgb
f
1.50015 792.195 mo
1.49895 791.832 1.5015 791.466 1.50787 791.102 cv
1.54073 789.22 1.67395 787.365 1.9026 785.539 cv
2.42622 785.438 2.94743 785.321 3.46883 785.187 cv
3.0499 787.341 3.10558 789.603 3.69573 791.809 cv
2.9654 791.963 2.23233 792.092 1.50015 792.195 cv
.262745 .780392 .74902 rgb
f
36.4168 789.783 mo
35.1931 789.255 33.9859 788.669 32.8035 788.026 cv
32.8086 785.92 32.3623 783.78 31.4136 781.745 cv
30.1238 778.979 28.0873 776.799 25.657 775.333 cv
26.2418 774.238 26.7633 773.112 27.2196 771.959 cv
30.4136 773.791 33.0923 776.591 34.7666 780.182 cv
36.2166 783.291 36.7279 786.598 36.4168 789.783 cv
19.3661 773.261 mo
18.9103 773.218 18.4514 773.196 17.9909 773.196 cv
17.5926 773.196 17.1926 773.213 16.7928 773.245 cv
16.7018 773.106 16.6122 772.967 16.5229 772.827 cv
17.1238 771.685 17.7766 770.576 18.4781 769.502 cv
19.3596 769.525 20.2358 769.612 21.0987 769.76 cv
20.61 770.966 20.0306 772.138 19.3661 773.261 cv
.498039 .807843 .784314 rgb
f
25.657 775.333 mo
23.7471 774.181 21.593 773.469 19.3661 773.261 cv
20.0306 772.138 20.61 770.966 21.0987 769.76 cv
23.2514 770.127 25.3257 770.873 27.2196 771.959 cv
26.7633 773.112 26.2418 774.238 25.657 775.333 cv
.247059 .788235 .752941 rgb
f
16.5229 772.827 mo
15.8891 771.831 15.298 770.815 14.7511 769.783 cv
15.829 769.59 16.9118 769.495 17.9877 769.495 cv
18.1515 769.495 18.3147 769.498 18.4781 769.502 cv
17.7766 770.576 17.1238 771.685 16.5229 772.827 cv
.384314 .788235 .764706 rgb
f
941.003 979.014 mo
932.526 979.014 924.265 976.842 916.972 972.849 cv
916.286 970.976 915.479 969.122 914.551 967.301 cv
909.809 957.994 902.554 950.809 894.033 946.149 cv
894.027 946.133 894.021 946.117 894.016 946.101 cv
890.56 936.608 890.16 926.745 892.312 917.595 cv
894.2 917.865 896.106 918 898.013 918 cv
899.549 918 901.086 917.912 902.616 917.736 cv
900.288 925.644 900.376 934.34 903.412 942.681 cv
909.324 958.924 924.665 969.011 941.004 969.011 cv
945.546 969.011 950.165 968.232 954.681 966.588 cv
961.744 964.017 967.643 959.664 972.055 954.22 cv
969.484 959.258 968.225 964.953 968.538 970.746 cv
965.343 972.85 961.853 974.619 958.101 975.984 cv
952.456 978.039 946.681 979.014 941.003 979.014 cv
975.238 965.456 mo
976.309 957.717 980.848 950.679 987.803 946.593 cv
985.128 953.701 980.851 960.18 975.238 965.456 cv
976.219 947.964 mo
981.434 938.27 982.649 926.477 978.588 915.319 cv
972.676 899.076 957.336 888.989 940.997 888.989 cv
939.467 888.989 937.929 889.077 936.389 889.257 cv
937.359 885.939 937.892 882.516 937.986 879.078 cv
938.991 879.017 939.996 878.986 940.997 878.986 cv
961.42 878.986 980.594 891.595 987.984 911.899 cv
991.186 920.696 991.765 929.805 990.121 938.375 cv
990.043 938.403 989.963 938.432 989.885 938.46 cv
984.383 940.462 979.751 943.795 976.219 947.964 cv
898.01 910 mo
896.943 910 895.877 909.947 894.816 909.841 cv
899.998 897.357 910.196 887.003 923.899 882.016 cv
925.893 881.29 927.905 880.698 929.922 880.238 cv
929.65 884.117 928.676 887.948 927.01 891.526 cv
918.006 894.886 910.918 901.156 906.429 908.877 cv
903.672 909.627 900.84 910 898.01 910 cv
.572549 .890196 .960784 rgb
f
898.013 918 mo
896.106 918 894.2 917.865 892.312 917.595 cv
892.936 914.941 893.775 912.349 894.816 909.841 cv
895.877 909.947 896.943 910 898.01 910 cv
900.84 910 903.672 909.627 906.429 908.877 cv
904.809 911.664 903.528 914.639 902.616 917.736 cv
901.086 917.912 899.549 918 898.013 918 cv
927.01 891.526 mo
928.676 887.948 929.65 884.117 929.922 880.238 cv
932.608 879.624 935.301 879.241 937.986 879.078 cv
937.892 882.516 937.359 885.939 936.389 889.257 cv
933.355 889.612 930.314 890.322 927.319 891.412 cv
927.215 891.45 927.113 891.488 927.01 891.526 cv
.321569 .831372 .886274 rgb
f
968.538 970.746 mo
968.225 964.953 969.484 959.258 972.055 954.22 cv
973.64 952.264 975.033 950.168 976.219 947.964 cv
979.751 943.795 984.383 940.462 989.885 938.46 cv
989.963 938.432 990.043 938.403 990.121 938.375 cv
989.582 941.182 988.805 943.932 987.803 946.593 cv
980.848 950.679 976.309 957.717 975.238 965.456 cv
973.18 967.39 970.942 969.164 968.538 970.746 cv
.392157 .870588 .941176 rgb
f
830.947 904.01 mo
806.917 904.01 785.333 887.259 780.137 862.812 cv
774.165 834.72 792.098 807.107 820.188 801.137 cv
823.832 800.362 827.472 799.99 831.053 799.99 cv
855.083 799.99 876.667 816.741 881.863 841.188 cv
881.876 841.248 881.889 841.311 881.902 841.371 cv
878.523 842.856 875.299 844.836 872.339 847.315 cv
872.188 845.998 871.973 844.674 871.691 843.351 cv
867.534 823.794 850.263 810.391 831.041 810.391 cv
828.174 810.391 825.267 810.689 822.35 811.309 cv
799.878 816.086 785.532 838.176 790.309 860.649 cv
794.466 880.206 811.737 893.608 830.959 893.609 cv
833.826 893.609 836.733 893.311 839.649 892.691 cv
846.835 891.164 853.191 887.865 858.356 883.351 cv
858.852 887.055 859.869 890.709 861.413 894.194 cv
855.726 898.298 849.112 901.311 841.811 902.863 cv
838.168 903.638 834.528 904.01 830.947 904.01 cv
867.837 888.71 mo
866.167 884.001 865.641 878.997 866.237 874.112 cv
869.033 869.656 870.992 864.669 871.946 859.409 cv
873.274 857.552 874.822 855.81 876.588 854.22 cv
878.568 852.437 880.709 850.947 882.959 849.747 cv
883.619 864.553 877.883 878.61 867.837 888.71 cv
.592157 .960784 .956863 rgb
f
861.413 894.194 mo
859.869 890.709 858.852 887.055 858.356 883.351 cv
861.43 880.663 864.082 877.546 866.237 874.112 cv
865.641 878.997 866.167 884.001 867.837 888.71 cv
865.857 890.701 863.712 892.536 861.413 894.194 cv
871.946 859.409 mo
872.656 855.494 872.81 851.429 872.339 847.315 cv
875.299 844.836 878.523 842.856 881.902 841.371 cv
882.488 844.175 882.835 846.974 882.959 849.747 cv
880.709 850.947 878.568 852.437 876.588 854.22 cv
874.822 855.81 873.274 857.552 871.946 859.409 cv
.341176 .901961 .882353 rgb
f
944.572 276.508 mo
943.426 275.37 942.447 274.022 941.698 272.488 cv
940.44 269.909 940 267.144 940.276 264.486 cv
944.062 265.488 947.998 266.012 951.99 266.012 cv
956.702 266.013 961.491 265.283 966.215 263.749 cv
967.3 263.396 968.363 263.007 969.403 262.583 cv
970.38 266.684 969.534 270.956 967.227 274.343 cv
965.17 274.111 963.107 273.995 961.047 273.995 cv
955.459 273.995 949.9 274.845 944.572 276.508 cv
939.524 276.139 mo
933.828 274.868 928.372 272.74 923.341 269.85 cv
922.774 264.337 920.698 258.911 917.034 254.222 cv
912.445 248.348 906.133 244.613 899.371 243.172 cv
898.604 241.424 897.917 239.623 897.314 237.769 cv
893.81 226.985 893.665 215.914 896.301 205.692 cv
905.107 199.792 912.072 191.004 915.602 180.142 cv
916.236 178.191 916.74 176.231 917.121 174.267 cv
922.142 170.437 927.885 167.376 934.232 165.314 cv
940.134 163.396 946.124 162.485 952.012 162.485 cv
953.624 162.485 955.232 162.553 956.826 162.688 cv
955.508 166.278 954.867 170.142 955.013 174.087 cv
954.016 174.021 953.015 173.988 952.009 173.988 cv
947.297 173.988 942.509 174.717 937.785 176.251 cv
913.623 184.102 900.4 210.053 908.251 234.215 cv
912.85 248.369 923.661 258.769 936.685 263.378 cv
936.174 266.921 936.685 270.65 938.372 274.11 cv
938.718 274.819 939.103 275.496 939.524 276.139 cv
971.666 274.033 mo
973.577 270.061 974.06 265.441 972.822 261.025 cv
992.708 250.963 1002.85 227.642 995.749 205.785 cv
995.28 204.34 994.746 202.935 994.151 201.571 cv
996.224 200.908 998.181 200.038 1000 198.989 cv
1000 251.662 li
993.418 261.654 983.693 269.665 971.666 274.033 cv
916.005 264.849 mo
911.189 260.991 906.963 256.335 903.552 250.994 cv
906.842 252.569 909.829 254.908 912.227 257.978 cv
913.893 260.11 915.149 262.432 916.005 264.849 cv
991.344 196.146 mo
984.604 185.007 973.497 177.407 961.07 174.895 cv
960.752 170.934 961.434 167.049 962.942 163.54 cv
977.931 166.458 991.415 175.294 1000 188.315 cv
1000 191.743 li
997.52 193.73 994.601 195.254 991.344 196.146 cv
.498039 .819608 .960784 rgb
f
943.446 276.873 mo
942.127 276.674 940.82 276.429 939.524 276.139 cv
939.103 275.496 938.718 274.819 938.372 274.11 cv
936.685 270.65 936.174 266.921 936.685 263.378 cv
937.864 263.795 939.063 264.166 940.276 264.486 cv
940 267.144 940.44 269.909 941.698 272.488 cv
942.447 274.022 943.426 275.37 944.572 276.508 cv
944.196 276.625 943.82 276.747 943.446 276.873 cv
969.758 274.689 mo
968.916 274.554 968.072 274.439 967.227 274.343 cv
969.534 270.956 970.38 266.684 969.403 262.583 cv
970.572 262.107 971.712 261.586 972.822 261.025 cv
974.06 265.441 973.577 270.061 971.666 274.033 cv
971.04 274.26 970.406 274.478 969.768 274.686 cv
969.765 274.687 969.762 274.688 969.758 274.689 cv
.301961 .8 .941176 rgb
f
896.301 205.692 mo
899.496 193.301 906.779 182.155 917.121 174.267 cv
916.74 176.231 916.236 178.191 915.602 180.142 cv
912.072 191.004 905.107 199.792 896.301 205.692 cv
.32549 .8 .941176 rgb
f
994.151 201.571 mo
993.328 199.682 992.388 197.871 991.344 196.146 cv
994.601 195.254 997.52 193.73 1000 191.743 cv
1000 198.989 li
998.181 200.038 996.224 200.908 994.151 201.571 cv
961.07 174.895 mo
959.081 174.493 957.058 174.222 955.013 174.087 cv
954.867 170.142 955.508 166.278 956.826 162.688 cv
958.886 162.862 960.927 163.148 962.942 163.54 cv
961.434 167.049 960.752 170.934 961.07 174.895 cv
.247059 .713725 .921569 rgb
f
0 251.662 mo
0 198.989 li
1.51905 198.114 2.94146 197.116 4.26176 196.009 cv
5.17745 198.01 5.98902 200.088 6.68559 202.231 cv
12.3069 219.532 9.28417 237.567 0 251.662 cv
0 191.743 mo
0 188.315 li
.480294 189.044 .943114 189.782 1.39214 190.536 cv
.944519 190.955 .481219 191.357 0 191.743 cv
.498039 .819608 .960784 rgb
f
0 198.989 mo
0 191.743 li
.481219 191.357 .944519 190.955 1.39214 190.536 cv
2.43766 192.293 3.39647 194.117 4.26176 196.009 cv
2.94146 197.116 1.51905 198.114 0 198.989 cv
.247059 .713725 .921569 rgb
f
519.521 368.107 mo
523.971 360.873 525.193 351.75 522.063 343.15 cv
519.227 335.356 513.374 329.531 506.304 326.511 cv
508.434 325.025 510.303 323.224 511.857 321.19 cv
519.462 325.216 525.655 331.965 528.829 340.687 cv
531.515 348.066 531.637 355.754 529.65 362.774 cv
526.713 364.984 523.384 366.777 519.721 368.039 cv
519.654 368.062 519.588 368.084 519.521 368.107 cv
472.027 335.625 mo
471.85 331.734 472.313 327.888 473.349 324.227 cv
473.637 324.01 473.931 323.796 474.227 323.587 cv
476.046 325.421 478.139 326.963 480.42 328.157 cv
477.093 330.104 474.265 332.66 472.027 335.625 cv
486.933 325.352 mo
483.857 324.544 481.024 323.013 478.671 320.912 cv
479.957 320.259 481.297 319.677 482.687 319.171 cv
486.75 317.692 490.91 316.99 494.997 316.99 cv
499.166 316.99 503.263 317.72 507.116 319.098 cv
505.083 321.448 502.493 323.339 499.492 324.547 cv
498.015 324.313 496.512 324.192 494.998 324.192 cv
492.322 324.192 489.612 324.567 486.933 325.352 cv
.498039 .894118 .960784 rgb
f
480.42 328.157 mo
478.139 326.963 476.046 325.421 474.227 323.587 cv
475.627 322.599 477.109 321.704 478.671 320.912 cv
481.024 323.013 483.857 324.544 486.933 325.352 cv
486.336 325.526 485.741 325.722 485.149 325.937 cv
483.48 326.545 481.901 327.291 480.42 328.157 cv
506.304 326.511 mo
504.131 325.583 501.844 324.921 499.492 324.547 cv
502.493 323.339 505.083 321.448 507.116 319.098 cv
508.744 319.681 510.329 320.381 511.857 321.19 cv
510.303 323.224 508.434 325.025 506.304 326.511 cv
.317647 .87451 .941176 rgb
f
495.003 389.01 mo
489.135 389.01 483.412 387.565 478.312 384.899 cv
478.597 382.113 478.579 379.271 478.234 376.419 cv
483.08 379.883 488.946 381.807 495.002 381.808 cv
498.273 381.808 501.598 381.247 504.851 380.063 cv
505.717 379.748 506.558 379.395 507.375 379.008 cv
507.582 379.011 507.79 379.012 507.997 379.012 cv
512.661 379.012 517.404 378.281 522.068 376.745 cv
518.206 381.155 513.21 384.682 507.312 386.829 cv
503.25 388.308 499.09 389.01 495.003 389.01 cv
470.778 379.643 mo
466.59 375.842 463.239 370.996 461.171 365.312 cv
460.162 362.54 459.515 359.725 459.205 356.917 cv
463.77 360.55 467.355 365.518 469.293 371.482 cv
470.172 374.19 470.657 376.931 470.778 379.643 cv
466.193 352.774 mo
464.107 350.841 461.821 349.153 459.38 347.733 cv
459.971 343.766 461.219 339.937 463.053 336.406 cv
463.273 340.482 464.056 344.599 465.451 348.65 cv
465.708 349.395 465.982 350.13 466.273 350.852 cv
466.225 351.49 466.198 352.13 466.193 352.774 cv
.498039 .894118 .960784 rgb
f
478.312 384.899 mo
475.599 383.481 473.064 381.718 470.778 379.643 cv
470.657 376.931 470.172 374.19 469.293 371.482 cv
467.355 365.518 463.77 360.55 459.205 356.917 cv
458.864 353.822 458.933 350.738 459.38 347.733 cv
461.821 349.153 464.107 350.841 466.193 352.774 cv
466.166 356.118 466.726 359.523 467.937 362.85 cv
470.002 368.524 473.666 373.155 478.234 376.419 cv
478.579 379.271 478.597 382.113 478.312 384.899 cv
.266667 .839216 .941176 rgb
f
959.021 383.971 mo
948.761 383.612 938.49 380.381 929.453 374.053 cv
904.571 356.631 898.523 322.336 915.946 297.453 cv
922.37 288.279 931.089 281.665 940.783 277.844 cv
944.329 282.107 949.587 284.504 955.014 284.504 cv
957.735 284.504 960.499 283.901 963.109 282.628 cv
966.669 280.892 969.422 278.164 971.198 274.94 cv
978.652 276.341 985.93 279.314 992.547 283.947 cv
995.256 285.844 997.743 287.942 1000 290.205 cv
1000 300.23 li
998.414 300.56 996.844 300.956 995.293 301.414 cv
992.75 298.256 989.726 295.4 986.237 292.957 cv
978.557 287.579 969.754 284.996 961.039 284.996 cv
957.151 284.996 953.281 285.51 949.536 286.519 cv
930.997 289.533 916.651 305.32 916.021 324.687 cv
915.032 327.95 914.5 331.413 914.5 335 cv
914.5 353.119 928.073 368.067 945.607 370.231 cv
948.616 371.357 951.71 372.135 954.826 372.574 cv
955.831 376.505 957.237 380.326 959.021 383.971 cv
971.901 382.909 mo
969.889 379.664 968.281 376.191 967.106 372.574 cv
978.772 370.937 989.753 364.648 997.043 354.237 cv
998.145 352.663 999.131 351.04 1000 349.382 cv
1000 367.794 li
992.176 375.679 982.336 380.8 971.901 382.909 cv
955.011 280.803 mo
951.423 280.803 947.926 279.493 945.22 277.113 cv
947.454 277.379 949.713 277.515 951.988 277.515 cv
956.677 277.515 961.433 276.937 966.155 275.732 cv
964.892 277.181 963.324 278.407 961.488 279.302 cv
959.399 280.321 957.189 280.803 955.011 280.803 cv
.54902 .960784 .960784 rgb
f
916.021 324.687 mo
916.651 305.32 930.997 289.533 949.536 286.519 cv
939.916 289.109 931.118 294.964 924.957 303.763 cv
921.508 308.688 919.209 314.075 918.003 319.604 cv
917.218 321.234 916.554 322.93 916.021 324.687 cv
.298039 .937255 .937255 rgb
f
955.014 284.504 mo
949.587 284.504 944.329 282.107 940.783 277.844 cv
941.662 277.498 942.552 277.173 943.446 276.873 cv
944.035 276.962 944.627 277.042 945.22 277.113 cv
947.926 279.493 951.423 280.803 955.011 280.803 cv
957.189 280.803 959.399 280.321 961.488 279.302 cv
963.324 278.407 964.892 277.181 966.155 275.732 cv
967.359 275.425 968.56 275.078 969.758 274.689 cv
970.238 274.766 970.719 274.85 971.198 274.94 cv
969.422 278.164 966.669 280.892 963.109 282.628 cv
960.499 283.901 957.735 284.504 955.014 284.504 cv
.34902 .941176 .941176 rgb
f
960.952 384.005 mo
960.31 384.005 959.664 383.993 959.021 383.971 cv
957.237 380.326 955.831 376.505 954.826 372.574 cv
956.866 372.861 958.916 373.004 960.961 373.004 cv
963.02 373.004 965.074 372.859 967.106 372.574 cv
968.281 376.191 969.889 379.664 971.901 382.909 cv
968.304 383.636 964.633 384.005 960.952 384.005 cv
1000 308.608 mo
998.683 306.085 997.111 303.671 995.293 301.414 cv
996.844 300.956 998.414 300.56 1000 300.23 cv
1000 308.608 li
.356863 .941176 .941176 rgb
f
951.988 277.515 mo
949.713 277.515 947.454 277.379 945.22 277.113 cv
944.998 276.918 944.783 276.717 944.572 276.508 cv
949.9 274.845 955.459 273.995 961.047 273.995 cv
963.107 273.995 965.17 274.111 967.227 274.343 cv
966.899 274.825 966.541 275.289 966.155 275.732 cv
961.433 276.937 956.677 277.515 951.988 277.515 cv
.298039 .870588 .941176 rgb
f
945.22 277.113 mo
944.627 277.042 944.035 276.962 943.446 276.873 cv
943.82 276.747 944.196 276.625 944.572 276.508 cv
944.783 276.717 944.998 276.918 945.22 277.113 cv
966.155 275.732 mo
966.541 275.289 966.899 274.825 967.227 274.343 cv
968.072 274.439 968.916 274.554 969.758 274.689 cv
968.56 275.078 967.359 275.425 966.155 275.732 cv
.2 .862745 .929412 rgb
f
0 367.794 mo
0 349.382 li
6.22011 337.517 6.52067 323.775 1.57406 311.963 cv
4.98699 311.188 8.49312 310.789 12.0306 310.789 cv
12.3217 310.789 12.6134 310.791 12.9048 310.797 cv
18.5495 326.937 16.6097 345.471 6.05324 360.547 cv
4.21353 363.174 2.18498 365.592 0 367.794 cv
0 300.23 mo
0 290.205 li
2.75765 292.971 5.17153 295.983 7.23349 299.183 cv
4.79731 299.383 2.38096 299.733 0 300.23 cv
.54902 .960784 .960784 rgb
f
1.57406 311.963 mo
1.09765 310.826 .573161 309.707 0 308.609 cv
0 300.23 li
2.38096 299.733 4.79731 299.383 7.23349 299.183 cv
9.59149 302.842 11.4872 306.743 12.9048 310.797 cv
12.6134 310.791 12.3217 310.789 12.0306 310.789 cv
8.49312 310.789 4.98699 311.188 1.57406 311.963 cv
.356863 .941176 .941176 rgb
f
173.963 406.002 mo
161.25 405.982 148.698 400.212 140.458 389.276 cv
140.21 388.947 139.968 388.617 139.732 388.284 cv
147.056 392.806 155.179 395.312 163.372 395.878 cv
166.808 397.02 170.409 397.602 174.025 397.602 cv
177.351 397.602 180.687 397.111 183.922 396.111 cv
182.27 399.002 180.039 401.627 177.253 403.804 cv
176.197 404.629 175.096 405.362 173.963 406.002 cv
186.331 404.161 mo
189.392 400.504 191.559 396.294 192.792 391.854 cv
192.992 391.719 193.189 391.583 193.387 391.443 cv
194.309 394.145 195.55 396.713 197.073 399.097 cv
193.677 401.334 190.058 403.017 186.331 404.161 cv
202.688 394.681 mo
201.108 392.068 199.942 389.192 199.268 386.157 cv
200.348 384.928 201.327 383.632 202.201 382.283 cv
204.044 380.584 205.788 378.73 207.412 376.725 cv
211.182 372.068 214.015 366.961 215.937 361.625 cv
216.613 373.75 212.027 385.969 202.688 394.681 cv
143.65 378.431 mo
142.686 377.776 141.742 377.076 140.82 376.329 cv
139.361 375.148 138.003 373.888 136.746 372.56 cv
137.688 370.366 138.936 368.284 140.48 366.38 cv
140.769 370.492 141.815 374.582 143.65 378.431 cv
132.218 366.84 mo
132.171 366.769 132.124 366.697 132.078 366.626 cv
131.238 353.023 137.025 339.273 148.724 330.458 cv
156.294 324.753 165.168 321.998 173.968 321.998 cv
186.705 321.998 199.287 327.769 207.542 338.724 cv
207.835 339.113 208.12 339.504 208.397 339.899 cv
208.726 343.216 208.658 346.575 208.187 349.895 cv
207.207 350.508 206.259 351.167 205.344 351.871 cv
204.248 349.045 202.749 346.32 200.834 343.779 cv
194.231 335.016 184.163 330.398 173.975 330.398 cv
166.933 330.398 159.836 332.602 153.779 337.166 cv
147.171 342.145 142.921 349.094 141.229 356.578 cv
141.046 356.715 140.865 356.854 140.683 356.996 cv
137.127 359.774 134.295 363.136 132.218 366.84 cv
.67451 .960784 .960784 rgb
f
174.032 406.002 mo
174.009 406.002 173.986 406.002 173.963 406.002 cv
175.096 405.362 176.197 404.629 177.253 403.804 cv
180.039 401.627 182.27 399.002 183.922 396.111 cv
187.006 395.159 189.996 393.744 192.792 391.854 cv
191.559 396.294 189.392 400.504 186.331 404.161 cv
182.309 405.396 178.163 406.002 174.032 406.002 cv
136.746 372.56 mo
135.05 370.768 133.539 368.851 132.218 366.84 cv
134.295 363.136 137.127 359.774 140.683 356.996 cv
140.865 356.854 141.046 356.715 141.229 356.578 cv
140.504 359.785 140.25 363.089 140.48 366.38 cv
138.936 368.284 137.688 370.366 136.746 372.56 cv
.423529 .878431 .941176 rgb
f
163.372 395.878 mo
155.179 395.312 147.056 392.806 139.732 388.284 cv
137.707 385.429 136.087 382.401 134.864 379.273 cv
135.192 376.972 135.822 374.713 136.746 372.56 cv
138.003 373.888 139.361 375.148 140.82 376.329 cv
141.742 377.076 142.686 377.776 143.65 378.431 cv
144.606 380.437 145.777 382.378 147.166 384.221 cv
151.425 389.874 157.128 393.802 163.372 395.878 cv
202.201 382.283 mo
206.582 375.524 208.358 367.419 207.308 359.534 cv
209.529 357.4 212.087 355.634 214.878 354.313 cv
215.449 356.727 215.801 359.174 215.937 361.625 cv
214.015 366.961 211.182 372.068 207.412 376.725 cv
205.788 378.73 204.044 380.584 202.201 382.283 cv
132.105 367.042 mo
132.095 366.904 132.086 366.764 132.078 366.626 cv
132.124 366.697 132.171 366.769 132.218 366.84 cv
132.18 366.907 132.142 366.975 132.105 367.042 cv
208.187 349.895 mo
208.658 346.575 208.726 343.216 208.397 339.899 cv
210.105 342.333 211.519 344.89 212.645 347.527 cv
211.101 348.211 209.612 349.003 208.187 349.895 cv
.423529 .843137 .929412 rgb
f
134.864 379.273 mo
133.315 375.31 132.402 371.186 132.105 367.042 cv
132.142 366.975 132.18 366.907 132.218 366.84 cv
133.539 368.851 135.05 370.768 136.746 372.56 cv
135.822 374.713 135.192 376.972 134.864 379.273 cv
.301961 .8 .921569 rgb
f
197.073 399.097 mo
195.55 396.713 194.309 394.145 193.387 391.443 cv
193.667 391.245 193.945 391.042 194.221 390.834 cv
196.094 389.422 197.778 387.853 199.268 386.157 cv
199.942 389.192 201.108 392.068 202.688 394.681 cv
201.613 395.683 200.476 396.639 199.276 397.543 cv
198.554 398.087 197.818 398.606 197.073 399.097 cv
206.73 356.368 mo
206.377 354.849 205.916 353.347 205.344 351.871 cv
206.259 351.167 207.207 350.508 208.187 349.895 cv
207.876 352.077 207.392 354.24 206.73 356.368 cv
.423529 .92549 .917647 rgb
f
207.308 359.534 mo
207.167 358.473 206.974 357.417 206.73 356.368 cv
207.392 354.24 207.876 352.077 208.187 349.895 cv
209.612 349.003 211.101 348.211 212.645 347.527 cv
213.591 349.741 214.334 352.012 214.878 354.313 cv
212.087 355.634 209.529 357.4 207.308 359.534 cv
.301961 .866667 .901961 rgb
f
853.322 37.137 mo
841.664 33.0148 831.507 24.5874 825.449 12.6997 cv
825.419 12.6397 825.388 12.5795 825.358 12.5194 cv
827.338 8.62853 828.799 4.42479 829.648 0 cv
830.539 0 li
830.828 .169873 831.115 .343184 831.399 .518957 cv
832.108 3.11174 833.091 5.6704 834.359 8.15967 cv
838.192 15.6815 844.077 21.4713 850.985 25.1954 cv
852.271 29.0052 853.071 33.0159 853.322 37.137 cv
.498039 .721569 .882353 rgb
f
825.358 12.5194 mo
823.31 8.46025 821.867 4.25174 820.997 0 cv
829.648 0 li
828.799 4.42479 827.338 8.62853 825.358 12.5194 cv
.321569 .701961 .862745 rgb
f
870.04 40.0107 mo
868.355 40.0107 866.675 39.925 865.008 39.7564 cv
864.998 36.2958 864.677 32.8858 864.069 29.5609 cv
866.036 29.8576 868.028 30.0084 870.032 30.0084 cv
876.142 30.0086 882.342 28.6041 888.159 25.6401 cv
898.789 20.2239 905.961 10.7082 908.73 0 cv
918.992 0 li
916.044 14.3938 906.808 27.3614 892.699 34.5502 cv
885.429 38.2545 877.675 40.0107 870.04 40.0107 cv
.498039 .721569 .882353 rgb
f
830.54 1000 mo
829.648 1000 li
829.677 999.846 829.706 999.69 829.734 999.536 cv
830.005 999.688 830.273 999.843 830.54 1000 cv
820.502 997.163 mo
820.424 996.623 820.354 996.08 820.294 995.539 cv
820.434 995.581 820.576 995.624 820.715 995.667 cv
820.654 996.168 820.583 996.668 820.502 997.163 cv
f
829.648 1000 mo
820.997 1000 li
820.804 999.055 820.639 998.111 820.502 997.163 cv
820.583 996.668 820.654 996.168 820.715 995.667 cv
823.897 996.647 826.913 997.951 829.734 999.536 cv
829.706 999.69 829.677 999.846 829.648 1000 cv
.321569 .701961 .862745 rgb
f
918.992 1000 mo
908.73 1000 li
911.089 990.88 910.254 980.894 905.641 971.841 cv
901.375 963.468 894.565 957.241 886.633 953.621 cv
888.53 950.87 889.928 947.779 890.728 944.497 cv
891.849 945.006 892.951 945.557 894.033 946.149 cv
898.361 958.003 906.707 967.229 916.972 972.849 cv
920.241 981.766 920.804 991.151 918.992 1000 cv
830.218 985.783 mo
829.542 979.598 827.676 973.762 824.85 968.513 cv
828.16 961.545 833.095 955.299 839.45 950.407 cv
840.986 953.451 843.056 956.135 845.513 958.362 cv
836.735 965.139 831.356 975.147 830.218 985.783 cv
850.279 955.198 mo
847.656 953.108 845.498 950.412 844.04 947.264 cv
845.096 946.625 846.183 946.018 847.301 945.449 cv
854.571 941.745 862.323 939.989 869.959 939.989 cv
875.278 939.989 880.539 940.84 885.545 942.478 cv
884.845 945.835 883.37 948.963 881.276 951.622 cv
877.623 950.548 873.812 949.991 869.967 949.991 cv
863.857 949.991 857.658 951.395 851.841 954.359 cv
851.312 954.629 850.791 954.909 850.279 955.198 cv
.498039 .721569 .882353 rgb
f
845.513 958.362 mo
843.056 956.135 840.986 953.451 839.45 950.407 cv
840.906 949.286 842.437 948.236 844.04 947.264 cv
845.498 950.412 847.656 953.108 850.279 955.198 cv
848.595 956.151 847.005 957.21 845.513 958.362 cv
886.633 953.621 mo
884.896 952.828 883.106 952.16 881.276 951.622 cv
883.37 948.963 884.845 945.835 885.545 942.478 cv
887.307 943.054 889.038 943.728 890.728 944.497 cv
889.928 947.779 888.53 950.87 886.633 953.621 cv
.368627 .701961 .862745 rgb
f
830.123 986.793 mo
827.03 985.451 823.787 984.367 820.411 983.569 cv
821.093 978.346 822.593 973.263 824.85 968.513 cv
827.676 973.762 829.542 979.598 830.218 985.783 cv
830.182 986.12 830.15 986.455 830.123 986.793 cv
.321569 .701961 .862745 rgb
f
916.972 972.849 mo
906.707 967.229 898.361 958.003 894.033 946.149 cv
902.554 950.809 909.809 957.994 914.551 967.301 cv
915.479 969.122 916.286 970.976 916.972 972.849 cv
.286274 .666667 .862745 rgb
f
548.99 413.001 mo
545.674 413.001 542.338 411.907 539.561 409.657 cv
533.122 404.443 532.129 394.998 537.343 388.56 cv
538.089 387.638 538.923 386.828 539.822 386.132 cv
539.949 387.333 540.112 388.529 540.313 389.72 cv
540.092 389.952 539.879 390.195 539.674 390.448 cv
535.504 395.599 536.298 403.155 541.448 407.326 cv
543.315 408.838 545.497 409.697 547.72 409.933 cv
548.336 410.967 548.985 411.986 549.667 412.985 cv
549.442 412.996 549.216 413.001 548.99 413.001 cv
560.345 407.813 mo
559.723 406.971 559.133 406.113 558.572 405.237 cv
562.462 400.098 561.598 392.761 556.552 388.674 cv
555.063 387.469 553.374 386.679 551.624 386.288 cv
551.484 385.255 551.378 384.217 551.306 383.176 cv
553.839 383.567 556.304 384.614 558.439 386.343 cv
564.878 391.556 565.871 401.002 560.657 407.439 cv
560.555 407.566 560.451 407.69 560.345 407.813 cv
.501961 .960784 .960784 rgb
f
60.9813 560.006 mo
49.7733 560.006 39.5768 552.415 36.7427 541.048 cv
33.4022 527.651 41.5552 514.083 54.9521 510.742 cv
56.9824 510.236 59.0167 509.994 61.0187 509.994 cv
72.2267 509.994 82.4232 517.585 85.2573 528.952 cv
88.5978 542.348 80.4448 555.917 67.0479 559.258 cv
65.0176 559.764 62.9833 560.006 60.9813 560.006 cv
61.0148 514.995 mo
59.4125 514.995 57.7864 515.189 56.1615 515.594 cv
45.4439 518.266 38.922 529.121 41.5943 539.839 cv
43.861 548.931 52.0193 555.004 60.9852 555.005 cv
62.5874 555.005 64.2136 554.811 65.8385 554.406 cv
76.5561 551.733 83.078 540.879 80.4057 530.161 cv
78.139 521.069 69.9805 514.995 61.0148 514.995 cv
.572549 .960784 .960784 rgb
f
743.981 512.502 mo
738.637 512.502 733.25 510.829 728.653 507.365 cv
717.406 498.89 715.159 482.901 723.635 471.653 cv
728.646 465.003 736.287 461.498 744.019 461.498 cv
749.363 461.498 754.75 463.171 759.346 466.635 cv
770.594 475.11 772.841 491.099 764.365 502.347 cv
759.354 508.997 751.713 512.502 743.981 512.502 cv
744.015 466.599 mo
737.829 466.599 731.718 469.401 727.708 474.723 cv
720.928 483.721 722.724 496.512 731.723 503.292 cv
735.399 506.063 739.71 507.401 743.985 507.401 cv
750.171 507.401 756.282 504.599 760.292 499.277 cv
767.072 490.279 765.275 477.488 756.277 470.708 cv
752.6 467.937 748.29 466.599 744.015 466.599 cv
.72549 .960784 .960784 rgb
f
519.961 734.502 mo
499.919 734.502 483.013 718.984 481.594 698.685 cv
480.11 677.475 496.104 659.077 517.314 657.594 cv
518.227 657.53 519.138 657.498 520.039 657.498 cv
540.081 657.498 556.987 673.016 558.406 693.315 cv
559.89 714.525 543.897 732.923 522.686 734.406 cv
521.773 734.47 520.862 734.502 519.961 734.502 cv
520.032 665.199 mo
519.31 665.199 518.583 665.224 517.852 665.275 cv
500.883 666.462 488.089 681.18 489.275 698.148 cv
490.411 714.386 503.937 726.801 519.969 726.801 cv
520.69 726.801 521.417 726.776 522.148 726.725 cv
539.117 725.538 551.911 710.82 550.724 693.852 cv
549.589 677.614 536.063 665.199 520.032 665.199 cv
.498039 .698039 .8 rgb
f
400.018 161.003 mo
393.451 161.003 387.065 157.596 383.546 151.5 cv
378.299 142.413 381.412 130.792 390.5 125.545 cv
393.492 123.818 396.759 122.997 399.982 122.997 cv
406.549 122.997 412.935 126.404 416.454 132.5 cv
421.701 141.587 418.588 153.208 409.5 158.455 cv
406.508 160.182 403.241 161.003 400.018 161.003 cv
399.986 126.797 mo
397.407 126.797 394.794 127.454 392.4 128.836 cv
385.13 133.034 382.639 142.33 386.836 149.6 cv
389.652 154.476 394.761 157.202 400.014 157.202 cv
402.593 157.203 405.206 156.546 407.6 155.164 cv
414.87 150.966 417.361 141.67 413.164 134.4 cv
410.348 129.524 405.239 126.797 399.986 126.797 cv
.498039 .835294 .878431 rgb
f
583.568 787.457 mo
582.939 787.417 582.308 787.349 581.675 787.254 cv
581.494 785.775 581.629 784.244 582.113 782.768 cv
582.351 782.807 582.589 782.841 582.826 782.87 cv
583.005 784.414 583.252 785.942 583.568 787.457 cv
579.016 786.69 mo
578.963 786.675 578.908 786.66 578.855 786.645 cv
577.704 784.286 576.379 782.034 574.897 779.903 cv
576.309 780.861 577.879 781.63 579.576 782.165 cv
579.114 783.655 578.935 785.187 579.016 786.69 cv
593.734 785.737 mo
593.403 784.219 593.157 782.679 592.999 781.125 cv
594.847 780.208 596.533 778.976 597.971 777.484 cv
599.247 778.375 600.272 779.518 601.014 780.81 cv
598.932 782.914 596.453 784.589 593.734 785.737 cv
602.804 778.766 mo
601.968 777.515 600.906 776.397 599.64 775.48 cv
600.984 773.604 601.988 771.437 602.539 769.049 cv
603.761 763.755 602.512 758.468 599.546 754.396 cv
600.406 753.082 601.334 751.829 602.323 750.64 cv
606.64 755.856 608.564 762.954 606.924 770.062 cv
606.168 773.334 604.734 776.274 602.804 778.766 cv
568.647 772.524 mo
566.773 770.695 564.763 769.012 562.632 767.49 cv
562.358 765.031 562.488 762.485 563.076 759.938 cv
565.479 749.534 574.739 742.495 584.979 742.495 cv
586.346 742.495 587.729 742.62 589.116 742.88 cv
590.302 744.001 591.587 745.005 592.951 745.879 cv
592.393 746.616 591.851 747.374 591.329 748.147 cv
590.595 747.872 589.834 747.642 589.049 747.461 cv
587.687 747.146 586.325 746.996 584.984 746.996 cv
576.792 746.996 569.383 752.627 567.461 760.951 cv
566.528 764.992 567.035 769.029 568.647 772.524 cv
.498039 .854902 .784314 rgb
f
581.675 787.254 mo
581.097 787.167 580.518 787.057 579.938 786.923 cv
579.628 786.851 579.32 786.773 579.016 786.69 cv
578.935 785.187 579.114 783.655 579.576 782.165 cv
580.026 782.306 580.484 782.431 580.951 782.539 cv
581.339 782.629 581.726 782.705 582.113 782.768 cv
581.629 784.244 581.494 785.775 581.675 787.254 cv
601.014 780.81 mo
600.272 779.518 599.247 778.375 597.971 777.484 cv
598.573 776.86 599.131 776.191 599.64 775.48 cv
600.906 776.397 601.968 777.515 602.804 778.766 cv
602.247 779.485 601.649 780.168 601.014 780.81 cv
.247059 .717647 .745098 rgb
f
585.021 787.505 mo
584.538 787.505 584.054 787.489 583.568 787.457 cv
583.252 785.942 583.005 784.414 582.826 782.87 cv
583.56 782.96 584.291 783.004 585.016 783.004 cv
587.834 783.004 590.558 782.338 592.999 781.125 cv
593.157 782.679 593.403 784.219 593.734 785.737 cv
591.019 786.884 588.063 787.505 585.021 787.505 cv
599.546 754.396 mo
597.525 751.621 594.705 749.41 591.329 748.147 cv
591.851 747.374 592.393 746.616 592.951 745.879 cv
595.463 747.49 598.241 748.664 601.158 749.339 cv
601.564 749.758 601.952 750.192 602.323 750.64 cv
601.334 751.829 600.406 753.082 599.546 754.396 cv
.247059 .752941 .694118 rgb
f
720.985 453.502 mo
718.355 453.502 715.691 452.833 713.25 451.424 cv
705.837 447.144 703.297 437.663 707.576 430.25 cv
710.447 425.278 715.658 422.498 721.015 422.498 cv
723.645 422.498 726.309 423.167 728.75 424.576 cv
736.163 428.856 738.703 438.337 734.424 445.75 cv
731.553 450.722 726.341 453.502 720.985 453.502 cv
721.011 425.598 mo
716.726 425.598 712.558 427.822 710.262 431.8 cv
706.837 437.73 708.869 445.314 714.8 448.738 cv
716.752 449.866 718.885 450.402 720.989 450.402 cv
725.274 450.402 729.442 448.178 731.738 444.2 cv
735.163 438.27 733.131 430.686 727.2 427.262 cv
725.248 426.134 723.115 425.598 721.011 425.598 cv
.737255 .960784 .960784 rgb
f
161.016 551.001 mo
150.955 551.001 140.95 546.807 133.831 538.618 cv
120.787 523.613 122.376 500.874 137.382 487.83 cv
144.198 481.905 152.611 478.999 160.984 478.999 cv
171.045 478.999 181.05 483.192 188.169 491.382 cv
201.213 506.387 199.624 529.126 184.618 542.17 cv
177.802 548.095 169.389 551.001 161.016 551.001 cv
160.988 486.2 mo
154.288 486.2 147.559 488.524 142.105 493.265 cv
130.101 503.699 128.829 521.891 139.264 533.895 cv
144.959 540.445 152.964 543.8 161.012 543.8 cv
167.712 543.8 174.441 541.476 179.895 536.735 cv
191.899 526.301 193.171 508.109 182.736 496.106 cv
177.041 489.555 169.036 486.2 160.988 486.2 cv
.529412 .933333 .905882 rgb
f
308.001 896 mo
305.383 896 302.769 894.978 300.807 892.946 cv
300.024 892.135 299.405 891.226 298.95 890.26 cv
299.09 887.685 298.992 885.076 298.643 882.466 cv
299.149 881.123 299.953 879.869 301.053 878.807 cv
302.994 876.932 305.498 876 307.998 876 cv
310.616 876 313.231 877.022 315.193 879.054 cv
319.03 883.026 318.919 889.357 314.946 893.193 cv
313.005 895.068 310.502 896 308.001 896 cv
307.999 878 mo
305.999 878 303.996 878.745 302.443 880.245 cv
299.265 883.314 299.176 888.379 302.245 891.558 cv
303.815 893.183 305.907 894 308.001 894 cv
310.002 894 312.005 893.254 313.557 891.755 cv
316.735 888.685 316.824 883.621 313.755 880.442 cv
312.185 878.817 310.093 878 307.999 878 cv
.611765 .960784 .960784 rgb
f
710.992 250.002 mo
709.373 250.002 707.73 249.644 706.178 248.887 cv
700.718 246.224 698.45 239.638 701.113 234.178 cv
703.019 230.27 706.934 227.998 711.008 227.998 cv
712.627 227.998 714.27 228.356 715.822 229.113 cv
721.282 231.776 723.55 238.362 720.887 243.822 cv
718.981 247.73 715.066 250.002 710.992 250.002 cv
711.006 230.198 mo
707.747 230.198 704.615 232.016 703.091 235.143 cv
700.96 239.511 702.774 244.779 707.142 246.909 cv
708.384 247.515 709.699 247.802 710.994 247.802 cv
714.253 247.802 717.385 245.984 718.909 242.857 cv
721.04 238.489 719.225 233.221 714.857 231.091 cv
713.616 230.485 712.3 230.198 711.006 230.198 cv
.592157 .960784 .960784 rgb
f
363.978 502.504 mo
359.991 502.504 355.951 501.488 352.25 499.352 cv
341.01 492.862 337.159 478.49 343.648 467.25 cv
348.001 459.711 355.9 455.496 364.022 455.496 cv
368.009 455.496 372.049 456.512 375.75 458.648 cv
386.99 465.138 390.841 479.51 384.352 490.75 cv
379.999 498.289 372.1 502.504 363.978 502.504 cv
364.018 460.197 mo
357.52 460.197 351.201 463.568 347.719 469.6 cv
342.527 478.592 345.609 490.09 354.6 495.281 cv
357.56 496.99 360.793 497.803 363.982 497.803 cv
370.48 497.803 376.799 494.432 380.281 488.4 cv
385.473 479.408 382.392 467.91 373.4 462.719 cv
370.44 461.009 367.207 460.197 364.018 460.197 cv
.52549 .960784 .960784 rgb
f
53.9938 804.5 mo
46.5311 804.5 39.0657 803.005 32.0814 800.005 cv
34.5416 797.116 36.0502 793.534 36.4168 789.783 cv
42.0174 792.197 48.0086 793.4 53.9954 793.4 cv
61.2362 793.4 68.4694 791.64 75.0022 788.132 cv
74.2817 792.291 74.3418 796.418 75.0812 800.355 cv
68.3464 803.116 61.1722 804.5 53.9938 804.5 cv
81.5762 797.181 mo
81.2402 794.28 81.3623 791.276 82.0029 788.262 cv
82.5337 785.765 83.3864 783.419 84.5089 781.259 cv
84.993 780.8 85.4707 780.327 85.9385 779.843 cv
87.5604 778.163 89.0227 776.39 90.3272 774.539 cv
92.2108 778.557 93.4631 782.926 93.9599 787.516 cv
93.9482 787.528 93.9351 787.542 93.9234 787.554 cv
90.1858 791.424 86.0213 794.634 81.5762 797.181 cv
102.161 776.609 mo
101.265 773.745 100.126 770.99 98.7669 768.364 cv
101.272 767.361 103.937 766.72 106.686 766.49 cv
105.533 769.972 104.025 773.363 102.161 776.609 cv
4.60707 774.343 mo
2.55449 770.343 1.01827 766.145 0 761.846 cv
0 736.567 li
2.47755 737.838 5.23 738.503 8.01614 738.503 cv
8.9806 738.503 9.94874 738.423 10.9109 738.261 cv
9.00453 745.939 9.17955 754.017 11.4198 761.608 cv
8.58794 765.475 6.28085 769.755 4.60707 774.343 cv
96.5142 761.834 mo
101.155 746.419 97.2206 729.015 84.8428 717.062 cv
76.2256 708.74 65.1072 704.6 54.0047 704.6 cv
43.5056 704.6 33.0217 708.299 24.6704 715.663 cv
24.2659 714.404 23.7114 713.171 23.0005 711.987 cv
21.7031 709.828 20.0138 708.049 18.0781 706.688 cv
28.3916 697.911 41.1928 693.5 54.0063 693.5 cv
67.8862 693.5 81.7808 698.673 92.5538 709.076 cv
106.556 722.599 111.913 741.705 108.505 759.496 cv
104.335 759.552 100.283 760.367 96.5142 761.834 cv
13.0745 731.751 mo
9.83541 729.912 6.29429 728.634 2.61639 727.985 cv
5.20823 721.643 9.02647 715.676 14.0767 710.446 cv
14.5133 709.994 14.9573 709.55 15.4054 709.115 cv
17.2288 710.25 18.8184 711.822 20.0004 713.789 cv
20.8913 715.272 21.4756 716.854 21.7716 718.46 cv
17.9907 722.449 15.0917 726.963 13.0745 731.751 cv
.72549 .960784 .960784 rgb
f
8.01302 735.002 mo
5.49334 735.002 3.00656 734.321 .834985 733.031 cv
1.34512 731.327 1.93875 729.643 2.61639 727.985 cv
6.29429 728.634 9.83541 729.912 13.0745 731.751 cv
12.7057 732.627 12.3672 733.51 12.0571 734.402 cv
10.7285 734.806 9.36612 735.002 8.01302 735.002 cv
.47451 .941176 .929412 rgb
f
8.01614 738.503 mo
5.23 738.503 2.47755 737.838 0 736.567 cv
0 736.146 li
.152051 735.505 .314992 734.868 .4902 734.231 cv
4.21762 734.74 7.7939 736.052 10.9604 738.063 cv
10.9439 738.128 10.927 738.196 10.9109 738.261 cv
9.94874 738.423 8.9806 738.503 8.01614 738.503 cv
.47451 .847059 .905882 rgb
f
21.7716 718.46 mo
21.4756 716.854 20.8913 715.272 20.0004 713.789 cv
18.8184 711.822 17.2288 710.25 15.4054 709.115 cv
16.2762 708.272 17.1667 707.463 18.0781 706.688 cv
20.0138 708.049 21.7031 709.828 23.0005 711.987 cv
23.7114 713.171 24.2659 714.404 24.6704 715.663 cv
23.7756 716.452 22.9047 717.284 22.0616 718.157 cv
21.9638 718.258 21.8681 718.359 21.7716 718.46 cv
f
10.9604 738.063 mo
7.7939 736.052 4.21762 734.74 .4902 734.231 cv
.600517 733.83 .715485 733.43 .834985 733.031 cv
3.00656 734.321 5.49334 735.002 8.01302 735.002 cv
9.36612 735.002 10.7285 734.806 12.0571 734.402 cv
11.6379 735.61 11.2722 736.831 10.9604 738.063 cv
.34902 .835294 .890196 rgb
f
4.90831 774.922 mo
4.80637 774.729 4.70658 774.537 4.60707 774.343 cv
6.28085 769.755 8.58794 765.475 11.4198 761.608 cv
12.2481 764.415 13.3588 767.155 14.7511 769.783 cv
13.2065 770.059 11.6708 770.539 10.1815 771.233 cv
8.16375 772.174 6.39537 773.433 4.90831 774.922 cv
.611765 .941176 .941176 rgb
f
93.9599 787.516 mo
93.4631 782.926 92.2108 778.557 90.3272 774.539 cv
90.7955 773.875 91.2438 773.2 91.6712 772.517 cv
93.8133 770.791 96.2064 769.388 98.7669 768.364 cv
100.126 770.99 101.265 773.745 102.161 776.609 cv
99.9351 780.485 97.2026 784.152 93.9599 787.516 cv
f
98.7669 768.364 mo
97.9131 766.714 96.972 765.115 95.9507 763.575 cv
96.1508 762.998 96.3386 762.417 96.5142 761.834 cv
100.283 760.367 104.335 759.552 108.505 759.496 cv
108.053 761.855 107.446 764.192 106.686 766.49 cv
103.937 766.72 101.272 767.361 98.7669 768.364 cv
.47451 .87451 .909804 rgb
f
75.0812 800.355 mo
74.3418 796.418 74.2817 792.291 75.0022 788.132 cv
78.3937 786.311 81.5935 784.021 84.5089 781.259 cv
83.3864 783.419 82.5337 785.765 82.0029 788.262 cv
81.3623 791.276 81.2402 794.28 81.5762 797.181 cv
79.4696 798.388 77.2985 799.446 75.0812 800.355 cv
f
91.6712 772.517 mo
93.4511 769.672 94.8778 766.669 95.9507 763.575 cv
96.972 765.115 97.9131 766.714 98.7669 768.364 cv
96.2064 769.388 93.8133 770.791 91.6712 772.517 cv
.419608 .862745 .901961 rgb
f
28.581 798.354 mo
23.8791 795.93 19.4473 792.787 15.4463 788.924 cv
15.0022 788.495 14.5653 788.059 14.1386 787.619 cv
17.3745 785.617 20.1632 783.103 22.4421 780.232 cv
22.6769 780.469 22.9162 780.706 23.1574 780.938 cv
26.1126 783.792 29.3618 786.154 32.8035 788.026 cv
32.7942 791.866 31.2842 795.591 28.581 798.354 cv
13.5586 780.054 mo
14.2686 777.706 15.183 775.445 16.2794 773.296 cv
16.4509 773.276 16.6214 773.259 16.7928 773.245 cv
17.2167 773.894 17.6607 774.537 18.1219 775.168 cv
16.8317 776.968 15.3031 778.615 13.5586 780.054 cv
.72549 .960784 .960784 rgb
f
14.1386 787.619 mo
13.5037 786.964 12.8881 786.298 12.2918 785.62 cv
12.5875 783.718 13.0128 781.859 13.5586 780.054 cv
15.3031 778.615 16.8317 776.968 18.1219 775.168 cv
19.416 776.938 20.8544 778.63 22.4421 780.232 cv
20.1632 783.103 17.3745 785.617 14.1386 787.619 cv
.47451 .941176 .929412 rgb
f
9.82972 782.617 mo
8.75499 781.209 7.75771 779.762 6.83553 778.279 cv
8.15466 776.762 9.80599 775.491 11.7452 774.587 cv
13.2192 773.899 14.7479 773.476 16.2794 773.296 cv
15.183 775.445 14.2686 777.706 13.5586 780.054 cv
12.4078 781.004 11.1627 781.863 9.82972 782.617 cv
.611765 .941176 .941176 rgb
f
12.2918 785.62 mo
11.4306 784.642 10.6104 783.64 9.82972 782.617 cv
11.1627 781.863 12.4078 781.004 13.5586 780.054 cv
13.0128 781.859 12.5875 783.718 12.2918 785.62 cv
.486274 .929412 .92549 rgb
f
32.0814 800.005 mo
30.9 799.498 29.7324 798.947 28.581 798.354 cv
31.2842 795.591 32.7942 791.866 32.8035 788.026 cv
33.9859 788.669 35.1931 789.255 36.4168 789.783 cv
36.0502 793.534 34.5416 797.116 32.0814 800.005 cv
16.2794 773.296 mo
16.3598 773.139 16.4405 772.983 16.5229 772.827 cv
16.6122 772.967 16.7018 773.106 16.7928 773.245 cv
16.6214 773.259 16.4509 773.276 16.2794 773.296 cv
.47451 .866667 .854902 rgb
f
6.83553 778.279 mo
6.15145 777.179 5.50835 776.058 4.90831 774.922 cv
6.39537 773.433 8.16375 772.174 10.1815 771.233 cv
11.6708 770.539 13.2065 770.059 14.7511 769.783 cv
15.298 770.815 15.8891 771.831 16.5229 772.827 cv
16.4405 772.983 16.3598 773.139 16.2794 773.296 cv
14.7479 773.476 13.2192 773.899 11.7452 774.587 cv
9.80599 775.491 8.15466 776.762 6.83553 778.279 cv
.419608 .854902 .843137 rgb
f
1000 761.846 mo
998.032 753.537 997.998 744.854 999.912 736.522 cv
999.941 736.537 999.971 736.552 1000 736.567 cv
1000 761.846 li
.72549 .960784 .960784 rgb
f
1000 736.567 mo
999.971 736.552 999.941 736.537 999.912 736.522 cv
999.941 736.396 999.97 736.271 1000 736.146 cv
1000 736.567 li
.47451 .847059 .905882 rgb
f
532.942 860.003 mo
525.839 860.003 519.024 858.528 512.816 855.847 cv
513.65 852.551 514.989 849.379 516.805 846.456 cv
521.784 848.615 527.253 849.802 532.953 849.802 cv
534.145 849.802 535.346 849.75 536.556 849.644 cv
547.269 848.707 556.651 843.71 563.319 836.302 cv
566.117 838.151 568.67 840.45 570.858 843.173 cv
562.525 852.408 550.813 858.636 537.445 859.806 cv
535.935 859.938 534.43 860.003 532.942 860.003 cv
505.321 851.839 mo
492.568 843.587 483.621 829.749 482.194 813.445 cv
479.739 785.386 500.496 760.649 528.555 758.194 cv
530.065 758.062 531.57 757.997 533.058 757.997 cv
543.984 757.997 554.233 761.489 562.632 767.49 cv
563.62 776.366 569.872 784.103 578.855 786.645 cv
578.917 786.771 578.978 786.898 579.039 787.025 cv
579.242 789.558 580.184 791.997 581.76 794.013 cv
582.791 797.381 583.487 800.905 583.806 804.555 cv
584.824 816.197 581.847 827.268 576.01 836.412 cv
573.674 833.78 571.053 831.502 568.225 829.594 cv
572.353 822.548 574.41 814.199 573.645 805.444 cv
571.786 784.206 553.971 768.198 533.047 768.198 cv
531.855 768.198 530.654 768.25 529.444 768.355 cv
506.996 770.319 490.392 790.108 492.356 812.556 cv
493.447 825.038 500.05 835.712 509.557 842.393 cv
507.746 845.368 506.329 848.543 505.321 851.839 cv
.698039 .960784 .960784 rgb
f
581.76 794.013 mo
580.184 791.997 579.242 789.558 579.039 787.025 cv
580.108 789.264 581.02 791.599 581.76 794.013 cv
.447059 .823529 .921569 rgb
f
512.816 855.847 mo
510.202 854.718 507.696 853.375 505.321 851.839 cv
506.329 848.543 507.746 845.368 509.557 842.393 cv
511.82 843.983 514.248 845.348 516.805 846.456 cv
514.989 849.379 513.65 852.551 512.816 855.847 cv
570.858 843.173 mo
568.67 840.45 566.117 838.151 563.319 836.302 cv
565.174 834.241 566.82 831.993 568.225 829.594 cv
571.053 831.502 573.674 833.78 576.01 836.412 cv
574.481 838.806 572.758 841.067 570.858 843.173 cv
.447059 .839216 .894118 rgb
f
574.897 779.903 mo
572.16 778.047 570.009 775.479 568.647 772.524 cv
570.951 774.774 573.046 777.244 574.897 779.903 cv
.698039 .960784 .960784 rgb
f
578.855 786.645 mo
569.872 784.103 563.62 776.366 562.632 767.49 cv
564.763 769.012 566.773 770.695 568.647 772.524 cv
570.009 775.479 572.16 778.047 574.897 779.903 cv
576.379 782.034 577.704 784.286 578.855 786.645 cv
.447059 .890196 .854902 rgb
f
719.448 304.372 mo
718.254 304.228 717.055 304.125 715.844 304.062 cv
714.226 301.502 713.535 298.449 713.889 295.447 cv
719.871 292.977 725.287 289.118 729.612 284.058 cv
731.198 284.377 732.751 284.995 734.189 285.93 cv
735.863 287.016 737.208 288.418 738.199 290.006 cv
733.062 296.271 726.608 301.133 719.448 304.372 cv
.596078 .960784 .917647 rgb
f
716.862 305.459 mo
716.49 305.013 716.15 304.547 715.844 304.062 cv
717.055 304.125 718.254 304.228 719.448 304.372 cv
718.595 304.757 717.734 305.119 716.862 305.459 cv
.368627 .905882 .894118 rgb
f
692.37 308.085 mo
693.83 304.967 694.969 301.777 695.8 298.553 cv
696.526 298.591 697.249 298.61 697.973 298.61 cv
702.248 298.61 706.472 297.948 710.501 296.678 cv
710.454 299.202 710.987 301.712 712.056 303.999 cv
708.965 304.057 705.836 304.382 702.696 304.992 cv
699.09 305.693 695.64 306.737 692.37 308.085 cv
681.108 306.184 mo
679.398 305.595 677.699 304.909 676.023 304.128 cv
652.195 293.016 640.743 266.144 648.292 241.711 cv
651.697 242.127 655.094 242.953 658.41 244.21 cv
652.02 263.905 661.174 285.728 680.419 294.702 cv
681.945 295.414 683.493 296.025 685.054 296.538 cv
684.283 299.339 683.218 302.104 681.848 304.794 cv
681.608 305.264 681.362 305.727 681.108 306.184 cv
740.312 287.244 mo
739.162 285.675 737.714 284.284 735.986 283.162 cv
734.665 282.304 733.267 281.659 731.832 281.219 cv
733.298 279.166 734.597 276.95 735.702 274.581 cv
745.412 253.758 736.403 229.007 715.581 219.298 cv
709.895 216.646 703.913 215.39 698.027 215.39 cv
684.202 215.39 670.895 222.313 663.107 234.341 cv
659.709 232.988 656.245 232.001 652.755 231.365 cv
662.184 214.679 679.748 204.988 698.034 204.988 cv
705.393 204.988 712.867 206.557 719.976 209.872 cv
746.004 222.009 757.265 252.948 745.128 278.976 cv
743.752 281.926 742.136 284.686 740.312 287.244 cv
.596078 .960784 .917647 rgb
f
697.966 309.012 mo
696.013 309.012 694.049 308.902 692.088 308.677 cv
692.184 308.479 692.277 308.283 692.37 308.085 cv
695.64 306.737 699.09 305.693 702.696 304.992 cv
705.836 304.382 708.965 304.057 712.056 303.999 cv
712.481 304.909 712.991 305.784 713.583 306.611 cv
708.561 308.19 703.294 309.012 697.966 309.012 cv
.368627 .905882 .894118 rgb
f
691.227 308.571 mo
687.831 308.124 684.444 307.335 681.108 306.184 cv
681.362 305.727 681.608 305.264 681.848 304.794 cv
683.218 302.104 684.283 299.339 685.054 296.538 cv
688.594 297.702 692.207 298.363 695.8 298.553 cv
694.969 301.777 693.83 304.967 692.37 308.085 cv
691.988 308.242 691.605 308.405 691.227 308.571 cv
658.41 244.21 mo
655.094 242.953 651.697 242.127 648.292 241.711 cv
648.989 239.456 649.847 237.223 650.872 235.024 cv
651.457 233.771 652.086 232.549 652.755 231.365 cv
656.245 232.001 659.709 232.988 663.107 234.341 cv
662.068 235.944 661.128 237.638 660.298 239.419 cv
659.562 240.996 658.934 242.596 658.41 244.21 cv
.364706 .941176 .898039 rgb
f
692.088 308.677 mo
691.801 308.644 691.514 308.609 691.227 308.571 cv
691.605 308.405 691.988 308.242 692.37 308.085 cv
692.277 308.283 692.184 308.479 692.088 308.677 cv
.25098 .913725 .886274 rgb
f
975.994 882 mo
973.272 882 970.535 881.079 968.286 879.192 cv
963.21 874.933 962.548 867.363 966.808 862.286 cv
969.181 859.458 972.582 858 976.006 858 cv
978.728 858 981.465 858.921 983.714 860.808 cv
988.79 865.067 989.452 872.637 985.192 877.714 cv
982.819 880.542 979.418 882 975.994 882 cv
976.005 860.4 mo
973.265 860.4 970.545 861.566 968.646 863.829 cv
965.238 867.891 965.767 873.946 969.829 877.354 cv
971.628 878.863 973.817 879.6 975.995 879.6 cv
978.735 879.6 981.455 878.434 983.353 876.171 cv
986.762 872.109 986.232 866.054 982.171 862.645 cv
980.372 861.137 978.182 860.4 976.005 860.4 cv
.635294 .952941 .960784 rgb
f
440.039 662.603 mo
431.502 662.603 423.034 660.314 415.61 655.89 cv
415.515 655.782 415.416 655.669 415.322 655.559 cv
416.521 649.046 416.129 642.488 414.36 636.368 cv
415.073 636.002 415.772 635.625 416.463 635.232 cv
422.091 648.692 433.301 658.231 446.346 662.184 cv
444.249 662.464 442.142 662.603 440.039 662.603 cv
409.89 626.18 mo
407.535 622.302 404.543 618.785 400.996 615.811 cv
401.232 604.3 404.854 593.157 411.246 583.763 cv
412.585 588.576 414.63 593.024 417.241 597.013 cv
413.358 605.322 411.885 614.747 413.334 624.145 cv
412.226 624.869 411.078 625.548 409.89 626.18 cv
422.906 587.801 mo
421.64 585.226 420.647 582.465 419.974 579.548 cv
419.577 577.832 419.304 576.116 419.148 574.409 cv
420.739 572.883 422.421 571.44 424.194 570.088 cv
425.91 569.483 427.646 568.982 429.4 568.583 cv
430.886 571.84 431.945 575.184 432.6 578.553 cv
428.895 581.189 425.646 584.313 422.906 587.801 cv
442.733 573.071 mo
442.238 571.169 441.638 569.28 440.929 567.406 cv
445.896 567.507 450.825 568.382 455.528 570 cv
451.362 570.398 447.183 571.362 443.085 572.935 cv
442.967 572.98 442.85 573.025 442.733 573.071 cv
.611765 .890196 .952941 rgb
f
414.36 636.368 mo
413.326 632.791 411.822 629.363 409.89 626.18 cv
411.078 625.548 412.226 624.869 413.334 624.145 cv
413.839 627.421 414.698 630.695 415.935 633.915 cv
416.105 634.358 416.281 634.798 416.463 635.232 cv
415.772 635.625 415.073 636.002 414.36 636.368 cv
432.6 578.553 mo
431.945 575.184 430.886 571.84 429.4 568.583 cv
432.886 567.789 436.43 567.397 439.961 567.397 cv
440.283 567.397 440.607 567.4 440.929 567.406 cv
441.638 569.28 442.238 571.169 442.733 573.071 cv
439.065 574.513 435.675 576.365 432.6 578.553 cv
.360784 .862745 .886274 rgb
f
417.241 597.013 mo
414.63 593.024 412.585 588.576 411.246 583.763 cv
413.534 580.4 416.178 577.261 419.148 574.409 cv
419.304 576.116 419.577 577.832 419.974 579.548 cv
420.647 582.465 421.64 585.226 422.906 587.801 cv
420.666 590.653 418.767 593.746 417.241 597.013 cv
.360784 .85098 .898039 rgb
f
407.312 643.561 mo
406.72 642.384 406.165 641.181 405.646 639.951 cv
405.949 639.856 406.249 639.758 406.55 639.657 cv
406.88 640.938 407.135 642.242 407.312 643.561 cv
.611765 .890196 .952941 rgb
f
405.646 639.951 mo
405.395 639.354 405.153 638.753 404.919 638.144 cv
403.907 635.507 403.097 632.845 402.481 630.17 cv
404.314 633.103 405.688 636.305 406.55 639.657 cv
406.249 639.758 405.949 639.856 405.646 639.951 cv
.360784 .862745 .886274 rgb
f
460.012 676.016 mo
455.14 676.016 450.324 675.408 445.671 674.239 cv
455.915 673.267 466.046 669.623 474.974 663.137 cv
476.145 662.285 477.278 661.398 478.369 660.48 cv
501.73 650.625 513.219 623.932 504.065 600.085 cv
502.906 597.065 501.471 594.234 499.799 591.607 cv
501.897 587.256 503.342 582.573 504.036 577.71 cv
508.662 582.892 512.444 588.986 515.081 595.856 cv
526.759 626.276 511.564 660.404 481.144 672.081 cv
474.19 674.75 467.04 676.016 460.012 676.016 cv
492.986 583.224 mo
491.006 581.293 488.869 579.55 486.605 578.008 cv
478.818 568.182 468.489 561.444 457.241 558.049 cv
458.158 558.005 459.074 557.984 459.988 557.984 cv
472.645 557.984 484.914 562.085 494.977 569.476 cv
495.172 574.227 494.467 578.878 492.986 583.224 cv
.611765 .890196 .952941 rgb
f
499.799 591.607 mo
497.833 588.521 495.539 585.715 492.986 583.224 cv
494.467 578.878 495.172 574.227 494.977 569.476 cv
498.252 571.881 501.292 574.635 504.036 577.71 cv
503.342 582.573 501.897 587.256 499.799 591.607 cv
.360784 .85098 .898039 rgb
f
415.322 655.559 mo
412.22 651.966 409.519 647.953 407.312 643.561 cv
407.135 642.242 406.88 640.938 406.55 639.657 cv
408.538 638.992 410.51 638.207 412.455 637.3 cv
413.098 637 413.734 636.689 414.36 636.368 cv
416.129 642.488 416.521 649.046 415.322 655.559 cv
402.302 629.366 mo
401.328 624.847 400.904 620.3 400.996 615.811 cv
404.543 618.785 407.535 622.302 409.89 626.18 cv
409.195 626.55 408.486 626.904 407.765 627.24 cv
405.967 628.078 404.143 628.785 402.302 629.366 cv
.431373 .847059 .933333 rgb
f
406.55 639.657 mo
405.688 636.305 404.314 633.103 402.481 630.17 cv
402.42 629.903 402.36 629.634 402.302 629.366 cv
404.143 628.785 405.967 628.078 407.765 627.24 cv
408.486 626.904 409.195 626.55 409.89 626.18 cv
411.822 629.363 413.326 632.791 414.36 636.368 cv
413.734 636.689 413.098 637 412.455 637.3 cv
410.51 638.207 408.538 638.992 406.55 639.657 cv
.305882 .831372 .901961 rgb
f
293.954 224.501 mo
265.691 224.501 242.07 202.354 240.573 173.8 cv
239.027 144.293 261.693 119.12 291.2 117.573 cv
292.153 117.523 293.103 117.499 294.046 117.499 cv
307.876 117.499 320.594 122.802 330.153 131.563 cv
325.907 131.857 321.707 133.171 317.95 135.526 cv
311.095 130.89 302.847 128.199 294.037 128.199 cv
293.281 128.199 292.523 128.219 291.76 128.259 cv
268.155 129.495 250.021 149.635 251.259 173.24 cv
252.456 196.082 271.354 213.8 293.963 213.801 cv
294.719 213.801 295.477 213.781 296.24 213.741 cv
314.395 212.79 329.313 200.658 334.671 184.367 cv
338.899 183.942 343.054 182.501 346.745 180.023 cv
342.641 204.156 322.269 223.092 296.8 224.427 cv
295.847 224.477 294.897 224.501 293.954 224.501 cv
336.092 178.804 mo
336.691 175.561 336.921 172.197 336.741 168.76 cv
336.118 156.881 330.709 146.388 322.48 139.052 cv
325.473 137.545 328.736 136.8 331.993 136.8 cv
333.123 136.8 334.252 136.89 335.368 137.069 cv
342.368 145.589 346.805 156.343 347.427 168.2 cv
347.502 169.639 347.52 171.068 347.482 172.484 cv
347.072 172.922 346.64 173.346 346.186 173.755 cv
343.23 176.416 339.731 178.092 336.092 178.804 cv
.745098 .960784 .960784 rgb
f
334.671 184.367 mo
335.265 182.561 335.742 180.703 336.092 178.804 cv
339.731 178.092 343.23 176.416 346.186 173.755 cv
346.64 173.346 347.072 172.922 347.482 172.484 cv
347.414 175.042 347.164 177.56 346.745 180.023 cv
343.054 182.501 338.899 183.942 334.671 184.367 cv
322.48 139.052 mo
321.052 137.779 319.538 136.6 317.95 135.526 cv
321.707 133.171 325.907 131.857 330.153 131.563 cv
332.017 133.272 333.759 135.11 335.368 137.069 cv
334.252 136.89 333.123 136.8 331.993 136.8 cv
328.736 136.8 325.473 137.545 322.48 139.052 cv
.513725 .941176 .941176 rgb
f
809.027 97.9756 mo
809.804 94.0923 810.114 90.1828 809.983 86.3139 cv
831.179 84.9696 849.368 69.112 852.829 47.2589 cv
853.37 43.8417 853.524 40.4531 853.322 37.137 cv
857.091 38.4696 861.014 39.3523 865.008 39.7564 cv
865.018 42.8287 864.782 45.9412 864.286 49.0733 cv
859.868 76.971 836.242 97.0526 809.027 97.9756 cv
798.71 97.4048 mo
798.449 97.3671 798.187 97.3275 797.927 97.2862 cv
783.572 95.0124 771.284 87.652 762.614 77.3355 cv
763.338 76.4842 764.042 75.6063 764.724 74.7017 cv
766.522 72.3152 768.101 69.8315 769.463 67.2748 cv
776.443 76.8799 787.088 83.8244 799.741 85.8285 cv
799.744 85.829 799.747 85.8295 799.75 85.83 cv
799.958 89.6642 799.625 93.5587 798.71 97.4048 cv
756.012 67.6502 mo
752.778 61.6988 750.571 55.1618 749.581 48.3 cv
752.659 47.5677 755.828 47.1901 759.026 47.1901 cv
759.735 47.1901 760.446 47.2087 761.156 47.2461 cv
761.532 49.625 762.09 51.9525 762.82 54.2137 cv
761.367 58.9235 759.107 63.4686 756.012 67.6502 cv
749.029 37.9807 mo
749.113 35.6463 749.339 33.2922 749.714 30.9267 cv
749.986 29.21 750.33 27.5237 750.744 25.8689 cv
753.842 28.7367 757.323 31.1972 761.106 33.1651 cv
760.914 34.4526 760.777 35.7384 760.693 37.0149 cv
760.138 36.9968 759.587 36.9878 759.033 36.9878 cv
755.658 36.9878 752.306 37.3248 749.029 37.9807 cv
760.352 21.5168 mo
758.115 19.8539 756.07 17.953 754.251 15.8496 cv
754.612 15.0596 754.992 14.2764 755.386 13.5076 cv
757.34 16.0192 758.998 18.7065 760.352 21.5168 cv
768.843 13.5792 mo
766.877 10.0729 764.516 6.7514 761.767 3.68107 cv
762.792 2.40597 763.868 1.17968 764.993 0 cv
783.482 0 li
777.713 3.3958 772.698 8.02136 768.843 13.5792 cv
.643137 .929412 .960784 rgb
f
807.071 98.0087 mo
804.31 98.0087 801.52 97.8115 798.71 97.4048 cv
799.625 93.5587 799.958 89.6642 799.75 85.83 cv
802.205 86.2183 804.648 86.4065 807.057 86.4066 cv
808.038 86.4067 809.013 86.3754 809.983 86.3139 cv
810.114 90.1828 809.804 94.0923 809.027 97.9756 cv
808.377 97.9976 807.724 98.0087 807.071 98.0087 cv
749.581 48.3 mo
749.095 44.9279 748.903 41.4757 749.029 37.9807 cv
752.306 37.3248 755.658 36.9878 759.033 36.9878 cv
759.587 36.9878 760.138 36.9968 760.693 37.0149 cv
760.465 40.491 760.631 43.9173 761.156 47.2461 cv
760.446 47.2087 759.735 47.1901 759.026 47.1901 cv
755.828 47.1901 752.659 47.5677 749.581 48.3 cv
.392157 .909804 .941176 rgb
f
762.614 77.3355 mo
760.095 74.3394 757.882 71.0932 756.012 67.6502 cv
759.107 63.4686 761.367 58.9235 762.82 54.2137 cv
764.336 58.913 766.588 63.3195 769.463 67.2748 cv
768.101 69.8315 766.522 72.3152 764.724 74.7017 cv
764.042 75.6063 763.338 76.4842 762.614 77.3355 cv
.443137 .905882 .92549 rgb
f
763.562 23.6596 mo
762.455 22.999 761.383 22.2829 760.352 21.5168 cv
758.998 18.7065 757.34 16.0192 755.386 13.5076 cv
757.188 9.99522 759.332 6.70748 761.767 3.68107 cv
764.516 6.7514 766.877 10.0729 768.843 13.5792 cv
766.7 16.6688 764.918 20.0439 763.562 23.6596 cv
f
761.106 33.1651 mo
757.323 31.1972 753.842 28.7367 750.744 25.8689 cv
751.617 22.3767 752.797 19.0297 754.251 15.8496 cv
756.07 17.953 758.115 19.8539 760.352 21.5168 cv
761.185 23.2452 761.902 25.0178 762.503 26.827 cv
761.939 28.7425 761.492 30.7159 761.171 32.7411 cv
761.148 32.8833 761.127 33.0231 761.106 33.1651 cv
.466667 .909804 .941176 rgb
f
762.503 26.827 mo
761.902 25.0178 761.185 23.2452 760.352 21.5168 cv
761.383 22.2829 762.455 22.999 763.562 23.6596 cv
763.174 24.6957 762.82 25.7531 762.503 26.827 cv
.364706 .898039 .921569 rgb
f
864.069 29.5609 mo
859.494 28.8707 855.06 27.392 850.985 25.1954 cv
847.542 14.9939 840.614 6.21881 831.399 .518957 cv
831.352 .346272 831.306 .172968 831.261 0 cv
849.004 0 li
856.706 8.09885 862.019 18.3539 864.069 29.5609 cv
.643137 .929412 .960784 rgb
f
865.008 39.7564 mo
861.014 39.3523 857.091 38.4696 853.322 37.137 cv
853.071 33.0159 852.271 29.0052 850.985 25.1954 cv
855.06 27.392 859.494 28.8707 864.069 29.5609 cv
864.677 32.8858 864.998 36.2958 865.008 39.7564 cv
.392157 .792157 .901961 rgb
f
831.399 .518957 mo
831.115 .343184 830.828 .169873 830.539 0 cv
831.261 0 li
831.306 .172968 831.352 .346272 831.399 .518957 cv
f
783.481 1000 mo
764.994 1000 li
766.41 998.515 767.905 997.106 769.466 995.782 cv
773.29 997.882 777.611 999.006 782.017 999.006 cv
783.27 999.006 784.528 998.916 785.784 998.73 cv
785.004 999.132 784.236 999.555 783.481 1000 cv
820.294 995.539 mo
818.34 994.958 816.327 994.499 814.259 994.171 cv
811.801 993.782 809.355 993.593 806.943 993.593 cv
803.202 993.593 799.536 994.046 796.007 994.908 cv
800.913 991.78 804.479 987.191 806.395 981.994 cv
806.573 981.992 806.751 981.991 806.93 981.991 cv
809.946 981.991 812.999 982.227 816.073 982.714 cv
817.493 982.939 818.89 983.213 820.268 983.535 cv
820.298 983.688 820.328 983.842 820.357 983.996 cv
819.893 987.799 819.864 991.674 820.294 995.539 cv
782.013 993.805 mo
779.282 993.805 776.591 993.264 774.094 992.239 cv
781.86 986.887 790.937 983.41 800.585 982.341 cv
798.558 986.381 795.205 989.792 790.79 991.851 cv
787.946 993.177 784.957 993.805 782.013 993.805 cv
.643137 .929412 .960784 rgb
f
782.017 999.006 mo
777.611 999.006 773.29 997.882 769.466 995.782 cv
770.95 994.523 772.493 993.342 774.094 992.239 cv
776.591 993.264 779.282 993.805 782.013 993.805 cv
784.957 993.805 787.946 993.177 790.79 991.851 cv
795.205 989.792 798.558 986.381 800.585 982.341 cv
802.502 982.129 804.438 982.012 806.395 981.994 cv
804.479 987.191 800.913 991.78 796.007 994.908 cv
792.438 995.78 789.008 997.07 785.784 998.73 cv
784.528 998.916 783.27 999.006 782.017 999.006 cv
.439216 .909804 .941176 rgb
f
820.357 983.996 mo
820.328 983.842 820.298 983.688 820.268 983.535 cv
820.314 983.546 820.364 983.557 820.411 983.569 cv
820.392 983.711 820.374 983.853 820.357 983.996 cv
.466667 .909804 .941176 rgb
f
849.004 1000 mo
831.261 1000 li
830.844 998.391 830.532 996.769 830.321 995.145 cv
830.416 994.05 830.474 992.945 830.493 991.829 cv
830.522 990.159 830.465 988.509 830.325 986.881 cv
837.465 990.011 843.784 994.51 849.004 1000 cv
.643137 .929412 .960784 rgb
f
830.321 995.145 mo
829.959 992.355 829.898 989.555 830.123 986.793 cv
830.19 986.822 830.258 986.852 830.325 986.881 cv
830.465 988.509 830.522 990.159 830.493 991.829 cv
830.474 992.945 830.416 994.05 830.321 995.145 cv
.466667 .909804 .941176 rgb
f
831.261 1000 mo
830.54 1000 li
830.273 999.843 830.005 999.688 829.734 999.536 cv
829.996 998.094 830.192 996.63 830.321 995.145 cv
830.532 996.769 830.844 998.391 831.261 1000 cv
820.715 995.667 mo
820.576 995.624 820.434 995.581 820.294 995.539 cv
819.864 991.674 819.893 987.799 820.357 983.996 cv
820.819 986.477 821.04 989.041 820.994 991.663 cv
820.971 993.017 820.877 994.352 820.715 995.667 cv
.392157 .792157 .901961 rgb
f
829.734 999.536 mo
826.913 997.951 823.897 996.647 820.715 995.667 cv
820.877 994.352 820.971 993.017 820.994 991.663 cv
821.04 989.041 820.819 986.477 820.357 983.996 cv
820.374 983.853 820.392 983.711 820.411 983.569 cv
823.787 984.367 827.03 985.451 830.123 986.793 cv
829.898 989.555 829.959 992.355 830.321 995.145 cv
830.192 996.63 829.996 998.094 829.734 999.536 cv
.305882 .780392 .894118 rgb
f
733.042 873.505 mo
718.475 873.505 704.203 866.363 695.679 853.236 cv
682.294 832.625 688.152 805.064 708.764 791.679 cv
716.249 786.818 724.652 784.495 732.958 784.495 cv
747.524 784.495 761.797 791.637 770.321 804.764 cv
783.706 825.375 777.848 852.935 757.236 866.321 cv
749.751 871.182 741.348 873.505 733.042 873.505 cv
732.967 793.396 mo
726.321 793.396 719.601 795.254 713.611 799.143 cv
697.121 809.852 692.435 831.899 703.143 848.389 cv
709.962 858.889 721.381 864.604 733.033 864.604 cv
739.679 864.605 746.399 862.746 752.389 858.856 cv
768.879 848.148 773.565 826.1 762.856 809.611 cv
756.038 799.111 744.619 793.396 732.967 793.396 cv
.709804 .960784 .960784 rgb
f
597.952 438.504 mo
586.028 438.504 573.998 434.872 563.614 427.327 cv
558.018 423.261 553.355 418.389 549.667 412.985 cv
553.653 412.806 557.551 411.046 560.345 407.813 cv
563.121 411.569 566.512 414.971 570.491 417.862 cv
578.797 423.897 588.424 426.803 597.961 426.803 cv
612.434 426.804 626.705 420.113 635.862 407.509 cv
651.055 386.598 646.419 357.331 625.509 342.138 cv
617.203 336.103 607.576 333.197 598.038 333.197 cv
597.509 333.197 596.982 333.206 596.453 333.223 cv
599.153 329.772 601.299 325.929 602.823 321.846 cv
607.105 326.517 612.28 330.514 618.258 333.56 cv
625.301 337.149 632.755 339.059 640.17 339.44 cv
659.489 359.48 662.257 391.084 645.327 414.386 cv
633.881 430.139 616.041 438.504 597.952 438.504 cv
539.822 386.132 mo
539.034 378.682 539.667 371.068 541.792 363.729 cv
545.885 359.067 548.969 353.608 550.857 347.731 cv
552.051 348.087 553.265 348.393 554.489 348.644 cv
553.5 350.597 552.844 352.76 552.601 355.066 cv
552.263 358.282 552.771 361.391 553.944 364.174 cv
551.727 370.336 550.87 376.811 551.306 383.176 cv
550.544 383.058 549.776 382.999 549.009 382.999 cv
545.74 382.999 542.492 384.063 539.822 386.132 cv
556.299 358.74 mo
556.174 357.67 556.164 356.57 556.281 355.453 cv
556.52 353.181 557.261 351.082 558.383 349.257 cv
559.743 349.407 561.114 349.491 562.493 349.508 cv
561.675 350.463 560.89 351.457 560.138 352.492 cv
558.675 354.504 557.398 356.593 556.299 358.74 cv
561.735 340.985 mo
559.525 340.902 557.34 340.602 555.212 340.099 cv
565.5 329.038 579.355 322.728 593.678 321.659 cv
590.058 329.236 583.643 335.495 575.185 338.742 cv
575.053 338.792 574.92 338.842 574.789 338.891 cv
574.182 338.765 573.563 338.668 572.933 338.602 cv
572.276 338.532 571.623 338.499 570.977 338.499 cv
567.642 338.499 564.475 339.398 561.735 340.985 cv
.54902 .960784 .898039 rgb
f
553.944 364.174 mo
552.771 361.391 552.263 358.282 552.601 355.066 cv
552.844 352.76 553.5 350.597 554.489 348.644 cv
555.774 348.908 557.072 349.113 558.383 349.257 cv
557.261 351.082 556.52 353.181 556.281 355.453 cv
556.164 356.57 556.174 357.67 556.299 358.74 cv
555.392 360.516 554.607 362.331 553.944 364.174 cv
563.007 341.009 mo
562.582 341.009 562.159 341.001 561.735 340.985 cv
564.475 339.398 567.642 338.499 570.977 338.499 cv
571.623 338.499 572.276 338.532 572.933 338.602 cv
573.563 338.668 574.182 338.765 574.789 338.891 cv
570.905 340.328 566.926 341.009 563.007 341.009 cv
.298039 .921569 .878431 rgb
f
562.493 349.508 mo
561.114 349.491 559.743 349.407 558.383 349.257 cv
560.911 345.143 565.371 342.418 570.369 342.212 cv
567.519 344.296 564.872 346.732 562.493 349.508 cv
554.489 348.644 mo
553.265 348.393 552.051 348.087 550.857 347.731 cv
551.249 346.509 551.591 345.267 551.878 344.013 cv
552.942 342.648 554.054 341.344 555.212 340.099 cv
557.34 340.602 559.525 340.902 561.735 340.985 cv
558.659 342.768 556.121 345.421 554.489 348.644 cv
575.37 339.022 mo
575.177 338.975 574.984 338.932 574.789 338.891 cv
574.92 338.842 575.053 338.792 575.185 338.742 cv
583.643 335.495 590.058 329.236 593.678 321.659 cv
595.131 321.55 596.588 321.496 598.048 321.496 cv
599.589 321.496 601.129 321.556 602.669 321.678 cv
602.721 321.735 602.771 321.79 602.823 321.846 cv
601.299 325.929 599.153 329.772 596.453 333.223 cv
589.113 333.471 581.87 335.438 575.37 339.022 cv
.380392 .941176 .878431 rgb
f
558.383 349.257 mo
557.072 349.113 555.774 348.908 554.489 348.644 cv
556.121 345.421 558.659 342.768 561.735 340.985 cv
562.159 341.001 562.582 341.009 563.007 341.009 cv
566.926 341.009 570.905 340.328 574.789 338.891 cv
574.984 338.932 575.177 338.975 575.37 339.022 cv
573.647 339.972 571.976 341.036 570.369 342.212 cv
565.371 342.418 560.911 345.143 558.383 349.257 cv
.254902 .921569 .866667 rgb
f
640.17 339.44 mo
632.755 339.059 625.301 337.149 618.258 333.56 cv
612.28 330.514 607.105 326.517 602.823 321.846 cv
602.841 321.797 602.861 321.745 602.879 321.695 cv
613.19 322.548 623.404 326.147 632.386 332.672 cv
635.222 334.733 637.819 337.001 640.17 339.44 cv
.317647 .941176 .878431 rgb
f
602.823 321.846 mo
602.771 321.79 602.721 321.735 602.669 321.678 cv
602.739 321.684 602.809 321.689 602.879 321.695 cv
602.861 321.745 602.841 321.797 602.823 321.846 cv
.231373 .929412 .866667 rgb
f
548.992 410 mo
548.568 410 548.143 409.978 547.72 409.933 cv
543.996 403.669 541.506 396.803 540.313 389.72 cv
542.645 387.268 545.814 386 549.007 386 cv
549.883 386 550.761 386.095 551.624 386.288 cv
552.531 392.971 554.874 399.456 558.572 405.237 cv
558.492 405.343 558.41 405.448 558.326 405.552 cv
555.954 408.48 552.488 410 548.992 410 cv
.54902 .960784 .898039 rgb
f
549.667 412.985 mo
548.985 411.986 548.336 410.967 547.72 409.933 cv
548.143 409.978 548.568 410 548.992 410 cv
552.488 410 555.954 408.48 558.326 405.552 cv
558.41 405.448 558.492 405.343 558.572 405.237 cv
559.133 406.113 559.723 406.971 560.345 407.813 cv
557.551 411.046 553.653 412.806 549.667 412.985 cv
540.313 389.72 mo
540.112 388.529 539.949 387.333 539.822 386.132 cv
542.492 384.063 545.74 382.999 549.009 382.999 cv
549.776 382.999 550.544 383.058 551.306 383.176 cv
551.378 384.217 551.484 385.255 551.624 386.288 cv
550.761 386.095 549.883 386 549.007 386 cv
545.814 386 542.645 387.268 540.313 389.72 cv
.301961 .941176 .878431 rgb
f
893.021 303.501 mo
885.277 303.501 877.603 300.567 871.781 294.914 cv
873.427 293.723 874.969 292.369 876.376 290.866 cv
880.989 295.168 886.978 297.401 893.017 297.401 cv
898.27 297.401 903.562 295.712 908.022 292.227 cv
916.51 285.597 919.417 274.47 916.005 264.849 cv
918.322 266.705 920.777 268.377 923.341 269.85 cv
924.38 279.942 920.362 290.327 911.777 297.034 cv
906.203 301.39 899.586 303.501 893.021 303.501 cv
867.666 289.986 mo
859.489 277.816 861.192 261.548 871.533 251.33 cv
872.966 252.835 874.201 254.501 875.22 256.284 cv
867.684 264.279 866.414 276.465 872.266 285.868 cv
870.894 287.436 869.346 288.814 867.666 289.986 cv
880.238 252.201 mo
879.171 250.467 877.936 248.831 876.545 247.318 cv
881.59 244.077 887.304 242.499 892.979 242.499 cv
895.128 242.499 897.271 242.725 899.371 243.172 cv
900.576 245.916 901.977 248.529 903.552 250.994 cv
900.24 249.409 896.621 248.599 892.983 248.599 cv
888.592 248.599 884.175 249.779 880.238 252.201 cv
.572549 .870588 .960784 rgb
f
871.781 294.914 mo
870.786 293.948 869.844 292.902 868.966 291.778 cv
868.508 291.191 868.075 290.594 867.666 289.986 cv
869.346 288.814 870.894 287.436 872.266 285.868 cv
872.724 286.604 873.226 287.323 873.772 288.022 cv
874.578 289.053 875.449 290.001 876.376 290.866 cv
874.969 292.369 873.427 293.723 871.781 294.914 cv
875.22 256.284 mo
874.201 254.501 872.966 252.835 871.533 251.33 cv
872.372 250.501 873.27 249.71 874.223 248.966 cv
874.979 248.375 875.753 247.826 876.545 247.318 cv
877.936 248.831 879.171 250.467 880.238 252.201 cv
879.465 252.677 878.71 253.2 877.978 253.773 cv
876.981 254.551 876.061 255.392 875.22 256.284 cv
.372549 .85098 .941176 rgb
f
923.341 269.85 mo
920.777 268.377 918.322 266.705 916.005 264.849 cv
915.149 262.432 913.893 260.11 912.227 257.978 cv
909.829 254.908 906.842 252.569 903.552 250.994 cv
901.977 248.529 900.576 245.916 899.371 243.172 cv
906.133 244.613 912.445 248.348 917.034 254.222 cv
920.698 258.911 922.774 264.337 923.341 269.85 cv
.321569 .780392 .941176 rgb
f
257.003 930.011 mo
239.847 930.011 223.74 919.421 217.533 902.365 cv
213.492 891.263 214.425 879.563 219.194 869.706 cv
220.907 872.403 222.906 874.929 225.169 877.237 cv
222.803 884.22 222.708 892.025 225.426 899.492 cv
230.392 913.135 243.278 921.608 257.002 921.609 cv
260.818 921.609 264.697 920.954 268.492 919.573 cv
285.193 913.495 294.146 895.551 289.297 878.727 cv
291.627 876.566 293.752 874.146 295.62 871.489 cv
295.92 872.193 296.202 872.907 296.467 873.635 cv
297.529 876.552 298.247 879.51 298.643 882.466 cv
297.695 884.98 297.793 887.804 298.95 890.26 cv
298.064 906.554 287.668 921.533 271.365 927.467 cv
266.623 929.193 261.772 930.011 257.003 930.011 cv
285.232 869.767 mo
279.021 860.13 268.293 854.391 256.998 854.391 cv
253.182 854.391 249.303 855.046 245.508 856.427 cv
238.873 858.842 233.461 863.13 229.651 868.476 cv
227.744 866.168 226.133 863.646 224.845 860.969 cv
229.426 855.511 235.458 851.146 242.635 848.533 cv
247.377 846.807 252.228 845.989 256.997 845.989 cv
270.019 845.989 282.438 852.092 290.381 862.491 cv
288.942 865.163 287.206 867.597 285.232 869.767 cv
.741176 .960784 .960784 rgb
f
289.297 878.727 mo
289.083 877.985 288.842 877.244 288.574 876.508 cv
287.695 874.093 286.568 871.84 285.232 869.767 cv
287.206 867.597 288.942 865.163 290.381 862.491 cv
292.456 865.208 294.225 868.218 295.62 871.489 cv
293.752 874.146 291.627 876.566 289.297 878.727 cv
225.169 877.237 mo
222.906 874.929 220.907 872.403 219.194 869.706 cv
220.704 866.583 222.601 863.645 224.845 860.969 cv
226.133 863.646 227.744 866.168 229.651 868.476 cv
227.736 871.163 226.226 874.118 225.169 877.237 cv
.592157 .941176 .941176 rgb
f
298.95 890.26 mo
297.793 887.804 297.695 884.98 298.643 882.466 cv
298.992 885.076 299.09 887.685 298.95 890.26 cv
.545098 .941176 .941176 rgb
f
937.96 650.503 mo
921.777 650.503 907.765 638.432 905.742 621.961 cv
903.555 604.146 916.224 587.93 934.039 585.742 cv
935.383 585.577 936.72 585.497 938.041 585.497 cv
943.108 585.497 947.96 586.679 952.301 588.811 cv
951.157 590.946 950.789 593.302 951.108 595.544 cv
947.233 593.279 942.748 591.997 938.033 591.997 cv
936.975 591.997 935.907 592.061 934.831 592.193 cv
920.579 593.943 910.443 606.916 912.193 621.169 cv
913.811 634.345 925.022 644.003 937.967 644.003 cv
939.025 644.003 940.093 643.939 941.169 643.807 cv
941.65 643.747 942.126 643.676 942.597 643.591 cv
942.406 644.142 942.226 644.697 942.054 645.259 cv
941.533 646.962 941.114 648.67 940.793 650.38 cv
939.844 650.463 938.896 650.503 937.96 650.503 cv
951.125 647.741 mo
952.686 642.766 955.186 638.343 958.373 634.607 cv
959.776 636.195 961.596 637.371 963.621 637.995 cv
960.365 642.168 956.096 645.55 951.125 647.741 cv
965.063 635.996 mo
963.053 635.562 961.243 634.463 959.931 632.891 cv
962.755 629.968 966.022 627.536 969.59 625.673 cv
968.688 629.385 967.142 632.873 965.063 635.996 cv
963.918 615.92 mo
963.888 615.558 963.851 615.195 963.807 614.831 cv
963.362 611.211 962.194 607.857 960.464 604.895 cv
960.972 604.966 961.482 605.002 961.989 605.002 cv
963.805 605.002 965.596 604.552 967.194 603.698 cv
968.746 606.865 969.804 610.341 970.258 614.039 cv
970.299 614.373 970.335 614.707 970.365 615.04 cv
969.855 615.233 969.35 615.435 968.847 615.646 cv
968.246 615.548 967.632 615.497 967.011 615.497 cv
966.219 615.497 965.415 615.58 964.609 615.751 cv
964.375 615.801 964.145 615.857 963.918 615.92 cv
.560784 .960784 .960784 rgb
f
963.621 637.995 mo
961.596 637.371 959.776 636.195 958.373 634.607 cv
958.876 634.018 959.395 633.446 959.931 632.891 cv
961.243 634.463 963.053 635.562 965.063 635.996 cv
964.608 636.68 964.127 637.347 963.621 637.995 cv
964.003 618.01 mo
964.003 617.318 963.974 616.621 963.918 615.92 cv
964.145 615.857 964.375 615.801 964.609 615.751 cv
965.415 615.58 966.219 615.497 967.011 615.497 cv
967.632 615.497 968.246 615.548 968.847 615.646 cv
967.188 616.341 965.571 617.131 964.003 618.01 cv
.309804 .894118 .933333 rgb
f
940.793 650.38 mo
941.114 648.67 941.533 646.962 942.054 645.259 cv
942.226 644.697 942.406 644.142 942.597 643.591 cv
948.938 642.458 954.376 639.08 958.185 634.389 cv
958.247 634.463 958.309 634.535 958.373 634.607 cv
955.186 638.343 952.686 642.766 951.125 647.741 cv
948.281 648.995 945.206 649.859 941.961 650.258 cv
941.571 650.306 941.182 650.346 940.793 650.38 cv
959.931 632.891 mo
959.817 632.755 959.707 632.615 959.601 632.472 cv
962.349 628.373 963.948 623.481 964.002 618.301 cv
964.353 618.18 964.715 618.08 965.087 618.001 cv
965.732 617.864 966.375 617.798 967.009 617.798 cv
968.228 617.798 969.411 618.041 970.5 618.491 cv
970.466 620.949 970.154 623.354 969.59 625.673 cv
966.022 627.536 962.755 629.968 959.931 632.891 cv
970.441 616.025 mo
969.922 615.861 969.39 615.734 968.847 615.646 cv
969.35 615.435 969.855 615.233 970.365 615.04 cv
970.396 615.369 970.421 615.697 970.441 616.025 cv
.360784 .941176 .941176 rgb
f
958.373 634.607 mo
958.309 634.535 958.247 634.463 958.185 634.389 cv
958.685 633.772 959.158 633.132 959.601 632.472 cv
959.707 632.615 959.817 632.755 959.931 632.891 cv
959.395 633.446 958.876 634.018 958.373 634.607 cv
970.5 618.491 mo
969.411 618.041 968.228 617.798 967.009 617.798 cv
966.375 617.798 965.732 617.864 965.087 618.001 cv
964.715 618.08 964.353 618.18 964.002 618.301 cv
964.003 618.204 964.003 618.108 964.003 618.01 cv
965.571 617.131 967.188 616.341 968.847 615.646 cv
969.39 615.734 969.922 615.861 970.441 616.025 cv
970.492 616.851 970.512 617.674 970.5 618.491 cv
.235294 .909804 .92549 rgb
f
961.992 602.801 mo
960.846 602.801 959.689 602.577 958.586 602.112 cv
957.224 600.35 955.644 598.775 953.892 597.422 cv
952.894 595.051 952.942 592.271 954.241 589.847 cv
959.151 592.684 963.287 596.781 966.16 601.756 cv
964.88 602.441 963.445 602.801 961.992 602.801 cv
.560784 .960784 .960784 rgb
f
737.393 309.821 mo
736.268 309.25 735.117 308.716 733.952 308.224 cv
735.557 307.232 736.974 305.877 738.07 304.19 cv
740.954 299.749 740.827 294.22 738.199 290.006 cv
738.93 289.114 739.636 288.191 740.312 287.244 cv
744.246 292.614 744.679 300.072 740.838 305.986 cv
739.87 307.477 738.703 308.759 737.393 309.821 cv
.537255 .960784 .960784 rgb
f
726.985 313.502 mo
723.904 313.502 720.789 312.641 718.014 310.838 cv
716.232 309.681 714.748 308.239 713.583 306.611 cv
714.688 306.263 715.782 305.879 716.862 305.459 cv
717.688 306.448 718.673 307.332 719.811 308.07 cv
722.031 309.512 724.524 310.201 726.988 310.201 cv
729.435 310.202 731.855 309.522 733.952 308.224 cv
735.117 308.716 736.268 309.25 737.393 309.821 cv
734.427 312.226 730.731 313.502 726.985 313.502 cv
.309804 .905882 .937255 rgb
f
710.501 296.678 mo
710.557 293.698 711.419 290.697 713.162 288.014 cv
716.322 283.147 721.615 280.498 727.015 280.498 cv
728.629 280.498 730.253 280.735 731.832 281.219 cv
731.13 282.203 730.388 283.15 729.612 284.058 cv
728.751 283.884 727.88 283.798 727.012 283.798 cv
722.692 283.798 718.458 285.917 715.93 289.811 cv
714.788 291.569 714.118 293.497 713.889 295.447 cv
712.779 295.905 711.647 296.316 710.501 296.678 cv
.537255 .960784 .960784 rgb
f
715.844 304.062 mo
714.92 304.014 713.991 303.99 713.059 303.99 cv
712.726 303.99 712.39 303.993 712.056 303.999 cv
710.987 301.712 710.454 299.202 710.501 296.678 cv
711.647 296.316 712.779 295.905 713.889 295.447 cv
713.535 298.449 714.226 301.502 715.844 304.062 cv
.333333 .941176 .921569 rgb
f
713.583 306.611 mo
712.991 305.784 712.481 304.909 712.056 303.999 cv
712.39 303.993 712.726 303.99 713.059 303.99 cv
713.991 303.99 714.92 304.014 715.844 304.062 cv
716.15 304.547 716.49 305.013 716.862 305.459 cv
715.782 305.879 714.688 306.263 713.583 306.611 cv
.219608 .913725 .909804 rgb
f
738.199 290.006 mo
737.208 288.418 735.863 287.016 734.189 285.93 cv
732.751 284.995 731.198 284.377 729.612 284.058 cv
730.388 283.15 731.13 282.203 731.832 281.219 cv
733.267 281.659 734.665 282.304 735.986 283.162 cv
737.714 284.284 739.162 285.675 740.312 287.244 cv
739.636 288.191 738.93 289.114 738.199 290.006 cv
.333333 .941176 .921569 rgb
f
507.375 379.008 mo
494.896 378.836 483.019 373.441 474.672 364.255 cv
472.912 360.597 470.621 357.319 467.926 354.484 cv
467.327 353.308 466.775 352.097 466.273 350.852 cv
466.691 345.313 468.711 340.019 472.027 335.625 cv
472.18 338.985 472.811 342.379 473.961 345.721 cv
479.097 360.637 493.06 370.008 507.998 370.01 cv
511.82 370.01 515.703 369.397 519.521 368.107 cv
516.686 372.716 512.54 376.558 507.375 379.008 cv
.717647 .960784 .960784 rgb
f
474.672 364.255 mo
472.041 361.359 469.762 358.088 467.926 354.484 cv
470.621 357.319 472.912 360.597 474.672 364.255 cv
.486274 .905882 .941176 rgb
f
522.068 376.745 mo
525.608 372.702 528.195 367.917 529.65 362.774 cv
535.872 358.094 540.341 351.547 542.516 344.239 cv
544.746 345.464 547.081 346.488 549.494 347.298 cv
546.002 352.47 543.445 358.018 541.792 363.729 cv
536.802 369.411 530.312 373.91 522.65 376.548 cv
522.457 376.615 522.262 376.681 522.068 376.745 cv
552.685 339.399 mo
549.607 338.416 546.676 337 543.99 335.192 cv
544.133 330.924 543.512 326.558 542.039 322.279 cv
540.425 317.591 537.938 313.451 534.824 309.977 cv
535.74 309.918 536.664 309.76 537.583 309.497 cv
539.837 308.85 541.781 307.647 543.307 306.079 cv
546.374 309.957 548.848 314.41 550.549 319.35 cv
552.843 326.012 553.482 332.845 552.685 339.399 cv
463.053 336.406 mo
462.613 328.267 464.415 320.282 468.071 313.246 cv
469.205 317.003 471.164 320.322 473.705 323.044 cv
473.58 323.436 473.461 323.83 473.349 324.227 cv
468.992 327.502 465.501 331.688 463.053 336.406 cv
475.849 317.804 mo
474.231 315.593 473.044 313.012 472.438 310.158 cv
472.21 309.089 472.073 308.022 472.021 306.965 cv
477.235 300.013 484.515 294.494 493.35 291.452 cv
496.531 290.356 499.754 289.638 502.964 289.273 cv
506.175 291.378 508.786 294.404 510.364 298.068 cv
509.58 298.016 508.793 297.99 508.002 297.99 cv
504.113 297.99 500.162 298.624 496.279 299.961 cv
487.037 303.144 479.924 309.713 475.849 317.804 cv
533.995 307.402 mo
533.343 307.402 532.699 307.341 532.07 307.221 cv
531.109 306.359 530.105 305.552 529.063 304.802 cv
529.275 301.555 529.954 298.373 531.057 295.354 cv
534.973 297.687 538.547 300.62 541.624 304.075 cv
540.378 305.421 538.759 306.454 536.866 306.997 cv
535.909 307.272 534.944 307.402 533.995 307.402 cv
521.004 300.43 mo
519.369 299.796 517.686 299.28 515.969 298.888 cv
514.855 295.12 512.911 291.788 510.383 289.051 cv
514.471 289.269 518.478 290.046 522.302 291.33 cv
521.135 293.735 520.702 296.503 521.201 299.281 cv
521.13 299.663 521.064 300.046 521.004 300.43 cv
.717647 .960784 .960784 rgb
f
473.705 323.044 mo
471.164 320.322 469.205 317.003 468.071 313.246 cv
469.212 311.052 470.532 308.95 472.021 306.965 cv
472.073 308.022 472.21 309.089 472.438 310.158 cv
473.044 313.012 474.231 315.593 475.849 317.804 cv
474.999 319.49 474.282 321.242 473.705 323.044 cv
515.969 298.888 mo
514.135 298.47 512.26 298.194 510.364 298.068 cv
508.786 294.404 506.175 291.378 502.964 289.273 cv
504.648 289.082 506.331 288.988 508.003 288.988 cv
508.799 288.988 509.593 289.009 510.383 289.051 cv
512.911 291.788 514.855 295.12 515.969 298.888 cv
.537255 .941176 .941176 rgb
f
549.494 347.298 mo
547.081 346.488 544.746 345.464 542.516 344.239 cv
543.385 341.321 543.887 338.283 543.99 335.192 cv
546.676 337 549.607 338.416 552.685 339.399 cv
552.496 340.955 552.227 342.494 551.878 344.013 cv
551.469 344.538 551.067 345.072 550.673 345.615 cv
550.268 346.171 549.876 346.732 549.494 347.298 cv
529.063 304.802 mo
527.778 303.877 526.434 303.038 525.043 302.29 cv
524.604 301.546 524.252 300.735 524.003 299.867 cv
523.242 297.214 523.584 294.507 524.756 292.235 cv
526.935 293.109 529.04 294.152 531.057 295.354 cv
529.954 298.373 529.275 301.555 529.063 304.802 cv
521.519 300.634 mo
521.347 300.565 521.177 300.497 521.004 300.43 cv
521.064 300.046 521.13 299.663 521.201 299.281 cv
521.279 299.715 521.38 300.15 521.504 300.584 cv
521.509 300.6 521.514 300.618 521.519 300.634 cv
.54902 .941176 .941176 rgb
f
534.824 309.977 mo
533.954 309.006 533.033 308.086 532.07 307.221 cv
532.699 307.341 533.343 307.402 533.995 307.402 cv
534.944 307.402 535.909 307.272 536.866 306.997 cv
538.759 306.454 540.378 305.421 541.624 304.075 cv
542.204 304.725 542.764 305.392 543.307 306.079 cv
541.781 307.647 539.837 308.85 537.583 309.497 cv
536.664 309.76 535.74 309.918 534.824 309.977 cv
521.201 299.281 mo
520.702 296.503 521.135 293.735 522.302 291.33 cv
522.653 291.448 523.002 291.57 523.35 291.697 cv
522.404 294.147 521.683 296.685 521.201 299.281 cv
.470588 .870588 .854902 rgb
f
525.043 302.29 mo
523.899 301.676 522.722 301.123 521.519 300.634 cv
521.514 300.618 521.509 300.6 521.504 300.584 cv
521.38 300.15 521.279 299.715 521.201 299.281 cv
521.683 296.685 522.404 294.147 523.35 291.697 cv
523.821 291.868 524.292 292.048 524.756 292.235 cv
523.584 294.507 523.242 297.214 524.003 299.867 cv
524.252 300.735 524.604 301.546 525.043 302.29 cv
.384314 .858823 .847059 rgb
f
507.997 379.012 mo
507.79 379.012 507.582 379.011 507.375 379.008 cv
512.54 376.558 516.686 372.716 519.521 368.107 cv
519.588 368.084 519.654 368.062 519.721 368.039 cv
523.384 366.777 526.713 364.984 529.65 362.774 cv
528.195 367.917 525.608 372.702 522.068 376.745 cv
517.404 378.281 512.661 379.012 507.997 379.012 cv
466.273 350.852 mo
465.982 350.13 465.708 349.395 465.451 348.65 cv
464.056 344.599 463.273 340.482 463.053 336.406 cv
465.501 331.688 468.992 327.502 473.349 324.227 cv
472.313 327.888 471.85 331.734 472.027 335.625 cv
468.711 340.019 466.691 345.313 466.273 350.852 cv
.466667 .909804 .941176 rgb
f
541.792 363.729 mo
543.445 358.018 546.002 352.47 549.494 347.298 cv
549.946 347.45 550.4 347.594 550.857 347.731 cv
548.969 353.608 545.885 359.067 541.792 363.729 cv
.494118 .941176 .909804 rgb
f
550.857 347.731 mo
550.4 347.594 549.946 347.45 549.494 347.298 cv
549.876 346.732 550.268 346.171 550.673 345.615 cv
551.067 345.072 551.469 344.538 551.878 344.013 cv
551.591 345.267 551.249 346.509 550.857 347.731 cv
.411765 .929412 .901961 rgb
f
358.949 993.266 mo
358.294 992.43 357.683 991.553 357.122 990.638 cv
358.863 989.475 360.339 987.871 361.365 985.889 cv
361.857 986.446 362.386 986.982 362.952 987.491 cv
363.215 987.728 363.482 987.956 363.754 988.176 cv
362.516 990.264 360.861 991.979 358.949 993.266 cv
365.378 984.425 mo
364.339 983.46 363.46 982.384 362.744 981.232 cv
363.043 978.138 362.195 975.044 360.406 972.543 cv
360.446 971.162 360.668 969.784 361.075 968.447 cv
365.316 972.511 367.04 978.677 365.378 984.425 cv
356.871 969.199 mo
356.469 968.944 356.049 968.709 355.611 968.495 cv
355.144 968.267 354.67 968.07 354.191 967.904 cv
354.502 966.88 354.87 965.877 355.293 964.899 cv
355.873 965.103 356.447 965.343 357.014 965.619 cv
357.276 965.747 357.533 965.881 357.786 966.022 cv
357.389 967.059 357.084 968.122 356.871 969.199 cv
.529412 .803922 .960784 rgb
f
363.754 988.176 mo
363.482 987.956 363.215 987.728 362.952 987.491 cv
362.386 986.982 361.857 986.446 361.365 985.889 cv
361.413 985.797 361.459 985.705 361.505 985.611 cv
362.196 984.195 362.601 982.713 362.744 981.232 cv
363.46 982.384 364.339 983.46 365.378 984.425 cv
365.125 985.3 364.794 986.167 364.381 987.013 cv
364.186 987.413 363.977 987.8 363.754 988.176 cv
360.406 972.543 mo
359.474 971.239 358.286 970.097 356.871 969.199 cv
357.084 968.122 357.389 967.059 357.786 966.022 cv
359.006 966.7 360.107 967.519 361.075 968.447 cv
360.668 969.784 360.446 971.162 360.406 972.543 cv
.364706 .780392 .941176 rgb
f
349.988 996.003 mo
347.634 996.003 345.244 995.482 342.986 994.381 cv
335.044 990.507 331.746 980.929 335.619 972.986 cv
338.088 967.925 342.873 964.75 348.076 964.114 cv
347.669 965.238 347.319 966.384 347.028 967.549 cv
343.435 968.409 340.241 970.809 338.495 974.389 cv
335.397 980.742 338.035 988.405 344.389 991.505 cv
346.195 992.385 348.107 992.803 349.99 992.803 cv
350.089 992.803 350.187 992.802 350.285 992.799 cv
350.862 993.856 351.49 994.874 352.165 995.854 cv
351.446 995.953 350.719 996.003 349.988 996.003 cv
.529412 .803922 .960784 rgb
f
808.967 535.008 mo
802.79 535.008 796.524 533.537 790.69 530.435 cv
771.673 520.323 764.453 496.709 774.565 477.69 cv
781.575 464.507 795.075 456.992 809.033 456.992 cv
815.21 456.992 821.475 458.463 827.31 461.565 cv
831.343 463.71 834.845 466.461 837.765 469.648 cv
836.698 472.923 835.991 476.328 835.676 479.811 cv
832.861 475.162 828.794 471.189 823.647 468.452 cv
818.981 465.971 813.967 464.794 809.027 464.794 cv
797.86 464.794 787.061 470.805 781.452 481.352 cv
773.362 496.566 779.139 515.458 794.352 523.548 cv
799.019 526.029 804.032 527.206 808.973 527.206 cv
820.14 527.207 830.939 521.195 836.548 510.647 cv
837.897 508.11 838.861 505.468 839.459 502.793 cv
840.877 506.013 842.636 509.013 844.677 511.756 cv
844.297 512.616 843.883 513.467 843.435 514.31 cv
836.425 527.493 822.925 535.008 808.967 535.008 cv
847.903 498.886 mo
847.172 497.206 846.556 495.451 846.067 493.628 cv
844.916 489.332 844.566 485.009 844.926 480.82 cv
847.314 486.481 848.36 492.679 847.903 498.886 cv
.498039 .752941 .87451 rgb
f
844.677 511.756 mo
842.636 509.013 840.877 506.013 839.459 502.793 cv
841.235 494.857 839.794 486.611 835.676 479.811 cv
835.991 476.328 836.698 472.923 837.765 469.648 cv
840.804 472.966 843.211 476.754 844.926 480.82 cv
844.566 485.009 844.916 489.332 846.067 493.628 cv
846.556 495.451 847.172 497.206 847.903 498.886 cv
847.583 503.231 846.526 507.582 844.677 511.756 cv
.309804 .733333 .854902 rgb
f
68.0425 675.009 mo
55.3483 675.009 42.949 669.857 33.9892 660.456 cv
34.1132 656.527 33.7383 652.643 32.9079 648.888 cv
34.1053 648.797 35.2861 648.65 36.4471 648.452 cv
43.5592 659.449 55.6219 665.607 68.0344 665.607 cv
74.201 665.607 80.4533 664.087 86.2289 660.886 cv
104.391 650.818 110.953 627.934 100.886 609.771 cv
100.012 608.195 99.0421 606.707 97.9867 605.308 cv
98.1589 599.977 97.3063 594.772 95.5783 589.927 cv
100.993 593.843 105.653 598.982 109.107 605.214 cv
121.692 627.917 113.489 656.522 90.786 669.107 cv
83.568 673.108 75.7493 675.009 68.0425 675.009 cv
30.5802 641.395 mo
29.611 639 28.4471 636.689 27.1011 634.485 cv
28.5807 635.891 30.1666 637.192 31.8517 638.377 cv
32.1313 639.348 32.452 640.313 32.8143 641.27 cv
32.5838 641.291 32.3526 641.31 32.1205 641.326 cv
31.6043 641.362 31.0919 641.385 30.5802 641.395 cv
30.4576 625.833 mo
27.2293 622.05 24.8546 617.574 23.5478 612.735 cv
27.1899 602.119 34.6247 592.763 45.2139 586.893 cv
45.8485 586.541 46.4883 586.205 47.1317 585.886 cv
49.9388 587.803 52.4156 590.183 54.446 592.923 cv
52.8608 593.538 51.2997 594.267 49.771 595.114 cv
38.0726 601.599 31.1869 613.4 30.4576 625.833 cv
88.7984 596.667 mo
82.626 592.577 75.3584 590.393 67.9656 590.393 cv
66.0529 590.393 64.1313 590.54 62.2188 590.837 cv
60.3215 587.811 58.0142 585.08 55.378 582.716 cv
59.527 581.555 63.7589 580.991 67.9578 580.991 cv
72.8934 580.991 77.7857 581.77 82.4477 583.275 cv
85.5096 587.187 87.6984 591.762 88.7984 596.667 cv
.756863 .960784 .960784 rgb
f
33.9892 660.456 mo
31.2793 657.612 28.8862 654.382 26.8931 650.786 cv
26.5244 650.121 26.1746 649.453 25.8414 648.778 cv
27.197 648.926 28.5712 649.001 29.9615 649.001 cv
30.851 649.001 31.7501 648.97 32.651 648.907 cv
32.7366 648.901 32.8225 648.895 32.9079 648.888 cv
33.7383 652.643 34.1132 656.527 33.9892 660.456 cv
29.9693 641.402 mo
27.4673 641.401 25.0259 641.095 22.6861 640.516 cv
21.47 636.127 20.9205 631.65 20.9989 627.215 cv
22.748 629.852 24.7943 632.294 27.1011 634.485 cv
28.4471 636.689 29.611 639 30.5802 641.395 cv
30.3765 641.399 30.1722 641.402 29.9693 641.402 cv
.560784 .941176 .941176 rgb
f
32.9079 648.888 mo
32.3404 646.323 31.5598 643.817 30.5802 641.395 cv
31.0919 641.385 31.6043 641.362 32.1205 641.326 cv
32.3526 641.31 32.5838 641.291 32.8143 641.27 cv
33.4511 642.952 34.2165 644.609 35.1142 646.228 cv
35.5363 646.99 35.9812 647.731 36.4471 648.452 cv
35.2861 648.65 34.1053 648.797 32.9079 648.888 cv
.592157 .941176 .941176 rgb
f
29.9615 649.001 mo
28.5712 649.001 27.197 648.926 25.8414 648.778 cv
24.5116 646.085 23.4625 643.318 22.6861 640.516 cv
25.0259 641.095 27.4673 641.401 29.9693 641.402 cv
30.1722 641.402 30.3765 641.399 30.5802 641.395 cv
31.5598 643.817 32.3404 646.323 32.9079 648.888 cv
32.8225 648.895 32.7366 648.901 32.651 648.907 cv
31.7501 648.97 30.851 649.001 29.9615 649.001 cv
.494118 .929412 .929412 rgb
f
54.446 592.923 mo
52.4156 590.183 49.9388 587.803 47.1317 585.886 cv
49.8191 584.551 52.5813 583.498 55.378 582.716 cv
58.0142 585.08 60.3215 587.811 62.2188 590.837 cv
59.5974 591.244 56.9921 591.936 54.446 592.923 cv
.592157 .941176 .941176 rgb
f
31.8517 638.377 mo
30.1666 637.192 28.5807 635.891 27.1011 634.485 cv
25.3655 631.644 23.327 628.982 21.0152 626.554 cv
21.165 621.836 22.0247 617.175 23.5478 612.735 cv
24.8546 617.574 27.2293 622.05 30.4576 625.833 cv
30.2131 630.002 30.6608 634.243 31.8517 638.377 cv
97.9867 605.308 mo
95.3845 601.861 92.2632 598.963 88.7984 596.667 cv
87.6984 591.762 85.5096 587.187 82.4477 583.275 cv
87.1181 584.782 91.5543 587.016 95.5783 589.927 cv
97.3063 594.772 98.1589 599.977 97.9867 605.308 cv
.619608 .941176 .941176 rgb
f
27.1011 634.485 mo
24.7943 632.294 22.748 629.852 20.9989 627.215 cv
21.0028 626.995 21.0082 626.774 21.0152 626.554 cv
23.327 628.982 25.3655 631.644 27.1011 634.485 cv
.521569 .929412 .929412 rgb
f
440.049 674.505 mo
430.083 674.505 420.194 672.01 411.37 667.176 cv
412.049 665.85 412.664 664.474 413.21 663.052 cv
414.141 660.626 414.832 658.167 415.295 655.701 cv
415.4 655.765 415.505 655.828 415.61 655.89 cv
423.583 664.99 434.129 671.34 445.671 674.239 cv
443.798 674.416 441.923 674.505 440.049 674.505 cv
460.01 664.213 mo
455.342 664.213 450.74 663.516 446.346 662.184 cv
453.922 661.172 461.361 658.317 467.978 653.509 cv
482.881 642.682 489.656 624.826 487.061 607.791 cv
490.836 604.702 494.093 601.062 496.737 597.023 cv
503.851 619.47 497.08 644.729 478.369 660.48 cv
477.889 660.682 477.405 660.877 476.915 661.065 cv
471.351 663.201 465.634 664.213 460.01 664.213 cv
484.268 597.473 mo
482.826 593.84 480.912 590.329 478.509 587.021 cv
472.544 578.812 464.446 573.069 455.528 570 cv
457.019 569.857 458.508 569.787 459.99 569.787 cv
469.544 569.787 478.825 572.71 486.605 578.008 cv
487.127 578.667 487.638 579.34 488.137 580.026 cv
489.535 581.951 490.801 583.93 491.936 585.955 cv
490.106 590.221 487.505 594.132 484.268 597.473 cv
.643137 .960784 .960784 rgb
f
487.061 607.791 mo
486.528 604.295 485.6 600.832 484.268 597.473 cv
487.505 594.132 490.106 590.221 491.936 585.955 cv
493.939 589.525 495.535 593.234 496.737 597.023 cv
494.093 601.062 490.836 604.702 487.061 607.791 cv
.392157 .921569 .905882 rgb
f
404.266 662.595 mo
399.638 659.118 395.444 654.902 391.863 649.974 cv
390.108 647.557 388.561 645.053 387.218 642.483 cv
387.824 642.503 388.429 642.513 389.036 642.513 cv
392.797 642.513 396.589 642.128 400.351 641.339 cv
400.718 641.891 401.098 642.437 401.491 642.978 cv
403.325 645.502 405.36 647.793 407.558 649.844 cv
407.37 653.25 406.656 656.685 405.368 660.041 cv
405.033 660.914 404.665 661.767 404.266 662.595 cv
389.029 631.411 mo
386.889 631.411 384.761 631.255 382.661 630.95 cv
381.207 625.723 380.494 620.364 380.495 615.028 cv
382.355 615.397 384.211 615.929 386.041 616.632 cv
388.416 617.543 390.629 618.696 392.661 620.05 cv
393.051 623.743 393.878 627.415 395.151 630.984 cv
393.11 631.27 391.063 631.411 389.029 631.411 cv
.643137 .960784 .960784 rgb
f
389.036 642.513 mo
388.429 642.513 387.824 642.503 387.218 642.483 cv
385.272 638.756 383.756 634.891 382.661 630.95 cv
384.761 631.255 386.889 631.411 389.029 631.411 cv
391.063 631.411 393.11 631.27 395.151 630.984 cv
396.429 634.565 398.158 638.043 400.351 641.339 cv
396.589 642.128 392.797 642.513 389.036 642.513 cv
.392157 .929412 .890196 rgb
f
392.627 610.354 mo
391.471 609.784 390.278 609.261 389.052 608.79 cv
386.427 607.782 383.766 607.056 381.096 606.596 cv
383.291 591.219 391.468 576.714 405.026 566.863 cv
406.67 565.669 408.354 564.571 410.073 563.569 cv
409.328 568.259 409.282 573.124 410.02 578.026 cv
399.79 586.307 393.836 598.069 392.627 610.354 cv
419.014 572.268 mo
418.85 567.53 419.583 562.897 421.085 558.57 cv
421.618 558.391 422.15 558.221 422.686 558.058 cv
424.983 560.734 426.992 563.726 428.645 567.008 cv
427.105 567.972 425.621 568.999 424.194 570.088 cv
422.441 570.706 420.709 571.432 419.014 572.268 cv
438.566 562.031 mo
437.453 559.818 436.21 557.711 434.851 555.714 cv
436.55 555.568 438.252 555.495 439.951 555.495 cv
445.807 555.495 451.638 556.357 457.241 558.049 cv
451.105 558.337 444.905 559.597 438.856 561.919 cv
438.76 561.956 438.662 561.994 438.566 562.031 cv
.643137 .960784 .960784 rgb
f
428.645 567.008 mo
426.992 563.726 424.983 560.734 422.686 558.058 cv
426.679 556.843 430.757 556.066 434.851 555.714 cv
436.21 557.711 437.453 559.818 438.566 562.031 cv
435.048 563.402 431.734 565.075 428.645 567.008 cv
.392157 .929412 .890196 rgb
f
410.02 578.026 mo
409.282 573.124 409.328 568.259 410.073 563.569 cv
413.618 561.5 417.311 559.836 421.085 558.57 cv
419.583 562.897 418.85 567.53 419.014 572.268 cv
416.605 573.454 414.267 574.859 412.022 576.491 cv
411.337 576.988 410.67 577.5 410.02 578.026 cv
.392157 .921569 .905882 rgb
f
411.37 667.176 mo
408.913 665.83 406.537 664.301 404.266 662.595 cv
404.665 661.767 405.033 660.914 405.368 660.041 cv
406.656 656.685 407.37 653.25 407.558 649.844 cv
409.959 652.085 412.554 654.039 415.295 655.701 cv
414.832 658.167 414.141 660.626 413.21 663.052 cv
412.664 664.474 412.049 665.85 411.37 667.176 cv
392.661 620.05 mo
390.629 618.696 388.416 617.543 386.041 616.632 cv
384.211 615.929 382.355 615.397 380.495 615.028 cv
380.496 612.204 380.698 609.385 381.096 606.596 cv
383.766 607.056 386.427 607.782 389.052 608.79 cv
390.278 609.261 391.471 609.784 392.627 610.354 cv
392.311 613.567 392.319 616.818 392.661 620.05 cv
.462745 .917647 .941176 rgb
f
445.671 674.239 mo
434.129 671.34 423.583 664.99 415.61 655.89 cv
423.034 660.314 431.502 662.603 440.039 662.603 cv
442.142 662.603 444.249 662.464 446.346 662.184 cv
450.74 663.516 455.342 664.213 460.01 664.213 cv
465.634 664.213 471.351 663.201 476.915 661.065 cv
477.405 660.877 477.889 660.682 478.369 660.48 cv
477.278 661.398 476.145 662.285 474.974 663.137 cv
466.046 669.623 455.915 673.267 445.671 674.239 cv
486.605 578.008 mo
478.825 572.71 469.544 569.787 459.99 569.787 cv
458.508 569.787 457.019 569.857 455.528 570 cv
450.825 568.382 445.896 567.507 440.929 567.406 cv
440.438 566.11 439.895 564.822 439.3 563.545 cv
439.062 563.034 438.818 562.531 438.566 562.031 cv
438.662 561.994 438.76 561.956 438.856 561.919 cv
444.905 559.597 451.105 558.337 457.241 558.049 cv
468.489 561.444 478.818 568.182 486.605 578.008 cv
424.194 570.088 mo
425.621 568.999 427.105 567.972 428.645 567.008 cv
428.849 567.413 429.047 567.822 429.24 568.235 cv
429.294 568.351 429.348 568.467 429.4 568.583 cv
427.646 568.982 425.91 569.483 424.194 570.088 cv
.45098 .905882 .937255 rgb
f
429.4 568.583 mo
429.348 568.467 429.294 568.351 429.24 568.235 cv
429.047 567.822 428.849 567.413 428.645 567.008 cv
431.734 565.075 435.048 563.402 438.566 562.031 cv
438.818 562.531 439.062 563.034 439.3 563.545 cv
439.895 564.822 440.438 566.11 440.929 567.406 cv
440.607 567.4 440.283 567.397 439.961 567.397 cv
436.43 567.397 432.886 567.789 429.4 568.583 cv
.32549 .894118 .905882 rgb
f
304.041 618.007 mo
303.63 618.007 303.222 618.001 302.812 617.989 cv
303.095 615.166 303.078 612.283 302.737 609.381 cv
303.168 609.397 303.6 609.405 304.033 609.405 cv
310.064 609.405 316.171 607.819 321.718 604.486 cv
326.87 601.39 330.92 597.158 333.739 592.303 cv
334.104 596.11 334.871 599.922 336.058 603.675 cv
333.254 606.809 329.94 609.579 326.146 611.858 cv
319.215 616.023 311.579 618.007 304.041 618.007 cv
294.866 617.019 mo
283.687 614.587 273.499 607.727 267.141 597.146 cv
264.262 592.354 262.426 587.225 261.566 582.026 cv
262.054 582.003 262.539 581.992 263.024 581.992 cv
265.574 581.992 268.084 582.299 270.507 582.886 cv
271.303 586.266 272.629 589.582 274.514 592.718 cv
279.169 600.465 286.393 605.719 294.442 608.045 cv
295.017 611.069 295.144 614.084 294.866 617.019 cv
344.636 589.065 mo
344.378 583.485 345.184 577.953 346.95 572.747 cv
347.236 578.302 346.439 583.848 344.636 589.065 cv
269.598 574.538 mo
267.447 574.177 265.251 573.991 263.031 573.991 cv
262.358 573.991 261.682 574.008 261.005 574.042 cv
261.135 568.448 262.356 562.925 264.584 557.805 cv
268.811 557.341 272.945 556.066 276.727 554.02 cv
272.177 559.937 269.704 567.165 269.598 574.538 cv
337.375 566.627 mo
336.568 563.416 335.28 560.267 333.486 557.282 cv
327.034 546.544 315.645 540.595 303.967 540.595 cv
298.306 540.595 292.578 541.992 287.31 544.92 cv
287.441 544.747 287.57 544.573 287.698 544.397 cv
290.17 540.994 291.897 537.279 292.911 533.443 cv
296.555 532.468 300.268 531.993 303.959 531.993 cv
318.558 531.993 332.792 539.429 340.858 552.854 cv
341.543 553.993 342.17 555.153 342.737 556.327 cv
340.59 559.571 338.795 563.026 337.375 566.627 cv
268.855 550.206 mo
272.197 545.462 276.559 541.323 281.854 538.141 cv
282.804 537.57 283.769 537.039 284.744 536.55 cv
284.077 537.917 283.283 539.245 282.358 540.518 cv
278.882 545.302 274.099 548.576 268.855 550.206 cv
.498039 .768627 .898039 rgb
f
336.058 603.675 mo
334.871 599.922 334.104 596.11 333.739 592.303 cv
338.196 584.625 339.577 575.391 337.375 566.627 cv
338.795 563.026 340.59 559.571 342.737 556.327 cv
345.285 561.596 346.662 567.176 346.95 572.747 cv
345.184 577.953 344.378 583.485 344.636 589.065 cv
342.796 594.39 339.908 599.374 336.058 603.675 cv
.247059 .737255 .827451 rgb
f
264.584 557.805 mo
265.74 555.148 267.167 552.601 268.855 550.206 cv
274.099 548.576 278.882 545.302 282.358 540.518 cv
283.283 539.245 284.077 537.917 284.744 536.55 cv
287.397 535.218 290.134 534.185 292.911 533.443 cv
291.897 537.279 290.17 540.994 287.698 544.397 cv
287.57 544.573 287.441 544.747 287.31 544.92 cv
286.966 545.111 286.623 545.309 286.283 545.514 cv
282.48 547.799 279.277 550.703 276.727 554.02 cv
272.945 556.066 268.811 557.341 264.584 557.805 cv
.247059 .666667 .835294 rgb
f
302.812 617.989 mo
300.134 617.912 297.472 617.586 294.866 617.019 cv
295.144 614.084 295.017 611.069 294.442 608.045 cv
297.136 608.824 299.924 609.275 302.737 609.381 cv
303.078 612.283 303.095 615.166 302.812 617.989 cv
270.507 582.886 mo
268.084 582.299 265.574 581.992 263.024 581.992 cv
262.539 581.992 262.054 582.003 261.566 582.026 cv
261.127 579.371 260.943 576.699 261.005 574.042 cv
261.682 574.008 262.358 573.991 263.031 573.991 cv
265.251 573.991 267.447 574.177 269.598 574.538 cv
269.558 577.321 269.856 580.125 270.507 582.886 cv
.262745 .74902 .878431 rgb
f
606.997 750.007 mo
605.69 750.007 604.393 749.908 603.116 749.714 cv
604.718 747.9 606.465 746.247 608.332 744.763 cv
610.145 744.646 611.971 744.287 613.771 743.667 cv
617.512 742.379 620.649 740.131 623.001 737.294 cv
625.308 736.653 627.676 736.211 630.076 735.979 cv
627.111 741.693 622.032 746.322 615.465 748.583 cv
612.661 749.548 609.805 750.007 606.997 750.007 cv
594.099 744.418 mo
592.822 743.855 591.472 743.403 590.062 743.077 cv
589.746 743.004 589.431 742.939 589.116 742.88 cv
586.166 740.091 583.829 736.569 582.416 732.465 cv
577.741 718.888 584.958 704.092 598.535 699.417 cv
601.339 698.451 604.195 697.993 607.002 697.993 cv
617.792 697.993 627.874 704.761 631.584 715.535 cv
632.721 718.838 633.155 722.213 632.964 725.497 cv
631.204 725.534 629.456 725.66 627.72 725.875 cv
627.979 723.037 627.655 720.098 626.667 717.228 cv
623.699 708.61 615.632 703.194 607.002 703.194 cv
604.755 703.194 602.472 703.56 600.229 704.333 cv
589.366 708.073 583.594 719.91 587.333 730.771 cv
588.997 735.604 592.264 739.429 596.334 741.858 cv
595.564 742.683 594.818 743.537 594.099 744.418 cv
.509804 .827451 .960784 rgb
f
603.116 749.714 mo
602.458 749.614 601.804 749.488 601.158 749.339 cv
599.18 747.293 596.798 745.607 594.099 744.418 cv
594.818 743.537 595.564 742.683 596.334 741.858 cv
599.523 743.76 603.207 744.806 606.998 744.806 cv
607.442 744.806 607.886 744.792 608.332 744.763 cv
606.465 746.247 604.718 747.9 603.116 749.714 cv
623.001 737.294 mo
625.676 734.068 627.337 730.081 627.72 725.875 cv
629.456 725.66 631.204 725.534 632.964 725.497 cv
632.75 729.183 631.749 732.754 630.076 735.979 cv
627.676 736.211 625.308 736.653 623.001 737.294 cv
.258824 .72549 .870588 rgb
f
592.951 745.879 mo
591.587 745.005 590.302 744.001 589.116 742.88 cv
589.431 742.939 589.746 743.004 590.062 743.077 cv
591.472 743.403 592.822 743.855 594.099 744.418 cv
593.709 744.897 593.326 745.384 592.951 745.879 cv
.258824 .756863 .854902 rgb
f
601.158 749.339 mo
598.241 748.664 595.463 747.49 592.951 745.879 cv
593.326 745.384 593.709 744.897 594.099 744.418 cv
596.798 745.607 599.18 747.293 601.158 749.339 cv
.133333 .705882 .807843 rgb
f
960.464 604.895 mo
959.105 604.704 957.761 604.254 956.5 603.526 cv
953.455 601.768 951.569 598.775 951.108 595.544 cv
952.076 596.11 953.006 596.738 953.892 597.422 cv
954.611 599.129 955.872 600.624 957.6 601.621 cv
957.922 601.807 958.252 601.971 958.586 602.112 cv
959.268 602.994 959.897 603.924 960.464 604.895 cv
967.194 603.698 mo
966.871 603.037 966.525 602.389 966.16 601.756 cv
967.557 601.009 968.77 599.874 969.621 598.4 cv
972.051 594.191 970.609 588.809 966.4 586.379 cv
965.015 585.579 963.501 585.199 962.008 585.199 cv
958.966 585.199 956.009 586.776 954.379 589.6 cv
954.331 589.682 954.286 589.764 954.241 589.847 cv
953.607 589.48 952.959 589.134 952.301 588.811 cv
952.356 588.707 952.414 588.603 952.474 588.5 cv
954.511 584.971 958.209 582.998 962.011 582.998 cv
963.877 582.998 965.767 583.474 967.5 584.474 cv
972.762 587.512 974.563 594.239 971.526 599.5 cv
970.462 601.344 968.943 602.763 967.194 603.698 cv
.498039 .960784 .941176 rgb
f
961.989 605.002 mo
961.482 605.002 960.972 604.966 960.464 604.895 cv
959.897 603.924 959.268 602.994 958.586 602.112 cv
959.689 602.577 960.846 602.801 961.992 602.801 cv
963.445 602.801 964.88 602.441 966.16 601.756 cv
966.525 602.389 966.871 603.037 967.194 603.698 cv
965.596 604.552 963.805 605.002 961.989 605.002 cv
953.892 597.422 mo
953.006 596.738 952.076 596.11 951.108 595.544 cv
950.789 593.302 951.157 590.946 952.301 588.811 cv
952.959 589.134 953.607 589.48 954.241 589.847 cv
952.942 592.271 952.894 595.051 953.892 597.422 cv
.278431 .941176 .921569 rgb
f
950 370.5 mo
948.513 370.5 947.046 370.408 945.607 370.231 cv
942.193 368.954 938.886 367.23 935.763 365.042 cv
926.495 358.553 920.494 349.139 918.133 338.921 cv
923.242 353.89 936.991 364.913 953.527 365.924 cv
953.725 367.375 953.977 368.816 954.281 370.244 cv
952.877 370.413 951.449 370.5 950 370.5 cv
965.639 366.879 mo
965.513 366.225 965.402 365.572 965.304 364.913 cv
967.812 364.315 970.231 363.48 972.534 362.433 cv
970.425 364.167 968.113 365.663 965.639 366.879 cv
970.724 354.419 mo
975.485 349.34 978.4 342.51 978.4 335 cv
978.4 331.956 977.922 329.024 977.035 326.275 cv
978.771 324.36 980.648 322.608 982.644 321.026 cv
984.482 325.314 985.5 330.039 985.5 335 cv
985.5 336.323 985.427 337.631 985.286 338.917 cv
982.334 345.602 977.165 351.075 970.724 354.419 cv
924.113 323.303 mo
924.741 315.794 927.951 309.04 932.843 303.914 cv
937.928 301.101 943.777 299.5 950 299.5 cv
960.386 299.5 969.731 303.961 976.223 311.07 cv
974.345 312.499 972.548 314.045 970.84 315.706 cv
965.653 310.106 958.236 306.6 950 306.6 cv
938.485 306.6 928.571 313.453 924.113 323.303 cv
.717647 .960784 .960784 rgb
f
953.527 365.924 mo
936.991 364.913 923.242 353.89 918.133 338.921 cv
916.677 332.622 916.605 326.017 918.003 319.604 cv
921.205 312.962 926.414 307.47 932.843 303.914 cv
927.951 309.04 924.741 315.794 924.113 323.303 cv
922.498 326.87 921.6 330.83 921.6 335 cv
921.6 350.685 934.315 363.4 950 363.4 cv
951.089 363.4 952.164 363.339 953.221 363.219 cv
953.302 364.125 953.404 365.026 953.527 365.924 cv
965.304 364.913 mo
965.025 363.04 964.857 361.145 964.806 359.24 cv
966.991 357.903 968.981 356.278 970.724 354.419 cv
977.165 351.075 982.334 345.602 985.286 338.917 cv
984.249 348.369 979.503 356.702 972.534 362.433 cv
970.231 363.48 967.812 364.315 965.304 364.913 cv
.466667 .937255 .937255 rgb
f
954.281 370.244 mo
953.977 368.816 953.725 367.375 953.527 365.924 cv
954.115 365.96 954.707 365.984 955.302 365.994 cv
955.54 365.998 955.776 366 956.013 366 cv
959.209 366 962.32 365.624 965.304 364.913 cv
965.402 365.572 965.513 366.225 965.639 366.879 cv
962.139 368.599 958.313 369.76 954.281 370.244 cv
977.035 326.275 mo
975.752 322.297 973.615 318.701 970.84 315.706 cv
972.548 314.045 974.345 312.499 976.223 311.07 cv
978.885 313.985 981.066 317.344 982.644 321.026 cv
980.648 322.608 978.771 324.36 977.035 326.275 cv
.52549 .941176 .941176 rgb
f
956.013 366 mo
955.776 366 955.54 365.998 955.302 365.994 cv
954.707 365.984 954.115 365.96 953.527 365.924 cv
953.404 365.026 953.302 364.125 953.221 363.219 cv
957.43 362.744 961.36 361.349 964.806 359.24 cv
964.857 361.145 965.025 363.04 965.304 364.913 cv
962.32 365.624 959.209 366 956.013 366 cv
.403922 .929412 .929412 rgb
f
945.607 370.231 mo
928.073 368.067 914.5 353.119 914.5 335 cv
914.5 331.413 915.032 327.95 916.021 324.687 cv
916.015 324.891 916.01 325.097 916.006 325.302 cv
915.923 330.069 916.676 334.654 918.133 338.921 cv
920.494 349.139 926.495 358.553 935.763 365.042 cv
938.886 367.23 942.193 368.954 945.607 370.231 cv
.494118 .941176 .941176 rgb
f
918.133 338.921 mo
916.676 334.654 915.923 330.069 916.006 325.302 cv
916.01 325.097 916.015 324.891 916.021 324.687 cv
916.554 322.93 917.218 321.234 918.003 319.604 cv
916.605 326.017 916.677 332.622 918.133 338.921 cv
.368627 .929412 .929412 rgb
f
396.952 1000 mo
395.437 1000 li
395.936 999.7 396.421 999.387 396.897 999.058 cv
396.919 999.371 396.938 999.685 396.952 1000 cv
366.579 1000 mo
355.517 1000 li
354.302 998.712 353.18 997.328 352.165 995.854 cv
354.588 995.521 356.914 994.636 358.949 993.266 cv
361.071 995.972 363.667 998.249 366.579 1000 cv
407.412 998.968 mo
407.214 995.509 406.682 992.141 405.851 988.901 cv
408.815 983.199 409.841 976.453 408.282 969.701 cv
405.293 956.753 393.768 947.994 381.025 947.994 cv
378.938 947.994 376.821 948.228 374.701 948.718 cv
372.352 949.26 370.14 950.084 368.093 951.145 cv
364.844 950.31 361.481 949.779 358.029 949.584 cv
362.217 945.935 367.336 943.234 373.127 941.897 cv
375.776 941.286 378.425 940.992 381.031 940.992 cv
396.962 940.992 411.366 951.941 415.103 968.127 cv
417.722 979.472 414.503 990.801 407.412 998.968 cv
355.293 964.899 mo
353.559 964.289 351.775 963.997 350.012 963.997 cv
349.362 963.997 348.716 964.036 348.076 964.114 cv
348.544 962.821 349.087 961.559 349.702 960.333 cv
350.962 960.174 352.24 960.071 353.534 960.026 cv
354.034 960.008 354.531 959.999 355.027 959.999 cv
356.01 959.999 356.985 960.033 357.952 960.1 cv
356.913 961.608 356.021 963.215 355.293 964.899 cv
.8 .960784 .960784 rgb
f
406.48 1000 mo
396.952 1000 li
396.938 999.685 396.919 999.371 396.897 999.058 cv
400.696 996.437 403.758 992.929 405.851 988.901 cv
406.682 992.141 407.214 995.509 407.412 998.968 cv
407.109 999.318 406.798 999.663 406.48 1000 cv
349.702 960.333 mo
351.742 956.261 354.568 952.599 358.029 949.584 cv
361.481 949.779 364.844 950.31 368.093 951.145 cv
363.966 953.284 360.511 956.389 357.952 960.1 cv
356.985 960.033 356.01 959.999 355.027 959.999 cv
354.531 959.999 354.034 960.008 353.534 960.026 cv
352.24 960.071 350.962 960.174 349.702 960.333 cv
.627451 .941176 .941176 rgb
f
350.285 992.799 mo
348.788 990.057 347.635 987.067 346.897 983.873 cv
345.612 978.305 345.733 972.738 347.028 967.549 cv
348 967.317 349.001 967.197 350.01 967.197 cv
351.406 967.197 352.818 967.426 354.191 967.904 cv
352.82 972.428 352.578 977.362 353.718 982.299 cv
354.417 985.327 355.583 988.126 357.122 990.638 cv
355.1 991.989 352.723 992.743 350.285 992.799 cv
.8 .960784 .960784 rgb
f
352.165 995.854 mo
351.49 994.874 350.862 993.856 350.285 992.799 cv
352.723 992.743 355.1 991.989 357.122 990.638 cv
357.683 991.553 358.294 992.43 358.949 993.266 cv
356.914 994.636 354.588 995.521 352.165 995.854 cv
354.191 967.904 mo
352.818 967.426 351.406 967.197 350.01 967.197 cv
349.001 967.197 348 967.317 347.028 967.549 cv
347.319 966.384 347.669 965.238 348.076 964.114 cv
348.716 964.036 349.362 963.997 350.012 963.997 cv
351.775 963.997 353.559 964.289 355.293 964.899 cv
354.87 965.877 354.502 966.88 354.191 967.904 cv
.568627 .862745 .941176 rgb
f
380.969 11.0078 mo
371.213 11.0078 362.029 6.90117 355.517 0 cv
366.579 0 li
370.854 2.56987 375.815 4.00568 380.976 4.0061 cv
383.062 4.00627 385.179 3.7717 387.299 3.28235 cv
390.246 2.60187 392.977 1.47865 395.437 0 cv
396.952 0 li
396.961 .177674 396.968 .355799 396.974 .534076 cv
397.055 2.83328 396.949 5.09403 396.67 7.30526 cv
394.242 8.51831 391.634 9.46558 388.873 10.1031 cv
386.225 10.7145 383.576 11.0078 380.969 11.0078 cv
.8 .960784 .960784 rgb
f
396.67 7.30526 mo
396.949 5.09403 397.055 2.83328 396.974 .534076 cv
396.968 .355799 396.961 .177674 396.952 0 cv
406.481 0 li
403.706 2.95121 400.401 5.44125 396.67 7.30526 cv
.627451 .941176 .941176 rgb
f
591.946 578.008 mo
581.629 578.008 571.188 575.208 561.795 569.339 cv
535.098 552.657 526.979 517.491 543.661 490.795 cv
554.474 473.491 573.051 463.992 592.054 463.992 cv
600.447 463.992 608.921 465.844 616.848 469.696 cv
613.344 471.99 610.294 474.888 607.831 478.227 cv
602.694 476.32 597.346 475.394 592.043 475.394 cv
576.84 475.394 561.98 482.992 553.329 496.836 cv
539.983 518.193 546.478 546.325 567.836 559.671 cv
573.355 563.12 579.328 565.244 585.38 566.128 cv
589.14 570.775 593.617 574.632 598.564 577.623 cv
596.371 577.878 594.161 578.008 591.946 578.008 cv
614.429 573.407 mo
609.078 571.97 604.024 569.452 599.622 565.959 cv
609.068 564.355 617.976 559.797 624.862 552.627 cv
625.894 552.989 626.981 553.246 628.111 553.385 cv
628.753 553.464 629.389 553.502 630.019 553.502 cv
635.382 553.502 640.246 550.721 643.038 546.388 cv
642.224 548.019 641.324 549.628 640.339 551.205 cv
633.924 561.471 624.777 568.989 614.429 573.407 cv
630.016 550.401 mo
629.512 550.401 629.002 550.371 628.489 550.308 cv
628.031 550.251 627.581 550.171 627.142 550.067 cv
628.408 548.532 629.588 546.898 630.671 545.164 cv
632.899 541.599 634.574 537.845 635.719 534.002 cv
635.798 534.003 635.878 534.003 635.957 534.003 cv
637.179 534.003 638.416 533.939 639.658 533.809 cv
640.305 533.741 640.944 533.656 641.578 533.554 cv
642.285 535.39 642.564 537.421 642.308 539.511 cv
641.536 545.796 636.19 550.402 630.016 550.401 cv
644.925 542.19 mo
645.133 541.446 645.288 540.678 645.385 539.889 cv
645.683 537.457 645.401 535.087 644.648 532.92 cv
645.778 532.633 646.884 532.292 647.964 531.901 cv
647.287 535.38 646.278 538.822 644.925 542.19 cv
640.537 526.631 mo
639.619 525.779 638.594 525.034 637.481 524.42 cv
638.304 513.352 635.055 502.235 628.257 493.325 cv
633.811 493.776 639.227 495.36 644.145 497.967 cv
647.719 506.078 649.375 514.95 648.939 523.839 cv
646.363 525.182 643.54 526.141 640.537 526.631 cv
635.447 484.08 mo
632.011 483.359 628.495 482.99 624.956 482.99 cv
622.614 482.99 620.262 483.152 617.917 483.48 cv
617.345 483.085 616.76 482.701 616.164 482.329 cv
615.563 481.953 614.957 481.594 614.346 481.249 cv
616.913 478.118 620.157 475.538 623.882 473.75 cv
628.289 476.719 632.154 480.207 635.447 484.08 cv
.498039 .894118 .815686 rgb
f
630.019 553.502 mo
629.389 553.502 628.753 553.464 628.111 553.385 cv
626.981 553.246 625.894 552.989 624.862 552.627 cv
625.649 551.808 626.41 550.954 627.142 550.067 cv
627.581 550.171 628.031 550.251 628.489 550.308 cv
629.002 550.371 629.512 550.401 630.016 550.401 cv
636.19 550.402 641.536 545.796 642.308 539.511 cv
642.564 537.421 642.285 535.39 641.578 533.554 cv
642.619 533.387 643.643 533.174 644.648 532.92 cv
645.401 535.087 645.683 537.457 645.385 539.889 cv
645.288 540.678 645.133 541.446 644.925 542.19 cv
644.357 543.604 643.728 545.005 643.038 546.388 cv
640.246 550.721 635.382 553.502 630.019 553.502 cv
637.218 526.974 mo
637.33 526.125 637.417 525.271 637.481 524.42 cv
638.594 525.034 639.619 525.779 640.537 526.631 cv
640.006 526.717 639.468 526.79 638.927 526.847 cv
638.354 526.907 637.786 526.949 637.218 526.974 cv
.341176 .85098 .796078 rgb
f
635.957 534.003 mo
635.878 534.003 635.798 534.003 635.719 534.002 cv
636.326 531.965 636.785 529.901 637.097 527.829 cv
639.125 529.246 640.69 531.246 641.578 533.554 cv
640.944 533.656 640.305 533.741 639.658 533.809 cv
638.416 533.939 637.179 534.003 635.957 534.003 cv
644.648 532.92 mo
643.81 530.511 642.391 528.352 640.537 526.631 cv
643.54 526.141 646.363 525.182 648.939 523.839 cv
648.808 526.53 648.484 529.228 647.964 531.901 cv
646.884 532.292 645.778 532.633 644.648 532.92 cv
614.346 481.249 mo
612.226 480.056 610.048 479.05 607.831 478.227 cv
610.294 474.888 613.344 471.99 616.848 469.696 cv
618.665 470.579 620.453 471.567 622.205 472.661 cv
622.772 473.016 623.332 473.379 623.882 473.75 cv
620.157 475.538 616.913 478.118 614.346 481.249 cv
.352941 .87451 .796078 rgb
f
641.578 533.554 mo
640.69 531.246 639.125 529.246 637.097 527.829 cv
637.141 527.543 637.18 527.26 637.218 526.974 cv
637.786 526.949 638.354 526.907 638.927 526.847 cv
639.468 526.79 640.006 526.717 640.537 526.631 cv
642.391 528.352 643.81 530.511 644.648 532.92 cv
643.643 533.174 642.619 533.387 641.578 533.554 cv
.27451 .85098 .784314 rgb
f
598.564 577.623 mo
593.617 574.632 589.14 570.775 585.38 566.128 cv
587.567 566.448 589.766 566.606 591.957 566.606 cv
594.531 566.606 597.096 566.388 599.622 565.959 cv
604.024 569.452 609.078 571.97 614.429 573.407 cv
609.369 575.567 604.019 576.987 598.564 577.623 cv
644.145 497.967 mo
639.227 495.36 633.811 493.776 628.257 493.325 cv
625.417 489.603 621.958 486.267 617.917 483.48 cv
620.262 483.152 622.614 482.99 624.956 482.99 cv
628.495 482.99 632.011 483.359 635.447 484.08 cv
639.042 488.307 641.954 492.993 644.145 497.967 cv
.32549 .87451 .796078 rgb
f
545.98 475.503 mo
542.332 475.503 538.636 474.574 535.25 472.619 cv
524.967 466.682 521.443 453.533 527.381 443.25 cv
531.363 436.353 538.59 432.497 546.02 432.497 cv
549.668 432.497 553.364 433.426 556.75 435.381 cv
567.033 441.317 570.557 454.467 564.619 464.75 cv
560.637 471.647 553.41 475.503 545.98 475.503 cv
546.016 436.797 mo
540.071 436.797 534.29 439.882 531.104 445.4 cv
526.354 453.627 529.174 464.146 537.4 468.896 cv
540.109 470.459 543.066 471.203 545.984 471.203 cv
551.929 471.203 557.71 468.118 560.895 462.6 cv
565.645 454.373 562.826 443.853 554.6 439.105 cv
551.891 437.541 548.933 436.797 546.016 436.797 cv
.498039 .815686 .905882 rgb
f
214.183 830.991 mo
194.959 830.57 179.344 815.025 179.005 795.628 cv
178.659 775.749 194.493 759.352 214.371 759.006 cv
214.585 759.002 214.801 759 215.014 759 cv
220.749 759 226.181 760.347 231.004 762.744 cv
231.693 766.4 232.732 769.986 234.108 773.452 cv
229.018 768.936 222.321 766.2 215.01 766.2 cv
214.839 766.2 214.669 766.201 214.498 766.204 cv
198.594 766.482 185.927 779.6 186.204 795.503 cv
186.479 811.234 199.319 823.799 214.99 823.8 cv
215.161 823.8 215.331 823.799 215.502 823.796 cv
216.078 823.786 216.65 823.759 217.217 823.716 cv
216.537 825.023 215.913 826.374 215.35 827.769 cv
214.918 828.837 214.53 829.911 214.183 830.991 cv
224.518 829.727 mo
228.313 821.393 234.877 815.114 242.669 811.545 cv
243.14 812.993 243.712 814.418 244.382 815.805 cv
239.637 822.495 232.663 827.502 224.518 829.727 cv
247.814 800.138 mo
247.873 798.259 248.126 796.386 248.572 794.55 cv
249.347 795.266 250.143 795.963 250.964 796.642 cv
250.92 797.63 250.836 798.608 250.713 799.574 cv
249.739 799.732 248.774 799.919 247.814 800.138 cv
243.175 789.01 mo
243.158 788.928 243.141 788.849 243.123 788.767 cv
243.156 788.807 243.189 788.847 243.222 788.887 cv
243.206 788.928 243.191 788.97 243.175 789.01 cv
.572549 .823529 .905882 rgb
f
214.986 831 mo
214.718 831 214.45 830.997 214.183 830.991 cv
214.53 829.911 214.918 828.837 215.35 827.769 cv
215.913 826.374 216.537 825.023 217.217 823.716 cv
228.128 822.883 237.296 815.991 241.436 806.444 cv
241.714 808.168 242.125 809.872 242.669 811.545 cv
234.877 815.114 228.313 821.393 224.518 829.727 cv
221.682 830.502 218.703 830.94 215.628 830.994 cv
215.415 830.998 215.199 831 214.986 831 cv
248.659 807.797 mo
248.015 805.291 247.733 802.709 247.814 800.138 cv
248.774 799.919 249.739 799.732 250.713 799.574 cv
250.351 802.431 249.652 805.186 248.659 807.797 cv
.423529 .803922 .886274 rgb
f
244.382 815.805 mo
243.712 814.418 243.14 812.993 242.669 811.545 cv
244.364 810.769 246.118 810.12 247.913 809.607 cv
246.94 811.796 245.754 813.871 244.382 815.805 cv
243.066 801.492 mo
243.583 799.247 243.837 796.904 243.795 794.497 cv
243.763 792.618 243.55 790.783 243.175 789.01 cv
243.191 788.97 243.206 788.928 243.222 788.887 cv
244.861 790.876 246.645 792.768 248.572 794.55 cv
248.126 796.386 247.873 798.259 247.814 800.138 cv
246.206 800.505 244.621 800.957 243.066 801.492 cv
.396078 .8 .886274 rgb
f
242.669 811.545 mo
242.125 809.872 241.714 808.168 241.436 806.444 cv
242.123 804.861 242.671 803.205 243.066 801.492 cv
244.621 800.957 246.206 800.505 247.814 800.138 cv
247.733 802.709 248.015 805.291 248.659 807.797 cv
248.426 808.409 248.177 809.012 247.913 809.607 cv
246.118 810.12 244.364 810.769 242.669 811.545 cv
.321569 .792157 .878431 rgb
f
250.964 796.642 mo
250.143 795.963 249.347 795.266 248.572 794.55 cv
249.024 792.692 249.674 790.871 250.522 789.123 cv
250.803 790.834 250.963 792.587 250.995 794.372 cv
251.008 795.134 250.997 795.891 250.964 796.642 cv
243.222 788.887 mo
243.189 788.847 243.156 788.807 243.123 788.767 cv
241.791 782.725 238.564 777.406 234.108 773.452 cv
232.732 769.986 231.693 766.4 231.004 762.744 cv
238.496 766.468 244.517 772.73 247.928 780.424 cv
245.924 783.053 244.356 785.905 243.222 788.887 cv
.431373 .803922 .886274 rgb
f
248.572 794.55 mo
246.645 792.768 244.861 790.876 243.222 788.887 cv
244.356 785.905 245.924 783.053 247.928 780.424 cv
249.14 783.16 250.022 786.075 250.522 789.123 cv
249.674 790.871 249.024 792.692 248.572 794.55 cv
.345098 .792157 .878431 rgb
f
838.933 415.008 mo
814.477 415.008 792.731 398.66 786.066 374.952 cv
788.781 371.619 791.968 368.78 795.482 366.492 cv
795.501 366.622 795.521 366.753 795.542 366.883 cv
798.973 388.552 817.68 404.006 838.945 404.006 cv
841.234 404.006 843.551 403.827 845.883 403.458 cv
846.334 403.386 846.783 403.308 847.228 403.224 cv
845.941 407.45 844.066 411.382 841.712 414.938 cv
840.783 414.985 839.855 415.008 838.933 415.008 cv
855.908 412.345 mo
857.309 409.085 858.417 405.655 859.196 402.076 cv
859.114 405.282 858.654 408.512 857.792 411.701 cv
857.17 411.926 856.542 412.141 855.908 412.345 cv
869.277 405.932 mo
869.716 401.374 869.537 396.826 868.782 392.396 cv
879.249 382.755 884.851 368.226 882.458 353.117 cv
879.026 331.448 860.319 315.993 839.054 315.993 cv
836.765 315.993 834.449 316.172 832.117 316.541 cv
820.402 318.397 810.503 324.717 803.881 333.492 cv
799.077 333.496 794.374 334.115 789.862 335.283 cv
797.555 320.022 812.228 308.555 830.397 305.677 cv
833.31 305.216 836.209 304.992 839.068 304.992 cv
865.651 304.992 889.033 324.308 893.323 351.396 cv
896.807 373.396 886.73 394.413 869.277 405.932 cv
784.041 362.266 mo
783.848 357.715 784.223 353.245 785.11 348.931 cv
789.012 347.132 793.192 345.878 797.536 345.252 cv
796.448 348.302 795.691 351.491 795.301 354.771 cv
791.258 356.753 787.468 359.265 784.041 362.266 cv
.498039 .717647 .917647 rgb
f
785.11 348.931 mo
786.092 344.154 787.702 339.568 789.862 335.283 cv
794.374 334.115 799.077 333.496 803.881 333.492 cv
801.194 337.053 799.047 341.017 797.536 345.252 cv
793.192 345.878 789.012 347.132 785.11 348.931 cv
.333333 .698039 .898039 rgb
f
841.712 414.938 mo
844.066 411.382 845.941 407.45 847.228 403.224 cv
851.485 402.416 855.489 401.014 859.166 399.12 cv
859.211 400.102 859.222 401.088 859.196 402.076 cv
858.417 405.655 857.309 409.085 855.908 412.345 cv
853.235 413.205 850.464 413.87 847.603 414.323 cv
845.629 414.636 843.664 414.839 841.712 414.938 cv
f
857.792 411.701 mo
858.654 408.512 859.114 405.282 859.196 402.076 cv
859.429 401.01 859.632 399.93 859.805 398.839 cv
859.808 398.818 859.811 398.8 859.814 398.779 cv
863.089 397.022 866.095 394.87 868.782 392.396 cv
869.537 396.826 869.716 401.374 869.277 405.932 cv
865.736 408.27 861.889 410.217 857.792 411.701 cv
786.066 374.952 mo
785.486 372.89 785.02 370.772 784.677 368.604 cv
784.34 366.48 784.13 364.364 784.041 362.266 cv
787.468 359.265 791.258 356.753 795.301 354.771 cv
794.846 358.583 794.888 362.516 795.482 366.492 cv
791.968 368.78 788.781 371.619 786.066 374.952 cv
.247059 .658823 .898039 rgb
f
859.196 402.076 mo
859.222 401.088 859.211 400.102 859.166 399.12 cv
859.383 399.008 859.599 398.895 859.814 398.779 cv
859.811 398.8 859.808 398.818 859.805 398.839 cv
859.632 399.93 859.429 401.01 859.196 402.076 cv
.164706 .65098 .890196 rgb
f
grestore
%ADOBeginClientInjection: EndPageContent "AI11EPS"
userdict /annotatepage 2 copy known {get exec}{pop pop} ifelse
%ADOEndClientInjection: EndPageContent "AI11EPS"
grestore
grestore
pgrs
%%PageTrailer
%ADOBeginClientInjection: PageTrailer Start "AI11EPS"
[/EMC AI11_PDFMark5[/NamespacePop AI11_PDFMark5
%ADOEndClientInjection: PageTrailer Start "AI11EPS"
[
[/CSA [/0 ]]
] del_res
Adobe_AGM_Image/pt gx
Adobe_CoolType_Core/pt get exec
Adobe_AGM_Core/pt gx
currentdict Adobe_AGM_Utils eq {end} if
%%Trailer
Adobe_AGM_Image/dt get exec
Adobe_CoolType_Core/dt get exec
Adobe_AGM_Core/dt get exec
%%EOF
%AI9_PrintingDataEnd

userdict /AI9_read_buffer 256 string put
userdict begin
/ai9_skip_data
{
	mark
	{
		currentfile AI9_read_buffer { readline } stopped
		{
		}
		{
			not
			{
				exit
			} if
			(%AI9_PrivateDataEnd) eq
			{
				exit
			} if
		} ifelse
	} loop
	cleartomark
} def
end
userdict /ai9_skip_data get exec
%AI9_PrivateDataBegin
%!PS-Adobe-3.0 EPSF-3.0
%%Creator: Adobe Illustrator(R) 10.0
%%AI8_CreatorVersion: 16.0.0
%%For: (Zydd) ()
%%Title: (g_bcgr_geom_opac_003_023.eps)
%%CreationDate: 6/12/2017 7:46 PM
%%Canvassize: 16383
%AI9_DataStream
%Gb!R&Bic6JZ7^GfpKIM;j;AAh.l45H^t;+MT(!"DSo#VRa9W)Fn92SD_u8s]SqsIG$&QL1qd@_*^"Y-7aJd1]N/Soi\92SlGMM"l
%GBXjMs.68j<QOBr,d$j[<d\ldr5YpD:YK_kK9K\WN<'LeO&%P/)f.).pi<Q`I*h."^$bW`XheDEfBMr5F-WT:)r8Yp`\.5<W-iE(
%3k^#C(-@N<5)lO+c+^Bi40@%>s.F@2Z*f8"1uETJ])dm8"Sg3u]C/N+kc=C-d1K5D\,h'EmGl1V,O&G3cd_-eXki^/W8BRLpUX_0
%!Estf"nd3-YTZ4BZFPjes%Lh$Q0$Rlj1'.Uc`@PKki:'4"Xmt4Y7C*IJ4EagOQPLnr/[$@pu7505?3F;++fK%_Im./PuO@HqXlV8
%T`r4YPr,8.FW@'o*e81+Qq4=:7dK!:dl;+4HSb:l9sFHnjrh&%nlc]QO8,nYMZ.`ao,@kWn>3SmC:F1"=*`5/Cq'92h:;Bmlg=_G
%GGLBIiIBhtDiZu^rk!(FLmCX(G<m#D7;ofg+o!44eP:a(ASG3CDhQbVoQOM0Zk7YUA$#PID7f_TQcB>HNPA]MAL]n)eR>Mjd<j38
%<jO&N][-@A)-[Eu<j\,>i3T/MLT`7!$4IcD@qJbd:##)9^V/CicK1k4muRA5mGVAn]&Mfn-GS\9rsedR,F(+KUSCjK-X5j(9.roL
%3iTepa&?'NgIo3^/H5^"0%,4:dT5i/G2odD5PR0(EI8V$_-_S>fqST8/eJ'S+"u_7s8@*'R!sG<mi<K6mI'WGq2_NOG&OE]+gUsH
%MYoM@RGpHqIs:Cs[7:%4qOI)o4iGE/"S1qPpTIVqG?@1:I+.:s=#M#r_i#Xeh.^sMr<iR$i*L4!7DCZmL-t=Fmk09Z?LhO*H,P=P
%k/8Li!%@efO[m)4csE@>A\7MJlR2Ws./6'.D"JZ@H:@V@dlHPHX4OP_rnTW%qSpo(SYiOWp7NO1r]IG,o&W<=>lX\/X4M%r%LRmN
%Di2jW>$L@aIeQiDaQsuZp*q#p?>$dV!YBi"m[O3<N4C\S.=`d/J:>/BaHmg9:4'J-38A:.-fL]eHh!b-`a3<p20m_"4`U+liaLjl
%Y0qC^9sh4^-It<@Uc9$"rEkPZjrU'q>Q%%+h)^<-nToE5>nXQ1p#GaCC\YVi#DZ-t.dMG@6[T?aeIppSDt]_i6s0XlX60hF+MU4H
%+8t#0OkdMA]\E<bQiF)0&S7T0Nq@J*EpmT"TN.C+R.W@O)m'/iWP$)4AW>n@"5gbfIqgT/T[_Jm$e?9rOD(a>*tr573:'!Q"*-9^
%_r(7T)1D?Qhu/IDGND9To@KeDrD39Pd.0!$M%l'Vp](&MauuI5+*^tr'W"Bl^H/P;*>6FFRE"QpMpm)Pn)P5Yn3:$cP7$R?-N/..
%858Wuhg7q1KQQ:oN)*SArg.su-1[h$rBU&UjPLWVPM_u*KLg3f:bF\eBLgkSIP:^&qZ_PYRol7Os)7^B8o0Ljs!P5ZJ#(>uIRF_!
%-,t92q"mt(G=\b#LQBp:N\i5b,r-bGE+/f(]^gT"+'u%^,i/),.dgB8rdE/X&jV_L]\hR,5&(PtU%NlL&`G>Ic%"t,-+N)D]<g=3
%FX*-Rgj;Y3V"bi-*;tlW7TT8,GOYR77XoBl[&R]i^D`['!Z4-1:''_0!>=?821s:@s0#e0XYuZpl67`I91g]394!ei/6<_e^U]4$
%pQP"<\u1ZS1=8k#\_l,Tcm3\Zs5p3RcPJp=]au!,fBpRYVfa0.\B*G'j"DL06Bd@phSK6.A)U&(o(S0Y\\Ba\9>LPX:B*Pi7HXja
%W-&[%FO49?Vd9SbYX@hnd;q/\kb*(JfVUV$?Q^]na2HccNnW<C=J,d[4-@49Xk\9XC31q(LQ1\+-mY()Me'e,V@FMsrS]NSGD!fi
%d7Li;Vk(/WbLq=@Y[*1EV=CTuYL=TA<e";P+!:/*D]8d6o%O,m3f0-o@9(Ds:tb<#h!,n%<Hc@Z3t&J[keU2%fn,9>h*<?]6fjDg
%]maP>4uhu7q/BfT!2S",g?LQlgQa**XXB,b!0H<i*?7!$rAO[&]%YnlYF%hW;sdB"<ma=knV(CqqlO<@SI=4+`4O8LPFW2`au#Ur
%>Gg@ai#rQP)RAaNd+gT`C39Jj%+^3WV++eQl[EWrlMoD7Cpa1i`:e[jX5.J3rB5On&Kq/k"qS=].r1.4mP15^YBu&D:7:tVU:&f@
%5,\l1hd9#-1^QtM.FTnXC5sbi`DC,;c8_3jMq2:>fZ8*J0ml_9@ZlisYE"YRBfDY?BM-qr)-eI[pZkUVO#ro&f(Z<G!1,<.q>STc
%nX,Iu'qY*eCTX/&Q%'kbO+T5rhmRb'7Y/aqQ;i$b`?Ci>[(EH_&\Y.OJs+74gFo@@);:CL)eA;9k\+\kJ1<"]p+kJg04OT-FpD*W
%)P'@,3GDic`uO5'XS5esIgF5DE6a8OVgV,5)Zorp[(gg)B2uSk15I=4`R0crd_^TB(jr['IC*(GQ1U**^&E1jHbq4<\bECR2#;R(
%TS*mS,JMEdZ_JU^r]Y8n]-iu'ITc&\O#D`EWJp@7A*iiaDdVu$9_^N\1E1hZo#C6W"-pT*kr*mbo/[ok_EO;!601B;>HMaNUR]ef
%58*-;gOo%V4\g"!f:6sXY7\3h4OK`Q?hacO'p<9DSJn7b*<HdV]T+R-S99,S0ubO+];<%+hN$s71"]Qi_q%WFYS"+!+j[aYE@rrN
%V"`r1V6Y?/WCC9&S`HK&*4IH%f7.;<!.E^E$-ip]QN3Ym@&%\=XI&unE60<D1X;Ofl1Ti:;l/=3F/Ls1(T_`8)),=]HUDl;hTt%Z
%m>s^\kq0Lp#oeN7UDocL3FIL<p>Hc]FT2K)T7lO>BKCb]8F2rN8ifB)co?G#\^L"0ZcU7P]OFas^d:9OD;i(!K#PF]6BAYF-W,cS
%Zku57J!`L`i2BT/(0jOMYtgMQ!^+>bPl<IH&%<&\/'tsh'o1Q,@MSp]&9?2\4Zr($\20]aT_R;Ia/$$fC*tA0s&B\m/t<9W<u/Bh
%Bi&[%(tUgE**j!DW-<JMK`]s]4oYpO"aI(l1gHb(g/W7OCfe(EXt9<=/*ih5]eI/^EbLItUNpn):5:l[aTPabB4oRP+)^Nmgt6sd
%0K,`P3>Ju,KD'2l/?\YK]Y9(]^%61uA8eC%3N8]G5!B0TmA#;#rAjga)LW^f;ss9n@)[1PR_:>ep*1F0B?^OOKrEWj*8"E0rU!dl
%haZg3Bd$9)g`]8#fB`H4DD%F\`e%n-gP"Cu&)OFZ]`TKUm^#j6WF1?jUXL]sSI>5E3AV[4%m/%NcT%L!W7`2]\X*WdLs4ASa5N7c
%dL5@t%PP%+&b)k.*:=m7f32H>c-AG+!B,HPIHC`G0KH:/N,]%QmJ*IMd?'&s3h(B@!L?K*W)4qfU<04ZFO$LSZemi,%gEqJS&G/K
%E;e4%o"!)#T4=qL+.W!*LXVo+n9bNu!e"%>f6P/C3Fbhg5A9]`#:Cq1!-CfhSI\u&A.g!OFH:1kST@Oj!BTT9oX\ZVI=N7VD\YBK
%-G?M^:%tjB=_]L=CpftpSb:D9[;Kch!WU6o:f,Z`PSp!tLB'l>VgAo^NWQpa0u:up*!$QC&4P;6CUF/m3eBSk9Cr\F@j8W#?uFEG
%s6mkZW3=/cPFbETrVfC/(-BkiJaSPLScTbJA'+*pl.lgM`T_IS-jdPmT*hJqA(1QC"gW@)4R9poLr!5tT-:Y(04n(R(jM&F68m<N
%!YU.%G)j2ZZSm^A76A690U!qqfLE>S>ToU<G-8g24=FuB;t"Je[E<)sMbJUU*k*Y,VUd\5^&Bcmq+I>lR2qAq=4[?t.?jr<)lqdX
%CR6b&nL$4*r]X6])aa7Yp<GOL7H'cT''G+)&SpA-#PSN%`)C[ZrUHPgghSP%ccN&+4WdfbVTXFRD!5eeh>VW!o=EK0Bbc^S%X)hI
%4mk8;Tt,3*ZZt9OoWcT<20`sLo8-=lRkQa8oNC1Eq<`sZYR<RqllY<p7(<C)LQ+#a;=m_gPCSifp60s"P<Sm:DIK$!HqEX`^KN;3
%Wbro%>4iQcO7U0PS^)NhhM^B\a<NL-=/3eGl<d="3)4ceTCoY`glA[In(qM8pSQHlQ_$D6flF-M#R('o5'hAKo?@-pK0/fH+(h.5
%gTRW8$iS*NHZQgTCX6%bbtd(tC,]m[S+b[%'mjG.iSEOL0@E@3CL?MB=Qghch<KlHiGY\P]oaRmje'`.ZcUIGqql.4(Zo?@#7H1I
%qAqe3iVqQ=ILc&;BQ<dgS$dtG['dWtIdjSP>cZ]6*IHAkp.'G%>@,!#k<;$m>5n>?1&Y(BXWR2d#./hLHSZ3"NT8RNo]G;qcd&(U
%HHbqTnn`(c[[So9\G'o*J#R?;e_Zqte2#h7f7j&!eZT@%KA+/co'EL=eZ$UD47j@rYLO`P?QCfgI,/n&SV>@E\Xg^QUSU-J8WBgm
%O5%iP[J"BErm@925t"*OQG2a8ld;Wb^QtL05J=L-ofmBGf;gjA6H"Z!p+\]Wr1'3iXu*ID;bMK%p\XRT>NYY'ilg!s1CHj"hQ8E<
%Npf/Zs6Rb^rFWC@O&,/2Q(><GH*g332-dnEo>b,5gU$:dcE0T\Wr8>=a7Zk5gV5Fnl%T#\p'a+(hLGQJU#'YC3LG*]ir2)bnDusj
%\U/rL;suZ;WgWfG<M4.\59%85Q#h.QDUTlcF7#fN%=6.]`Ik/TChp<9?6@6.5-E^F=F*#X@rl3>A-c:CIeqaSGj(H>he)$.Dh"A-
%>;s8OhM9ok1o6!$mL?gpcZ[dOl!gV50()NiC>>KN\(;8cou;pOH]@jUX4LrIp$ilW+20HF#,0'_>M#LEr5[%!ebSuSIWOV]^b<s8
%r"*]@UOGfspd6h.nDVNk?@K9Y+<oNe0RnTLkK@fA2@GBKhlF^IIgeUp4tB2!3[@!c4a7@5<m'<2f+s^fo5ZLn#*2[Zao6,-2jSs=
%/FVA@rbJ@X\8u`=DS:B1?JkVKY5W0Mnb)IuHMc=2YHN"<Mci_<DL@cSrFEB%XaF2+mhaF`oiJ3;5<$>1[=?nWpNI*bmB/)/gf:_9
%%t?S5G.T\\TO7_An@\a8mI'Srjlu0qZ9%eb$O^>M*$*VebWL4/pa&jbBROCLrl3@YqSok:j716^=PV=sj=fO\s&tFtSN,i`&u'SO
%5&K32eN`1</LRT+((BYaq&f4/bHse-cH\!7_RG`tCNOR>0/n@uZ@*e]%?>_)0UqW24^38<s8G^^^6tTR]`2JaC?KlET$2,#daL.i
%bmPhm.q4RsL=YY>mDJ1b4o9DPAS/'Q3o$pW#9S;?fW;8mA"tXfG9,J9ak`=jg>,sN\GONpDsQhThE:TT?9d\e+$kASnOdqI.nk7@
%@DDJ_M&oUQGd0D!LX!`@]X[ZTIhKF'>(V,!dHqM:XQW&::1&ruT;1#=e#tk-=-p6hHKO2H+,FhV:6"Ddgf[occJ5.r^3\+<:JEut
%5Kci.^A$[Wmc)Qfm=WAQpO06ZZ1m3(iHROb+?3VomCh#M\#\q<rU%ne*?+YEp7e*\gP\Sbo^^:u-^Nu`mE(L#o)?Ojr'[G14TE!$
%<Yop$I)(%-@sKT\gT80%eJsObh6+NKptYC(44SU?h1fqNNu8#kSgEudqbr:;ebR7#WcZa?H@*+u?5A\UV5%6@>K86m%t8@*--qET
%Z(\(Ugb'2k=s!k95A'=J*UM/Kh7Sk%WoMCfqYH7c9C^V1s049XA>r$@5Mjk7Y]b@jI6.@6?U*C<LVGSuc8>C[@%lJJ].L4fbc(8"
%c9HW_e912)j$rV+kjq.3I-P*nrn1UOSu_7iI!YMV6(h!q*n#7lL%9G&GEGDR0kJ^$*;OtsG:=X0P<M]rf.n`ac^u>9"P_lb_***;
%T7/C#8-D,8O!t>;<#H94k$\!1NY;0,LhHV>bE3d<$.L[F,(^m]1M)dnCO0u+^5LWg?MkWK5IjAid3kQt2BQ"UnB#K15:R+lG4]O@
%T\_i+Im2K-X3&\[qR2J=jSYLq,05pr](7\tnuY)\>WcWjD,#Jo^\]c]]SYTWoX2a8H4d+grq"$TWCBoVi.ca(VW$op7un='g2&D4
%>'LPJ.7Y8**Vg@qKAXp&gZ+7+n`eb2H!\De1;7)m"$^DGHHC8S1%H&.bo4A2f9J9cC"@85LPp=ri\W&IYeVtc:5N1d_Ohp14;IYP
%W?3/gh[ElFkc:!1"%n-B`L+S!OY\^#Hr/\"r2cO\h#QAWQi#Q4_lNc&-<Jo8`S2IE&q8VAqHn)/IP#QVZ=qJ2Gl"dqQ%.dB@3RJY
%4'tI"_RoK#pWpIP$[5bnA-_JbZMY"$/kOCF[FH?P50g9:]3Bni93PP@51]e72bBWEhI"pJnSWQMrU'L!8ot$aD38Z]*@!XlICcsf
%ejX1/g"_.d2JVb9WQVp(ksqH]^4&-AALR1?m'5Wk_YZDn@;53*mAK(/c[RO4VmQ64<I`b/I^QEZXhP&$[^0qG7NXG(VT%?6V"9#K
%qI?pWo%/6?Va$B=qYkH13P09LdE_#lag>$*>J&(\].6[3.MjU3c]5n^D5)4I`P3m*G@f$NlrP%>TsNJ-&[cHa_2"80<I=IH]_t_5
%@8NUfQd7ko-cX=5//M?[r^5`-!gZK^%Mg"kMTL]`4^oRagE0TQ^/O>^M=9EZXo51VI<`3A)X_RDL8b*$B6^YoSQf>p^+;KU[!1^?
%dp%`K(-^V]HunW>&Za'rZcC3_=K8[+_RoiAI9p-,qU7<V.gNroM\f_d^&,a]n#UBU?bLe]gRd%sp?7U$dqfLsdYHE1/bn8o@`Rnc
%B%qhW1GfW^8Su.EI_:027==f@*q#(9I@<<FI!C&iKUM`%b>GofVq<]pGN*'&\A$g&R%`KN^JsglUK;d#h6dg=fo<Tq>-Ins*9VkO
%[!uS"n&r+!UA4W[Hjb>(d=c9p"W$i>b`JOhH7(9]AI`n$\&Edoi7d[U@a?ECgBX8PYNjes-#FH"k?#CI$7p)fgXj%r<`clQ?r)2$
%*-g.DZT%?$p9(t"D"5d9L"CYIj2&o0lLDo!of"PUhnp_cJ(X[5i\L7G-Z8s/lZKLV=R/'j]P@+84?@-$'2SXH5FNWlm*+"6IXgfl
%3qm+T&O56'o'$&`(k>9$:0;gG6N67hn]>6d]U5YNGCsZUn)<lIHFX!f>5YUeri3Bl@]ccV0(c>3Ha7sAH8_UpCQf1"g$LDKX1,.1
%hl![F@BO3NId:3^@IqafmCBouoeoCZn<:>.l)YqIFZcWU5O75*&U2t(^:C]C:d>C`*l3"S2V,<cRmeOuCsM'O1\=V;c,M&%^rBn:
%p3)bUK=5@c6hN5a'e@%b:8#7M2kYiubr$-r3?&q1Gj0L/60=EHp(F:=oZ,QRp#dFI[_0cgcX1QCD]aYcHj`\T-Zf8aZFohjL'X\l
%n(P[J3"3a[[eV&8C]1d!MG*X'otA=>mB%S.lWr(1kV;YPQgak(Q1*UJI4"N/Y:]ZUr&.Q2Ye=N?d2?b=hP.sp:Eb@6=17OFC6**f
%I"$QW'0hBD[9Y1WDY(j+qPZLm:cE;n=tAK:D1*dkjZ^t]S`uF%9_,$O:5(WK'Q/6E&*!3*NJ70umqsdC4_T=ObhdiJe_f/1]j#uu
%0s_5$\b5`u>MN<7rNZJL!p7>4jena&mQq#$b91n-c`^+ghf%;a\\@q=`pJi141&OV*Ii-Rq:X9i'WX@6;h3DVh-9c`1W&h^4#bdc
%-9O.3Z2/XJ13;(8PiWqBfAZJCD[Z#P*ZYuV?DH,bHd*V6XhlJkbVj4dOl,S39:gT]4<JPW,+&8>07N?UbdHoPGsT$uCjgI%j-.*=
%-8u!mc-TtgJ*h[`EYd1%]C'8%ri6\TpKQOPpY#!npN$"WHY'Y[8^T8\WVUqLqXsBpdG6m7qcOms@sdI[J7Qi]4]-,=faj.1?7rp@
%FCKm@]8us!c_OJ=H:r1&iE&TfN2VmXXmd[;%e0G=K_J:f7X]1AK@O=)k*J/Ffhatp0CmkWCWeg*5C,uilSgWRhs%1fpYjTXUlE=]
%#(,f=YB^skm+bP4=*#n<([`ptQIYOsg\fPf^D`,P68-jEfBnpJ45n5nPu"NWgF&:Dr9W=o+C3p[a*M[meQj`[ka![)./rh]OF/8<
%dF6NEH2,1D8\687f2jlq0"bbDo)&"'RfS2LS/ROH-T>(ml<ea:QPOc%5.UJS4fsKdqt8&Rot*F)hJYMnXNiI@Q,oY?q8W)]\]r^n
%Jj8UOB345Ka/nLh]DTBV0>65SkZgRV)oXT4\F\]fk+R/""S1^,Vu%Qo[q4dQ>T(>rs+^6gceAirG;bISa<0,Ka31m"gXV"gQTt4;
%RQLJS@BZkXQf?Oi_7.2E)HRN/#:'gM?GW2X]tN"++8Krdddi8XH$-dtjP+(H4M/#41-^3YeiVTJ++Gj`]R#s)DjiW:8Y#0t@Kl&2
%R\E/&]gY!;`kCK)NBZ$Jaj*2/'qYuMrcig+p"K"krf(hdb<*CdD8O!r,Y*'VEB3Z"F_U$$)7!+Wh`t[jE8QQ<[<hG^cZZ%hrOq=5
%%r\jHmg)rV\'=Z>"pNl\X&Dg'2dq5c_.iFJ\MaBrL;`W+cpfRhM9OeTBqP(eDj%Euph0Pj=u9cL5MBJ3Is?45b`oY]7%^pVPnl+m
%b^Qi.hk_jrXSVi(NXRf(0au$sITt>A'8=s/e[=g;1[EJaX0q0ulZK,nemGN,HhdBIhQ-*=SamV$rTF/:*)iY4-+e4OAdlf4NSE&;
%`3LW"5JEW9(ngBQ-V),#)r5h7+0E8NXn<oABn#D]b6q)UJ*"JP4XbVWG15K4$QZs1bZ0[k#L>Rs.kM<hTs'@p[r@N_NHcU]EAQSA
%*olI/4'17+mh^$sq^Po7R8+MZS\lNsm/5:,.uEi!Q*"Tr:0G>m.'<DDmke4Xe$stPStu@o[s#,@qs)dVY!D@r(M&TJ)h-#uQ0*5d
%Pq8JArRDY_p;ol8jO]U)CMZc'h`82pS#lLZG,QTZcjF++q7T\d(QQP+TkN6=>a]k[B85",>P0PWLG+H*TAQG7YLY$`RN>BiI</i2
%ZT;Amcqe+T5FhhkbJ0?LY(RlJ?tLGi5)%r]M5(`jH8,#(qBIPYQhT2mk2rGARmX<,n(b6k@+rnXqlm\1pQ#PL\4Eg+:-GYl?W->&
%#5;>C[h!0'Dl:d>Ie`5ZeOr*"+#R8t8*=mJD]S83,Qo4(TADDrO:p2=mdD.)qBlg5hVI:?V%LZe1[c<.3I[s3:<NA.lKZ5=D>*Y_
%NU?>HZ";+G<ruF>$edt;RZs'4(\RIS"aW,>GIo)\iB=d#4MLg.m]3b]:_iAS9h+]QgKI;F\$tc%G@06SpLrg5dba0SlS-/X0?h0c
%hj0m!T>+^f4.dJs4`.THHY)18f6=$Q\i2F%T)I386iYV!M;b#CqV+cR3H?B(4tI,>5?qQErliaW^Ti#Cl#b1&!+(.q)rH^gE8.MP
%=F.3aS([-!Zc?G,p>N3e.qC!_rO"]$g5MN,33.pH.R0NaR5TjZa6VJ9%i3snAI_0P9"lpgp$LTu<;".uhl9&)khPlTF(7s(m_3#o
%<7T"K&"c%-l.m=2%fLkYo((Pdn`l1=a*WX#\AQ<b[6)!_o#iGrn:\tQaW&pD=5B[]s)+jnh:`k`kM-?cDu,!\@OZ2)"Rg]cCVLn=
%)Lf=f8)0ToiNI7!D:UZ&\W,S=L&H^tCGbj>bn2l^<r0i`afNBj:f$4\*gReF]O$M?ju8Up[dQ*:B0SReXS^\K^j!DMfeD"nHI?N.
%T>.%tqQ5j>[FhRqHN"'AY.Gd\&pf5.2qLW%Zp*AcD"`=p`4`YNo@E2!kd=L+IFrm:B2A3\"Sa)4h5ejdj'f:&qW1];X4'T5HRhfP
%SLqRCSo21.dl0(!Yb-#I^EHn@`TeJteMf^p<'U68`H9R.93\(fD0ED&YroO3Im%^4H9`8<'Nnf7C@m&\QFd[C2d:A#&!ju=5Mdf*
%[fR/2s!34,:;^Ms/F>$*=-oP&Q8VO;!Ju9sji6T8o0n^aoD6pPYI"EW*ctVV&T-1!fuhmc8iAdY7iqU8b/BK\p2oKCPYZkd05O4L
%A:)fj1Ukg-nT2.qI<=lLlAqpJ)GK[4q:W0HA4U*gr;3u#:L?81CZdmogS3B.<ho(R)_R^$cOr3nU&Rj9'>B_0r-%MJf*b#!A`<O1
%b);ZQgc%#^]X0CqBg-o2W8?>o]G]S.I(gJA2do8kD,9*=YC3Hilnshhjo>3s(h>WF>IVhq8L.'cNTTbs_+MZ^c;/1+PteCYD\=$;
%"gfIGo(DS=pXR:ABX>+#MK*:IS*&'j0qc8;5:cCRLYh7(%pgBUo`D@9>It[Tj\j9[,O$8I_P4F-duea9n^uS9Q31gPc:JE^!IfB%
%IbkA&`n=K?,I!*h70&A]h<s^'%@[DW%hcSVg*.^:Cfh/!oqP!#]?rhnGWc;fkVit^L[hDaH`]T7K!NTjH`]oa33C+)gHjq.H`_0s
%d.e!\][<j3%AnDUc3sspY;?IYE>T%P=.ZBkh@1;VrB$*\,DcBf*EN_41pkl:['n`aKujn%]8_!CddG8f8r3X_/+ha$6'mnDEmt2c
%AujABo^G>Hdu\R!UIGa<\C6bl#*m#EEt8C<m4NGajUdhB3BiM4`\C?HgDLXR*`S03q^>KK4,*A!2($PlIf"(N.><Te&d.&b1L-']
%=DAgJSX4M^aYGlS,Y.O%fBkHiqRqO416F$9[DjDn-RQ%p?3u`mGF+P6TqA/V5Lp:Ai9MGdJ"BFm.4qNH]$Ykn=PRN:o4WVnI/QMp
%c1%gRIZ3MKN`mBK`s5i)7_:Idd$[PIh/GfT\%;eG:X%QRA_bq-d/&u.0kiIGnucp(MMs'4hUnZ5mT#\9h\c(L\5@Pa3]m(u./?)2
%`TZqQd;Ss]^KAt4@DB@KUP"&375=H/(\GYEhcW_`rJfp/`;1c(dk_dTK?mYdoKplp]K0]*##_W*>"?-7c7'X;-Ztm&ep1u$Kdc&a
%qc+i'[&/?GqYP'kA:0t0E:M^?U/Qi]rEiJbe6:@iVn]%I+A(]IADK[R:H@o'8ql#K5JQUh1AY9S@7ohR.>aK00Dnhm8NM^d,/qPs
%@@R^kZT;Y$cS!LcrY&'Zs)l_?kN$r\e1^+3IW)9,,^i08+NpPXIbJY%?:)gi,/heG(o7Md9RggtWD02]n1,IrF0;g6O*Z(XiKnW8
%Pi!<Ne(ZKVH2+Kr:UfT!m@Er2-#N5#Z)mi[01Un&dP&IM9812br&AT2QHI^LW0!$'04TuIG`t\GHW=gLj$H1K?dW"GIq8=tD<mho
%Qt#9:R]``7fpnp\CJsi`G>FRI]GB`"">.W?JgNYLMRm7>oK0)4F*[`qs8(nCIf3<<rn'Pp/%J^krqVUQ'<0,Xrb$%$[8qg=I8LF*
%qr^1%s7m1of.m=*WLX8.GA7`ls4]BsS@5Go$?G%7?UIDD`e>,4mt12#<Beme8"c`d#q!(pW;4pkj3VF(X3?;X,;a47`M-ugd!2TA
%WD@:f92\I-dS-0(dn8n]oMeh,U2%t#Y**CJ^<i,r,QaNKVImL2PpO</!^ilbX(c65REZR0bu>.*<AGK<d&GPQP6T4J#R,k@C%MCW
%EWVhY7pgMXirqIQ7];;B"*@-k?t-HM(ci+o&3E(b-!k[n=iSC:[QqGgot$IS,[fUo/W8ejRRoWd!"Z=E8EnZugKEZP!F;@$qB-&/
%McDVR<%:Zf"Bjl&.;]?Y'+e]?4sZ/EZ)Jl(EATD&<Qnu90;6cq1+`bemtJE=<eV,n>]<"OY9P3p8L!6c)Zt]^q8q^d^,p2`\at%$
%WFJTa5c`?ppo_m;-c%5"-esHoU(u@:c*O!`mMAf,B*kur^.cqoQqb!a10riG3FAWrH5lKX^N[W2X%[r0/h'%J']#^B#;VU?8Fmme
%d_+UYj_n[E+eM/Z8[7C<OJuB"XE8*U.HPqR3P1_RL\,D+270Pd695JD=Y2MN@b2OX.V1a[8'sEEFN)V@dZ3s:m)*55Y8HF+*mE_u
%:Ff-X8:)ip.<.sll1*Qj/JIo<Gh?_sd5S&?B?&IWCLnWnRQ!i=16#"r&q8R0%%ld[Q5DtG\5_BBXb:9pUs5MY)4^n6'?r@>6hE'[
%AsCY)50)fID%1KRo?-Q`8SXZ1NQ%WCC85Q1&N,m:UN'%C@Osmm"#YWN6/SJi?jZE`[DW0iaEU)M:F(P)5R?TC1is@DjZQD3&R\kj
%[D[XYe1q*cD,!$\<&b@>XXMbiaigth&7D";9O:3TcJrU`J38,Y.D8&\M9`C%>r(1"X2)03;mWh^A[XJ!`4#BfR5R]O.qc`+<a-gH
%CZq=c,meoFmj^b1?I>f"EF#?!aeG(Z3piRCXWM9C3hKDc$dpI7.,'7jnIGplL=UIdHg_tu"E>@_CSb]7Ki"I[lLA7VHkj#0Ud8^G
%-IH!i?-8n-ShAr)e+P%b8af:U?@tmL@Q"CU#/!und#3H%M=;chKjNaVJYtk'#TfIB8_h`)24@C^e"SXM'e"dB6IDPBO\Z2q*_o(:
%;0fIkM0Me\BHW-c_#SM3fJFnFLH$en:m$qu_(u:o?!bp20Jg^6`s<\t_.,&s&-PB1$-9oGjmeuHjCrop4IdH_Vk$XSI*]^8\Aj[Q
%US+=-8Q-M!?h8=6em&Bm22RnN4_@+;WY43(nFU:5Y1BD67F!3=aRMdf81D4pj3k#"4+j%GYsN(Y1TmVL9`#uE`K&8nP((>SFI#!L
%_?5%FFKpK6>%.b(_Q'(PrD>sOn26hGX-9JiGY<BCnYW$pS!erjKN0S1Qurl&j:#pk'A6ts?uSbtTbBJL$uPV:"WY+GV=T6a/hskl
%698MA@&'g=6i.#&j7=cU/eLF]1O^Ud"%bo%>9]:g:RW-F:db6c/Yn-JC61siLX=.F9.Vo]ONMgp6M#1nO'uE-!Wl"m3^ml)F(YWE
%R*DEhGrcp9+uZ^WRZpt\42_F,XL1bo@=]a6rhgtLe3RHM17lN46=*.>KRgl%FS.'IO1@&uZ2%Z\hkjJ+Dpt@l8c:12D)T8>rmKI8
%g6W%SB!h/fY/Or0V'46f/JH1YM>Weh_AJ.g([VaiZ74ErPKH=!7n5X\%rIgJ#W$]OF.+sLL(;'8X<2'VN:WWO$Ii<4cjIB@8OEY8
%!*@*=BqgTG$NdJ%)S=oj5E3K&i!_YNUko\.^jt,b+e6@`M)D.g"^:sHcXV"9-<F**Bg2uP-oTuil9LGop<+;#+BB^3P&*Tk>I$G-
%MG?S97["#$P6cbjFaX$C0c:W1"Ak,,RUB0Q+FsF+r2!@>#i_S@L;_EunV1SM[:Chm6j<_VcV,Ce+%?g6a7RdU@sj0/!S"(oOn%J\
%]4>6mXobfTP0>sO_Q17add#oaAZRbGO"rW`(?[o?gEcOs"tdqKT:3*?/ErE`KmSI_Eb2B:`__NNNj7LM6X"@=3KTDhUgYPQ=HOKg
%C"SB4E$$W.!5kd&%$jqa"gDJZ(0`&l#T-kr3YZ-!\O9ia5LG<f(&$AnD!FT\_g_2:F3"K7Mh`_B]oN%%?oY0RdU3)l(l0V(3NWq'
%K"i;a8Vt.a/t2so:T[8Q5;hZ_T_s/()!kA!FfaL+G"=oh4!=\3>XD5/6&$'C"uOemBm?L*%]:C#:J)7kLLZRP)4bJJ9HHrfX'dGf
%SOfCmke^"qC(hHp%GD.t.B,Hm*)8Dq0LL0HL)rN:Y=n"UHPO&T2V`,KZOnf!,EAZdTF!\i8F^6AF;^#XAloMW':ABE0g!cgm,6TO
%e`X0!P^#p]7a``B!LJr^a%@H<>M)i2G"L[5<)P=;.O0C_U1;'rb4$l,amLqS[kbTO`.-EPR<8S7%(;?9^M.9`?5]\];#AZ`n;9C4
%%G`ki!j?QFBG5g=WPC%D%&On+C5,f/]n5D:3L8L@3)&O\@0E0<*F8^RLGe-1H^Pkch+/NKW2,W8=U>e+&P\=kM'.W(,d;:A5OQKT
%c<RMM/I8#I3mHP-Jm_1,K!UQj`\RZE]oG(:TSt#/4(7^DTG%HJ]g3]?KZCE-U3JSQ+;ga.-2X=i<T%1rh5j85&Na$[\Ml70cb1T6
%8`:CGep5u8Crau/RtV4gZIZkYJp>+;Jmonh''r,Rn\#'0Cej$i"IBM78d>-\1Rc-Y%B5Yu*U?B1E.e$(m4g4.E;3Tofm4CVns]O)
%Y*O@qH'1r)c;%SGCmH-[i!)Xk1d4RE+5gjr#e_'f1'+:O<=$$9,2anu@"QG]=(5E-4QE!Pm1_\ARO:mc+.[nA6ltk-.C"-)7@ZsW
%`EeT1DrFSARTW/CnP'Fu2:?\V%N$&om+Set>@G0u&0sH6^TEI8P*(S4S0ilXKK,$jKrAEPd(_<h_:]"Gn9c8f3DIKne!?k'`WJ;$
%LYFbhi7Qg;R;)V"?s<$l/?)3PV@BE@ZnAt<^"=c[)/La6/6_;62`=&9X@[*Q#C!mN$R^Z%UhG'Z`+i/12%K(?b--H@".H[,d<COf
%=CEE\-h'=9L,LSH8D4).O=j,QP<G^-^e%1[hV^4(E).+'2E:/4NE]/H#q;\r79-Q,U.O;5%4ckr,r*&f#R&9=?'1gPn3fGp2Nc5?
%+U7[['7o05)4#MKj$oC7Tc`62AXQ2h@J&KpB$EkGiYr]t0I.UDQB7'+B\]sF3Z'se6('had[Jgh6@(@0TOUrbNY4IR!r.K^BZO[E
%=(rYEaYJlE/N\MHE?QRB2`aNeA?psm]fd:#J3:]5i;QHmU1kds5psg2G`>(Cc=m33&WG!'P1_d!"nkZmT=#nUXY3ndqXX*&aM9VR
%S4WVZW<08Ye]os<B0j1.,cEh>d.G.H\A^js'_hgVbQ)"/32@NPRpfMX_!"C9Hb_R4RgG2Z8mk4$97d:Ki7aHI4cE@]OU-kl*SS[c
%HWCuPGS_1@i`-V)"`$&J/SQE9_BgKu%:fOBCnq`^Hj!N=:n!+Ec'L70p#NJP/.6fk\C7e5L](H_Z4'4]re+:*BHq-9J4X]kL-nBb
%EGMO)+oj%r53,6V,=iP+"#=JENu1/Ta%#2^8<O-\pr0HUf(89*6i]fJig(r%:N`JYa5M8H)MrNT2!ms[cHG/9\QuLpX-0O!Yh#VV
%FG:;d(>aWT8(?WNac=Rj-.fNB/As!s2'u8L><&9l8<rbD.*"g:LoPQ?PD3^j"Yg-N$[+1c8o+7RQT,F:KJ.!DPIs9HO$k]g<t.X3
%;6YK_SGgT#BTf$[<!'ADA'@lk%qG9o0JG=4L$W2fUl-ubXre6IiCkHB<MbS.OdHpRWjX\>_B,TUoM$e@`of7S)3Y&#!=3F+BuT)^
%_Ac5S!'SKI-'hJ%S?>itmf__0m[+2XW\b#[0V$c!?JmDr-_6Pu+pKFcGW]]E!%40VA2rnb,`FN?;6tLYAjc2=PDRMYBca\#P=>u(
%(o+@]\A5t8QUt_p[I>?WFAHH>ptRKk<Nee-PRi5o4+E]<2<k_-mjNr!5U]<&"H3-tG`!5O_^%q#A8PFiga29.:6\$R;ih/-D,Nai
%>Jhq%"Vs-O,QqJ\Z7:eh5=coJ-7M<:5)sf>(oE<NAqp%69;.J_q>d'&G-Y_<N"gI:p4s3aM;e>&"qCrg66&=r;%\NpS4Fb'oNn'l
%:LBtcYbA2Bn/a+fJksUnHkf;L".9eo@k)dO:HeR'4=j8H?rW(joE`ZkMbA-X,/,4@)$/V^40c[dPYYr2H3eJiH+pG9VMa$-5^L/"
%"9\p81*c3A%o8c4rL&9S]h&A.mTi6lVUrWi0TM)m[bJKUr\[pc1P+CB?jN%f).%L5ifse!9$*5R,JIYhAlf^"?a0OMlrmDF$3ik^
%q3@b6(QKm\[]2k7',J_N[L,fH-CbnJQ+g.JU0uWRJfb7HKO_&T#8pl\frBXl#S[Hg<r!(>7mtY/<STTH'!`'/[Yd^J`_`lj4hqDZ
%P>e!i[.J,\9N:.X_Vq7S/Ebb;@Yoc!ElM[bR?<pacE6(9QoV-Rh(!3O@)deBX,<8ukG<cUX3eAE*=MSC_Ea1b,NiE_4iN8?1N4)C
%@A^cs?inhErIjuQ3Y-^AhldA+is,ER0llD5ku5t3jUp:`QU!%Q`*^lN%.@qs-t]-*/0m.@^iG/U+X62&$sG/IpR3>d?pKmj@!M#`
%P/,_oYkK!iE(COI/7nqnIuZqq3u6K@KrG5#DI$M/1-!R=%!FRI8/WDn9-'01L_PTqYjN.TrEse)\E6&%>aiM?"E6b@`LMYro./S'
%Lp^!@(iTVK'9d&C*0ui/@!uEaN0L\U%3q%o'.D@Ls"FXRj'siqd#>#C#I_ieN>P#T#9E%?.D*Y<_id-Em1BIt8NHq>A^APs"Tt:4
%9Hi1aN.KSB&IRX%E:/8m$F*3^@=4*%c,!I*R#t(U=dt?S+ck9b+^@)&VM6q&(gW892US9c;&?hIK(m-F`&.g9-IEUr>S2OC/qc)r
%%Dj$K6koNO%L9$Z]M@E:1$gGW6ls65"L1oo,TjqA5>>lM=_/qslTf&9.)itQ_F*aJZ0W[I8Sh*)g]R?XYC347,;g[X[ZP/@,.pYq
%c/WjbZ$2$i6jRO[//flp5mXjUpd:5'.:5^kUmc_q0IdZnANd>H&9[=a#/8F#"d.)t@2T0MN$MLVM&<<;!YJq@6c=M+*,qIedg6k-
%mM1MPSM=4e.4"m,%"&^(.F]\RYZ[bul\JtsNgJ#-=!Ff0Cq*V`oSD=-^;hNokjen]-Ts<oi':PIUFI;TBW7*/V*'la*<L3l)4^62
%c8b_'*Z%k(nKjTJ[c4O!1eBAr.j6L+^L;?i-`\@/$"#GM1?Vc#FU0`FXce<T]aKXedK5JJdZCacE4A79]]BtpTCT)n_%V9:9h==d
%LZ.J;&t4rk!8[lAV\anr#?LC@[6Zq&9Z3":Z,F9L0u.q&iAq/DPun$LR<7^2rfRs5;fQclH(/db#`N5?OhtT=C)?uKJLm\:+:J>G
%;tNWDia&u]^aB\$re\/H[:$c^":qaBS)I6^(`[G?P`^&N(rc9%l,/*/!ab@=oPp<2?F$=>Mficrc3VF&GhF.=.hUk[1-9:Dl.85h
%o(2R\N*^WJ5*]mMF"n+!EktENO$Fj$i"1_bf*>LkTmaktoHin='M2rEM#roNS&PFq6R%Nmq(0QIM!#QdZ364A3>RZt72;R6&Q=f?
%go%)Ei%57PNpaeML!W%FGp)0*gqbEJ3N0ntkL#J)_?f>2,la9E^4:gC%`+r#dZCh1+%%h9Ep.o5/)t\%>Jl":6j_Wk17D\oED*&<
%NFp;&:-D*?_s/LNJM]+.DA-9?JsZsQi)F;SB:=F9(K-:r(Qg@ZPJHd!"GiZ[A,t*N'1Tdt'$t2Leq4NI%Q."C#Dm#%":.J?*/W\5
%2jOl2!<!`@(M)1h`:0@c4M3[D0K-\h(;!Wlpb</"QLr!*c+31Y7P*)d-f%+]@V(sl0ZiC.gBr/6\/96!r&BOI3JJ^hNuMVr7[&lR
%;&S/sZnj$,#9a`bQ5f'p.bCN9!(.;dP&M\J$:t_GC\1uQ2k:#2O9pj28pV]!,JG?\q;B8$G_6AGAFq"sO5UPAo$F5l'OuB`">e=#
%6m!(si3i[2:`L>o0j$d6fGr)n(FBlXRF.-^/-)hl&b*Uk%u>X%6A9!8OuD7XHB:uV_a+Y8<$:AFaH\LB^et-Q.AGc.l*B:ZN20nI
%2Wa7=c#.454X)XAjTX\\>/ccR,i3f+r+%,fb2AH@iUhjM,9a<SHu*,Uc)k%kfTD3`=jhiCpUEhTKIU>Xi"RV).aQeS-KYtTnM+B%
%;Rm.*(>o`k+nM4Cb'mXM9lshh*`p0nN7@4pOTr;$;O&^g^(g*kSDE1,@TLU0nfAE"A:gJ3KMrt;(i=\R92JM%*?/KN*ZGp"0[L68
%>]CWK@FUghL>c,f%@K7VE8^8nF/uPFPjtiBHfAV6'#_&cNUc&X.ktkjj7Xb6Lo1bSkJu@L9+IqVJPK,dl^0(i^_Dln[%u@f0gWU;
%;OAoDA?G,b^bII`'UB0c0Tcg?10jOPJ<MugYKei&@iU-]nsSX3<iR^'Z"/O/!"l5f!8Om/0Z`=3:'S`u-FaDV$@(bp+F&9_Q`VK>
%M1A)/A$\38Z#514OgF<6#@Jh.C!D#ug1)N`MCebq4I46RZ&P1YL5dR(/G#Ioa8fnf3WnQ]hLu\5g9G\N+E/]@(=<3r"4T2Zc;Yde
%(fkVn'*lia'oYO*ffNo0:rOpKOrX4XEZfaa?&Ls;31-s*FhV]Y?HQlWA/8-M,VMe7L8p6oANF9;T4"($+XSujX4!k'M.G?",g]BX
%;96ViP-%n4nIHN*Z&m:/bp%Om$^rot,E;0uj$NN6V5bbfl:m4o:^iD*2b3q7W0"$0',a?"Kdg4@E-e6f0ra:$@lm^]RX+!=I$R6j
%X!Y\rBr$$%NgD>;Y=,<6n]%[#,?8Go3JB-`"8XaW=!iJs8`k.B1!5?*0+-u!]tL)bAm_LTA2e):-jXaHRV:WA9I1Fu^ql`9:`o$k
%%RVST9].]>7#7^jns2[_e7S6l1P:_.i#1qtq'O&\>`4q=OW#ef]b);G3#4+d>iRM#S5(eT=\D.Gb1@IB45*2Dn1R_!gCK<J"q.9%
%a.Jl1.@j6Zh%58f&ES^m9?a!@D6QB94'JT>SlR^;4W-rI5ga^jEANCAGS"@.(ic4F&V7q9iU=fAa9\Hq#*b_#=EiA;5H]S@D=Ru8
%$n,p(18SL"*>fM`kbAqH#V]"DqG>_"&KnZQl,+MV,8cp.,n"",-))I01a1]r.<4=hV.oQD?s_P52U/Q8&<Fuf1)W\B]:`ZVi@ZFm
%jTUT9UlrNsRK^5jJN@HU<eh5TP:=[_fE1PL1,up7-HI2X,5rFl\G0JkBAtnUa3ka(\;\6U4'7A.(E:21K46jXcnTpj?lUcc,.KL(
%Y`//ch!.Ea^]86ee#OtYo4sY_b+sZr@g<f(W11Uuj]!_1ksPk6!N5JSVBU(:"]?bW>c.Zr]Q`^JEekArm]B2$!Bdr(=CcCaKRlrC
%muKV5=M@lSKVL\-)^C=JY\4e!$C6ecd&LNZfGUlD+HFVhJQ;dPnj,#X:u2gnT[u"Y_b6<-qFZE,L5Zi/d2[e$Z;UN0.*O,sV`ZCe
%,mH4]Y3P$.BlJ"5\Y;n[%IX%3T8Dl9$Y:(IP8Wg>BQgWNCogs_gk^=V.cQbYA;.pdae?jWUBLaics.S#qBBDlP?bC^@JDP]^'H##
%1XO.,MS[TB;,`Vt0Ei<rDJGTV.L@cJJ0uOmK>Wt:cj'uFCLBG\[$b;=TB""H/ocMr?A`uCA16r$/kJ!(c5-.TQn><tZ!O#JWU,9W
%?3Y$e>\A)LbBM6V2WQST"_7lm32W<g2,'JHGa5'Vk?m_,[UJYT*J@RI\Y`5>W04=,V4lP0%.Gah`e!&m&'j[pbV?pL2f8W!EqN+R
%1H*"kk2%U#($TQr)pChaF7uN4eGSKmf/eqk2!d.FgG$_2V*,&"#W>0[5o--Rad#J+YEKc13+YW@F0]p#ZQD:G5#iM$Q"VgBnO<X2
%-bK\d^nYk32i3]R!o1KKN\dL`$TX2.+2uhb.Y6=\.1$":e%pr<%,N(XL:GNb>*H5gLFY=S!>3+VA$[]W/b*jJjKZAL0MOP?,o%bX
%LQ3mQ66IU5Ob@'SJ)^0A(:R:S>qcJCVhh0QjX*U)G=hp<:bme<i$;6oQjaF:,6QpbjN=W]:14:Hqa[)!eq4+<iT()XXN42WYTtA:
%6D3:Y,e='QegQF^`b'JKS9lP+WCZ1q\Jn$)h6cNW<e!AIVHk,sKb2u)@N;3)#@3F6FY(ami#EFpjR"JnX=tC"4<fZUTO+?^H9E`+
%d]R"d"Sq,$)/87_`)5P],?Aa,"BtC#,k2>$iCI*@@uE+(+lpT]ZWJa+a81glpi:pVA;3_l86+/M6uc2*'q#E6Ub>=t8WsIc@l#(_
%g/oI0[jaKJgGDr.,hfbC,GHa!c6D%XaI7680?0@ojUi)I@BAUSNEel6Zid;mW4`TE7rmue\DLdN7Lm[D:,-`dZ8%O]O>'KW-.iQ9
%GR6L(ol@%aLq>XL%r#N;Y@_?.`M%E`@[G??=!D14[aV>&7UhZR8iWh8OF*&nk".Tu'j%E/2l'a%@E[@s\T<4tHm`I$,0%Rj$^6Ep
%W^;@0GqK.=eq#ub8IY+OJnH^?]2GF#S=seiTR7EU0T'&R->"B"9d1EJMG&GtR.)U,!u[^TJ>#[nL*`g-S0V8jIj>DX00#(ca*)@5
%^h!kRW&9^hCX-Ar65>1mJ\ghM0pG?N"N1!SbMa8WMQL"B6q#5B$QKI-&hBL=hD/4b]EM47'&I/"^oLU=Wb.b,3/Ao&5N>qm!/Jml
%dfOJKbi$kBfq!n<Zq:a5`<*o+7qT&+hh%kunh"r-i71d9X#4ZCi-6hIY^sk+;0>A)_ta-^Rtn18n5O#tCe1n]mG.199#UO5K*YW6
%9d]/L'']`=>$_Vis**Ji&:C3Clm@Q]$C9K1VFZ^."?!1@$%paSEIkKCQ46hnUdA3C),&^M$ATfd6\\Vb)#-/A+oEE"81(3V_rB]H
%n\#4p@cXq1(S:klE>G`Bj^BQCaQ_hBIYi!5o0T3)NXqOCgR'';2R/E\$7m&s,pba4pUIF:\2OF/:2m45EUAC2&c+,[BiTQmBGHd<
%d,@uXL/RAH(aE]R_jLUVYi=]!:,uGL?A:93\/e'd:r:*`\``[HMukU3%JElm#,#(p&N(b=#!)CmV*Za$UBhd0^\G#H1V7Hm]b5lo
%V"DoX4.8KC(:Nr-1CPhd6t,6%FIK^%:eDmbSg1*`b5>&J!4#KTM/PR/4"1n**?^(;[9R_I:doYIre.?O%#KThrW4T)+2WL]/rg3&
%&:kYE@Z3rZ`9,#*S3P#u[QPU-OB(9jD!M4]DGG-?"\L.'5"S;:EaWBRnl$ess0ERr=TLX<Z0!='igXC<`A_`]UZKB)O5aE:O?Y8q
%';Gn\nh1B6F#9YU]'S1>.hTrmG/:7$Q$d#9m%R;TJ<,L:)FuP\#k=3\k6uL,ecG8mHMB>\8@Mp.B=N7\:_J_fd(frrEObkP*#ZqB
%oj\#YN.W1IOqH[Saegk!r@]E;iH0plB8@*m4bEEu^h6ofd"ORj06"Z7<0HdMJrCC_>hgMjNsk".JdCHm:m$hg`]-jMl.D)P4@HI5
%U4`r9A0DCDI!gZAAT"o=X+uQ%@Uf1:I"FeY@)?$NXR+V\aMPnpU`MRDC(cAXjAn?In(Ys/@+Rp_7]8M18$XkI(1L<,*lCf_OV\-u
%3q/k0fk9)&)N-#ohN?V"?&+3G=NWd`$OZ5o*A2!OG\_,5Qd*$A,*p>Q4):"Aib`Bii;X<%Df^$AAuRbD;@X>b!ddEN[_8JT%r6]e
%bEV&e-Heif1U*Pe@d96-&f:WkTpOJ-RHLq<.$gi[K32CR1Dj@Ck`HM\,@HZ8*.F!fEWW^^E0%WV$sjGpd%99e=gc[o1(c2W(&gkO
%$Ni53']<mTYQ,M#ZSmP+BJ%"Jo)qt]"b9b#9s`";`($JU&J(*tQ)"gGWAnYFMKKgK>Ci^_`;FC[-NmWt_ucb^Tq8%+\eBiJ64jWm
%96;p+/*5Em`BuM\5G13(Og,l1il,a-6,qml@W2G/*J-fFE+#]-7*hWRRB2LHOs%ZI:+/qsJ4PV?T@IMZl]m968r]>5M)j,'9`I@e
%4.LM?@_5)_V5.@-nNp]NX,s%N'"VWt+r52'H!&kgM5/B1WS#O*#/bAh+U4ZenpsLa?d?DY$TBGM"=-a.ZaREGIiO8F+8ffnb8`ar
%@?,C\BGc2^P<(I\]?Z*crqr6/%:aH1X2QN*2BgFED$fm^=O?=q9e_^Nk2I?@^N&a_0b>4R+dQtD'&1W-(^uG1Db6s%?_FonbOk#&
%`(Q9O&:=E$OFhjf5q&q+T[-Gn'&YbN__9$lGKFHp\IpVj7V<u_8+L`,OZ#B!&!T[4"Z3Y!T[Pk.\_WZ4`C%<NV^BSgG$psE..MmZ
%EXsFTJdW/J8lD0RQ6hOQN#gJU'.NOpi$d=&d0NBC>m9-jd=6u>2;C_13FSkTbm?@c]EL:MNQPn=Zr7n%d7F\3(bB>3JVUi5La,=0
%#mNmd8fhoe;BOh%ZQEbG&>uF89aE(jI"#W]bO*"<\_-7X)BeEQ_?Nj<'olaf-HuV45,)RA^>W<?fZ,riS;B\'OL:"iQ+YTl$;B[5
%8_T;75eMikb//"b9'd<ceSs<:600H5J6Ed<"G>^[N'VMN$9/1`IS":i,D_O4K_&:i%hWdb$4U6P^b@sm9,>,$8q\joR@DIV8EaL'
%7cOCHJ6NigW?>4TA(14(n)/kI$gEQN1R#B$@7-ot+$Dpl&U]?B&K>[\9%FnikRljq\QaH2a#/l_.e&rd-Q-\>k3#hmKZ]/P7;Oiq
%OL;@l%DqX;e$RIK-'ANGEt$?!L_tWi+(At&;H%PTMSME17gQ;^S3/is"<8#m9X*PpX%nOR0u7Ak.kr\hKuu=K/Oc*XcTR,oTKpdP
%3<GTDWY-ljkS)F.H#>A!)$/'SQ3oZ4:,#.f\YgmC^=2Tfef(N(_tDZ!*1'.]BLW:2cGo!kRXO%lX>SI^<Ql_%"M+(s*\ObY*Np7L
%a;g3SS=JJJMq]`o\.l$6[<eX1N%X;2.f0GPQ\Z`[NZ/o#R.sPAl*(t])+G\schA3rr02:DGX<t`FKoB_1%OU-FPES8&2\^:EHE;S
%;b!$g$bmD]!P2BVOn21B,#uVJ%'Jh#NchS>;!5Y>1s]]5C,%t[P=Rs48!@-$dBsJ';*C*@&H.L'Wb=bM\ePEu.ioM-bjh*PlXZ>h
%B^c</Q5uT+3GKBX@RBVs@DLGc2+GV5ZY-('"gh%/Eg;OTd"t5O%8CJi=&Pi"7:q,eJA*%aKI\:_`Fj.g?YL\c/fp-G_/hpSMnbF&
%pR50C`mYVn>N)V^/-dCbbb[a**1q1P7$%b`8fE2P"pPWHrIm@U@,\7[A+R<Kk.MD490oD\C/e9C,:-n"6k)(aYfO'UEE'#-@73I8
%C,);c_[ZSe"9o_HZ,^Aqe0*p2<Q!pN'$hlY35PqnZV&RL"8=J(qZ8JQ0fB<fhk[Rt;XtC*:<1,bj0kS4N)4YeiD&0E!s<Zmn-D@B
%??GCGaW1CAFFnjJ,Qc9m#GAVaJP+kJlC)E^&YfVVDY4F,a6-Q6?i6:a^7'%u1tKSHTYN<!@7>=\<(kCJmdS%EV7G\KNX>-KM/E\N
%M<(=X-)QS%MnkFK-j=K`8Lo]^7So>$/$pJ".TV*m;ag)lW5'Db0VE<TF:$oF7l6K,SPY+gB+0#ol@hRB_:WEf`lS?3_2.;*?l5Nr
%A[Clk#\gRkRE\2'LJ?IWr<(FYT(]L"Qa6-Na"lc<8o@rjmj<c0+t>4%X?tZ,kAloKVA*%<d52l,+E0phM6gUJl:%3`i45M/OD62b
%11>E,7V":aMBp)\7j-lS+Us4c;i\>Kk,Jt,$kJ(`\3)dG>lg!qr!D(g6``")]#Z\PGTqa=!09`,9X@*n,N--%MrdU`PB._+]I4K7
%:I`rO.7!.-N#]>RM=hjb\IP!0N*r@a0aQuQ`.clL1`98o:5QVJ+FnKlW$8H0O2li#A@A35O,A@>?o$)k@\m6R&4!I@qCS0&!J0:0
%9_:(!H>_/\"CbB2;^,rp#ge,/jJ>D6`VB!!>rLGDM's]+aC\@tHM,cP;+:aa,CI_d+i,*"RaMlJ/^I1Uja]g\5BS=(n4'PjBs%K5
%mEmK2`V-RXLU@U.3<U6M!A[Q1nT*l$^nQ(<_)2Gb9l\2l9*+UK%"Jcfihj9.]c.+joklUr9OOokT9%'9e>0@FRsLr/aXrSS6bN\d
%-rXs/+tF<N:X5m)RmN)N,UqYh=.IBg$aRu$Z!dq\FU7-3"_?F36!SC[5oIgbp<me'E$6`ahAln8B&H(s:fn2UG%Yd3R_+Y;oTdDg
%FW=&4Thu'@b?2LUKo(o5=N#o=Tnj(l+El->7C9imo]0O8RjYC-^lm"@X?R;(0qo-WJ]r6t87NZ>ATSu'Qq0$);X[b<HKu)p_XVf"
%Od79@2jo;JED[64QQeQsoaD8@OKa-7>%+(-'"U<FAWh8LiXumFh@Vg^@BCrAO8o\X:BQBd3n`[E---ph,b0\VPp:jG0d-8CZ4dQ,
%+>@d**[l,E-lRD3XV2$^W`!iUFR2n%.#G-`U`Gq7M,=l9b9j&Q_KmCHmL_hP$kcDhGF*Ckb=!g89PidtTG2VdRsR,jlp`33"Xt;F
%EH`'A!$^A2nBa)W@$FPF$kF)(>BXBsb0^52l+pPsW"(S=!RG<h'oJS-b)pb-C!sO0b`u`>%pP<5Y&^NQ-U;3/oCs:YRtIn6KN.5K
%Po6]=>]q<(J"S!c<k)3BTpiP@?YTB](q6H!HM5T8/j/6)OB<lqHV9SYk2rNIUmc:giZ#7\7QOU*%0"A-eQVD)_)4Mo$4[r\Sd&m-
%2`f:E:3&;qjt(^gN_&cVMoXsIEn]1G&d^g3W7Yif8BegcRo)`X7]QZ+]:R.MROq^g.rNY(`P;uUQpgiDr!T#agc[eB72W?VL7Fpi
%3fN\.$QkRknj04/@r:iu$"E\!))ON;s#[-]1^(MMR>)\unO<!+YrQ+`(!i-NK@2BAouY8iNudI%@/`PG[Ob)C`j6`6KZQb>[L6Zh
%),_A5//DN]`)DU79Jfm?djCWYLU/qEI&@?ML7$^],8'tg7ko?I@n3QZSm!%,'+o!#d+ir)bAeksJAWW?@]uJG."aTVYsGqf1_Xg5
%Ob+Li>lGE0PEcl'QR!Z<"52)US]OT9`F;RUATCSlY+.)!1]s,R4=BG?>n0.hMDI_13chQ^fL63),nf3I$qW:oGDNIibmWrP^jX"C
%4A9[cZGPOmmiot0AQp6tJsq]7K5UaPNc:X)!f<B(7Uh`6klPi:aaAUnR`8[e:pa(+$6FRBOd6lg%qjoiM]\SIA]rRR&Imic0WY+B
%I]FFP'_!K'W\p`2-8A>bMfg=F;.TSkeVYN[!c*-s.Lkq+-/i$YNpgCRF\LP7PsBpSal"Jn:>i\J\AZ_14.Dpu!B(c2o0[4u#3W;g
%&==l;bOlUs'dGN__N?+?eGeKT=>UA9L_@g']+H(G:gfOH*EQq4GQ^"#;q,KrTtgdUa,\!0,W!8Ho.,Z"r8oR`6b1CI`,(#BmPrJ6
%GD=hK=gV\TDi*NL#K!(leeZD_Q'b*p.r'[rfeWhWfHjqJF'_]$fdljgOk\2!Q=RP:Vm]#J8=GDpS5!1BWf<H_*!`1!bJ'H*&D',a
%-3p<"?25mhN0#EclL^"7N6h$W\Mq27d82*3AsIG8qO.7'LoSg9AmN6X2AToB2'qN[GWf4OAg6hePqQD+dEY<]C%G3_<Plco\C@sI
%l0)r>,.QMU&KXii"XiuZE+b)u#7(a;Wg5"730YD85)9ap^2]rITb]C4P(8L1L3JGG7^6fIK'7^j(Z>2pSOIc>R-*&_b0&Oo=-7(t
%@PL!V,dYKN50%]H/'Yt8rXg2h.BJ)n/>t-1s3#]X%OnI8o4;o,F>s&),tJFI;F\HQ_-Satct`Ue&1K02PXP^[*0(\rE"6'n&CPU0
%be@a3c]*AT9O,gJN-$pL=ac,431;DHLV%=E5fY]a,9%5RcgR#Sk4EBk76+0;lprD-*so+F"('sqf,M!'KVeVm@b@3L>'r7*iZ?LA
%KF"aZ?'IP`PmNPuB&I.h&/l^XpIB6\'Xnd]ZJ7MGh#WJa9Lq0;^^!p<4S!Q49>^0HP:6E*`$k^.9gcRZYRJH41->mUVK>XR:`dNL
%kb<W?MX&m]7V9p#9&Tp>=,,&ZHK?K^>fFq,MJAf0I#_e3c!m_dka4D2dOG:":-?Q)UZ*t_@+)TAgQr<LL^=%=*,m`>7tM7]!'.$@
%3]%]]UO0^K2H"Z\6WZ%&UX1C:mlBF^mc#DMNX,&'B3aK6H#AQPE.O4h1Q2U+1eFJf]LBqAT>kaL7LJN*4,Yi_/MqZBdR[G@P#ae.
%a3,76=!Bhc<7P,-g1\ZBIl7Zm,OqLLS!R)8Oi?I9-gL&F*\M-pd-DFtAA%k+0Md3@K[Xj!A'Z:=`^=F8#5MYqTfqB^N5R!jq1^GD
%)O=j9E]+7,Hg]]\Z@i$A!nsE6YDr>_#X#$geE)CB#AKo_%B*$dET7)GYQ5=@<f-r&@?$Jt!uEJgB_8#%E.Al6P`F"hUc%JN8.D$1
%"tLFZ1q8,oJ:KIF`)eBiTChVF^ff[EaWQ5%:EKWmDdF,Jjn\8ZA;gNV43-A@+<!g2,UU&u%B1\+J=TDcke\5C)6`hb5^j9m'mUe%
%`'GHum,hl!Pg>"HO*i.)RO1MFo14eXL[k1G2T&jXQmdSJMBb^YATh)A:P:P'p\;-Gf<0RU@B4@k11M"L>=Aar0N-ub.U%*3S<PgH
%'n""l$GNVd1PLr*N*?It)JQ2f3>[tM)+26O\64qm,-igNMAN0YcFVO70n?35PV[4m_3dJA509W-grk[gR@Qt:>=CRrZW#/`\;LuC
%b1RRI6j5XejX=rflr:3-'q,?5IEoQ,pr[Z,b5%A>.>\:!cG7l9QA=TBbY<;>,9pi0qNd&5%XGRacup=gT.nM_kMe#?Tb`TgP2qMj
%12U6lo$Co(]jcJ4hJ)g1]NiE5@$4'3;Q_:f(V6EG"n(duDuH_A'[6h7lNARgat?6D;,m(FrH"upX[Uq4C-Y0<=+TA.=577'HO3cK
%LkZ8l-TWo(g5OQhA-hX=`",C'AnTJ7>!1KnW*1[P'!!_B\C3iYBEN/nXumrf$2=2R#9sQij]t[-Zm:[4XH92h$\pK/4sS4hE%<ZG
%0ql.MZU.asg,Pu[n"gJqQ#!kg-968!iOPd5nUfIRJcn)n-C%AK$?5q`o^+Ql?pH#iV($W4ge`t,>723'N"9T+:#]A\C)`?QW?!l+
%_C`A2R`:q0>U_SK#;4jJ:UnfO?8bSdM,6]gPI&*&,Q(flbP`[%b5XVJ%]EL'@i_A8SHDCTF(M5ic@Pk0\KO$>%`!mJQ*YNsH2t9O
%cH[KV+?g<VDYCSjMHi#LAe.O3'tr/6bCT"o5!]N^L=XL,7X-q45pSW*EaB7F!:tIi2U+h+**fS%>it-uRMF%E"YYYTkDYi#El]2+
%NUUsRjJ4JAcH@9s5%`$/Ps,!A7CF[*fm=eY1M>d1fZ9F?,7!"(jl].Za8o!Rq"VoJ3H.q)NhEY&?90<<&`F.)Xr;YPGhIGE\CsAd
%12[=`W[CCkE@$KqqthXan`(gX3O9"-R`sDhr.6HF(f#Pid\TS]2odpr',/$1d)7M7lHp1GICE&1:iXd=Oj64N6oYW5Z2r&Dhm!k^
%nNit3>9c[@g#`>m)&EXEbV[CbMpB`g8+q:lco+8A(HB$WU'dZ^>PP"n?s"%"A25qnkfB%Li*QSS)-;[U.?)NZ*.arr;^Dr>i2/66
%?WjH:LR!t`6`Bl*U`8_ljB4.p&a51:Gc;G"7frt2^D6,I%XUZX?21LdBY[qD@'tAs,n:A=(d%p/+WZkf=pXY3SE;pae4PI+Hu1K)
%0mW_olOhheYW7=,LPKCeY53h)?8e-WM%F<lcC/k9hH6,F<GDI\)?C^\C[cb996&A#+7imA@3Zo*8Y2;R6n2[b[-#A0h!Z'ra'!3\
%ST.M5-2k1PqSAj8PrP1q#`jdq/.jt42\"\B=,FOrE;:r;7lW.?_P(u`_kSNFO+!k_rtTcH:haimP;>>TnZYq1'J_fFp^(D#V]ipT
%0%-9$#`n+V9_8$!9?`@O@0p\dA1[XH?U5bSRrX-)>OtCS7_9mtrpV%clVu7T`smIG&.r:g)>c8;=H!j]oXW83k2DoB1aLif/WT"&
%FAQP)lu;cF,[d<+I-)XT'rfB(7"EDVS3!GfF6Un>>fO[(AUJZfc+@%$'\XulCGJ*uSk%6Cre0$0lTFCKEeA@OK5pJ\"g`Le7$-Iq
%:doDaL)MJN],"]+\VF\1AVNSN1>G,,K1h[QT1\Jr%U#N#UX;@-@J)O@l]@'hEFC4BW"lJ+^iKaNQsPE23Xh)),D/b`kUF=:aI>nd
%N/O&/L3K/'+7jLqm(!NMa&q?DRMu@%Hk]iNTQtpF-0@W?OYlue`K%6H]Du7J+[fL*3c9PJ25?s7I,H=P8;K)8F.F+![]%^"l*Q76
%G-U4k>b##cs$gnt8f`CTm&lGk+bZpK`aCeQfEMg0iOXGN?,./K4[`VB)8-BE6LIXb(m&(CK`Y,7,Tp9;ClXk,_H.osg=n<^7Pg"?
%8@2s<I.%kSA1/%B`]tfnL7*TqcF]ZX5:3Wf!Z[=e7]O!I=58@e%W@X7`0A8__@?$=?p-OWn>,38(i9H>U-abb\&rH'.4K]`a)Tc(
%7BDf9C?]s_NROUg@N6j_nDaq$!(E%2/3XSEl4We/]D+WE"A8`E&FsWM#tF;nVN4A;0ntn@)c<5!'S79D.I2+QU-1m4bRE*ojAM%-
%TiKl?PG7(sJUudR93;uu!JV$jGXtl=!<s]\;R&cgAh/d,</K,[qaD,Pi:@.8HL#R]a(gEA>G9f5oI"&hT*L!<98d'jab*=("KP'6
%A9V@>p;Hk]RpiKgGdOboQFkk:AF;u5&cDrFmXH9!X],^cnp'&*<IQ'W5]jg%C)DsVj9dohAFZl-\R23LBV3:p.#sc0?k76n**3;U
%@!HWG'_'[.?9`D^E[U\K8q7!FM%^@-QFr]K`T2Bk*@0RYSZkI4\;%)\9J2*g<nrim3%da#NC%btF"98Yi#hZMS"akO,>9&2B$e%o
%7R2`k)L:,/*>ce%fJ7DiU&a"T8U5AT&esL5U/50H9'rE0-+ferl,OorK=tPq,Si+?826tZ_:ce[&NG@`4WXpV>QE?,-kD6f93lW2
%!Wu.<q25P<C/M7g-K;rQharmSl*;3"8jl'_P,tEp3`9<;q#g06s$\hW-SKO.R89jj>6+#O1MRY)NFS_dg&"c%SJ]!5jK)Nb.2$TZ
%.X743:7-HMAq_5L\L2#j(;XZ"Ou"U];2ihh'fWLFs.4gFX5)Bkk#a;f?\J"'0O]j&fX6U4U0*+1k>uhP0cq,=M^r;r6>"k">L@nQ
%@?G(kN2-i9jbk55SN4T^Rt7e@cEM]F`,(f^CfR/C*S=1jQ<)KDc\BNI[.Zs[/XVj^1*LdVC7!5S=2aD5c;dGV[@#Q+K</p+pC,:g
%$`1?]GpDRfP?Zf$<_-k.:l9H4\$h8nN(Ad;.hP@UL(dIu[!tDi1;b=U2'pe?X'PoNiN^jn"63Bt(PTdOcEp)m-ADbGhH_tbCEl];
%+G27MY@;*-bVJU("lp(&H]Dg['00,AOfk(AeF(uh`=4@cUj6d:-*H>t=h)Y:Ohc;*J[DCFj`ZtY2`=/<-X6u#8o]&CA$ZXQHS_i+
%mnj?.qENC=\5^+293F0";4J48:pPtZcGT4uX3Q'82JG(d"[R*:Pr_r#O>5^hg<GY.=9BVt\j@Nc#bt?]Qf`qFM?%e80K-gAk2,Gs
%,VfLpbpk[+<dqt1o`o61rs+Ke7GVn@UCu`j24A?4nI!jLC<ddmG0%9qNL^&M.PkuXYtX.Wb.5!]?r/TLjm5WI-'=Zhr*)VKIUU!]
%JZB&8@f@l;R%M0iQ<BTS.K!h;KP8ZC_WFNS@D:k#?W9L-VC8cj'm88b.rn+^U0OcZUiK558eb7+23Y@e'cd[8[;oTV,.:.35A0+.
%3ZmjQ1,m[k6&$*O>X_m4];5jh-;rJ):.I:TMR)bm"QV+>7@K%&!BEqOR.$k-obA(\UpsYe^:$'g+$-C.@<G7?dWo0In<W9s$jU;U
%8s_+h/1!+'OHef+,R!CI,WMHjLuJ1N=d"%ZGF!c_&F^BCQS$,B9"9RT,3'->^'pSHP^P6?X#DE)RYT6B7_i^==c>F/MC\GJdKu8f
%6&["K2op7JFm(rY`#`A9PK_R$&8K;m1o[u7%C&&5+W-hX3Os\dUt1Ea&@j.M.R4tRU3I;"8oeY6mg5gMj"*r94K3T&NS$l?EthI&
%$h./_+j)'$M*8XUEE<7]*j#M^Ste$*\EcsQO5VgQN(\17h3,BtTah+7,&f^jhgF`XBTDDunE?8e<UOrUn5ZjDL6m46NgJ#*=!BjX
%e)=ihlB1GM5>\[H6\46kBf0Wn1%YB>&M)YHE-Mo)i,J*9/(I)ra([0=WhkddQ[7aO+'dCH#rl\'kKuF&nO*B?S3O.qLUt=C$q(F`
%/rNQ<Peg41R<*ME;OU^"%].0.C+"=&ksnqiF?+k$C18YJHHbOA9-1cA!00fF9X%<g$7_8@VK[E:AVD%N[M(9AKr\)Eep7+*&CI:?
%]]\f5$&QN`RU\>(M?F,7^<fp#o,LZ=Ud7<j,ClIq13>O-<XT&'Na'r,3].I"8_%X8(bDfrc*of?^)>Im_::dN,mWL>0mGgaFX#m4
%#VuP7%SWIK,=Cu)gPP`32WJ,#XJFe%#^7OR,GZR#)?3cYDH5l1AnBPqE]u#F;U2mSeGA;Wb;o/pd5+;&WPlJ,1l_I0F7u`1rH*d?
%:B^iaZ=tS`Y0=^^AKqEq/BhEWY-jekE#%UPEbON-/GaT89sY3[VIqTVfoV7BbdMn7"?M7CL7DKP53@fUQ)eSR-G5W814:Gnb08*/
%52iZ7S(VThp<)'VaV=^mnhY(K4JH6I.edW9'-uaS>&,!QYdD?H`t8JNZRI&Q8C#`FF1l[u^,"u\\T3Xgp?-])/=5t9q46A2d)]Td
%,C#'_"ZYYEjqEa/8G!0Sb?3gP,7k2&9H8gP$8C@4H7=CG?]kC6ZABN?7UVNL#[tdW(q7C&C=)%]pC*PrF>Q<aS4%m+FS=^Pi`(Hu
%"d99p2F92rZk`B>+>o.&_C<oG&^`HoY@]f?$Ai+bU9_iajZ/O0k^m&=1Qs!!f[=\PJB&$0>FF!89=aA^e8IgOK>:8KBK?QE=Jg=j
%0JXWEmn`ubc_BBgh2f_%AG+@qZj]HUC4i<pW%4BjS4OGVI$)Fkbo'/U_r(!''I7/)&.aNSA+R9J<kT,KL,qt>9c29JbG?Qc5UM,h
%:?>PJ.IR1<qJpM<MfL9;"UsfSC!12CYc3NSL$WJE'US4L]QhaKCM;%h&?lXla-^!YE.\:B".,3Aci>[jOMK2h5)#&do?@S&AMd.c
%j<Eh/YaiO[?3"Za_cd!^-m>'Tl2[bT5\Dhs`HtEm^qs.fZkch2&46\%iBjC2d<V"F'R.Hb<ZBD29QT2[MYaIeA4Sm<MPe<`oXJO7
%YtP\.6`3ITjICg$$u".6k:TCm`i0<DeBVWY]U.cY#(9(QDhRe8!98I`?39LYIB'ds%NOEJ!1'WRapE>7>b$Y'+>pE^'Td=/!`s@H
%I3-ZuHndOobN@A+Oa3/pe<M$D;2mEhr=aABJ!"(M:@H[<^N)S(ZUM^7<@#75?UTq9$V!T^B%\Z&cn^W5B<,^Bb;]j;ARn[q]\m!c
%,6X$YEB3gp-mI\P&b]kVH!E%@'sZ+N:bXL?_XmPd;d>d,\stgs]N"$!,QTYVk.HUFC?D@EG<)o]nl!<9N%KA?,4fj/P2d`(OaB*r
%.VGZ2IB2Si`seC-0B`?j6P^)(6UPj&'HG=&RI5Z\3RIk\:RL@B1[u4-NgYrl/&o\FB"cO`A!J<;bV%FZ%X:iG7Q<L(mmteR5e89b
%"i4k)Knda+co^2-79;"W6;sTAIjX[K>%cg[C^Of/4IUe&7/rtK%`@lr7iO#oMICaoK(1OfYoRQ5$G8]j.)a`T4j*7"<Pgm(NY@.C
%N>@uQ`6:YpP7#QK*i4[UE(olu*6ZQb:>SOn!Onp\M)*=OOVHW;&hli4U^qVHK&r"*Z2#dpD.8NeF?r3f(N"1$-s2)("\FLeE'>JT
%#MgI=!s\>`)4tsn`t5&+T],k^^jt2i:acMA,Tp8'8@UZS4=O2C0a!+6k702)cge<ope%=s=^u*n0NsNX,cO#AHs,goQOq3&2p0*d
%i/;P,,*`7sP9^@^:9(X5..mkp#j'8FXpJN3)5pstFu?2,GQIQK;iEnF%SXlR";JZ\FrXt=\J_6Q`324c>,VkU0n$RK@&mB94::\)
%gkT'2L+W$k`UtJj7k-;S1)*&+.%0VUYa619VANTk\XOmHK1AAFnJRYbk6r,C`]X]=O9_XYI*9pX^kt>;S2/(.l4M^#MQS?s-+D"+
%XJ5CNj8_jRG=W2IS4QdPWEG9_j9UdhTG+,+Hmk2`80kJRHd""+,Ua4Y[R*M-651[VA;DuGASB:WVQ?S#EMYkK>YdIP4*r34I2[uh
%@OGf2fpm@GP)-CtlUQ#P7[o<Arm`XC3u(b,'(mYp`j.MkVf8=p8^2OZT`V,F4-R47FPNP3Og9\"3L#N^WcZV>fYaN32%8t/5?(54
%@OgkT9AXjY]]*NE>[e0oJH$(H\<*C<66KB0'.<_lq0aY_$Q+T#%f]m[DpoodP%En&)u;e3PFB$hm/(;F$<eQcO9?I/RO",^)X:@]
%/0U^:072:,G2f%]\2W;E??pcR25iJ4R[KY9n9)rkn$UbFJB<Gp`+Lr/d(smp:$,#GSI/ZA+.*Ah9HR=/G,@bb0dPL.U5qapL"S&N
%[%?L`40or\nP)M%+mm@IIT2QHVKLKF@D,k>)Y@q2/q%D,:S\1jZ-f#.XKei!IZjn^8+o1`N-()GDrP"4b8%ahVBnNYA40+EE\oF?
%W9VYm1bg=Fs2T7F)lkVh/[Wf,[pC^k3O)kI&"Xl+>!Iul*`YgPm9`Hijb^t]YNkPi-k/'=T34GT983(*L_s/-f;[]*@arq:(t:9S
%7O,/q-U*oS=-@O5<O8eSV3rDsPKj7j8[MeY%76XAZtM5!jupYDOnNSk@f3m,_R\B1!*kUVD"&3RcRq]7C$V8\\!h!MD`2qmcf7jD
%N+Fc5i?pKA<I.p/$+d'.lVPitS8_=#eOMLA<US"mTMAcF,?=Ra.+`ZG`/J*[REJcB67?/U5Z&:GpF^AlK$/#2i(o[><=1LsIV;q_
%(>VM4@ZjtqZ74/deKoR0@GOpjaBo\U.=WQ6AD>\U7l2aXpu?@2c\Cm]e..J,59$6EIc3.Ks&>LY6/u=!/QH8'`NAH-,F+7\g2!r)
%TJjOipWd9PeN"6H@o@mD[(R50J,Qrd5"=3A#_3p),nj+E-pPp".WX_&K(ljX!amu%bQCa_bpE.ro)#3K#l8Y+H*3$LZ&5-[Dj!SV
%3<AASo+R(Q,d[B_YMHkpj#e\_nfTHo(BS^gO>%a,GV2TjgKl4L"D(I!%#NPDl%!hnO=)oke%r)+#olAg/rCVB+ZC&#e=*0:?aJ7L
%`Iu0%4H5Sq@"I8oiMEOJ5dT&d*Ou_k:>B8X(8[(Ie^en!@"TH+?;i=gN]$s"*&$c<9eeIA`fJ28Y%s3AORaoN>iW.6r"<!u"eUJe
%I^<?>a70"b/^fi3Yta#!m%7$kri,cH?C,03[#52(h!hZQ>-tZ)X?Y7.+d?[MfpE>X1$SiAf3oIc"?%Ok:SEi(TG]g!`NC*ZD20$<
%2CqC6!%r(%#]^MHAk`@M+hd<07WW)?0#>QsB[m=6c+)O+&<"s:\gp_ZZjt4Cs2>UHRkMaj`6)^Mc@X8K)Lc<-5oLWAOYp_X;L2Q&
%&kNFLi>4#=mD--t]TRp-/Vb*)Mc+>VcrGl0[EDa0Q_>qt^i%://SgGd@(+WK_pSG6DTn0HU[j[@]`dfTbW@lX;DOrReu@n_?JL`q
%gKpU0ToX;b<sE`ZgiL5]_H^<cl-eNOXOLRF2a7[TKg(d`VmbD%"u)Os_%Vbb&iG=5+;Fo:^F#u3T_5&S09HVQQRGrSYj$btbY]6&
%BXMdB_Wf@WraA.R:pZVf<XM^/l6r6\"=XaJ'bQ$rh5g<^Bg?40HRNQu4B?Nt:NbBMZ1_5q.dKH2bmu>;A;:q^oFkU/PuOqT3Dnab
%Pd$I[)^&]L]tMu)njaSR`P&K%$?grTl!V/^2.uS8.PTe^4Oq+NUKAKJ2(Q\ajq3R]4%!&,1@=2#^)ekF02o]#c)jjd1$sFQFh$C@
%*iAVNB8+H95paS.LUB8a[kC$RDC+2gW0d;/7A/obXL$O)4urj&A0b"E:LGZac_%F2iF8+76#6NJ2lh_Oke=@Ar=Xp.l(Z<4\ns5J
%FOXu`)fM9bT&$J*WYfb8g'gPF<0Nl.X#29Vf\CYU93+pta:!>kWB-qag.N_eAk(j!Bs4Y7R!9pnD7(b./:/U4#NgGFdsY?RgR5Ra
%hB1Ad7<9_^h:!%aSIN7kIB=\u;NhSb1Qu;M&9S6HBoFpK=3m%efqNG(@$U"P9jYl$0Y$)Y]2`,dq+T:1"7T,=G*i0a_.fCL;1.U<
%jTOd)24,<[Ik[iP6aP(1fCf,RXM+mG\VJoFm<A9VDif"bP#!k<`[!WUAO:l6hA0hf(:r%GQ5kjd>_plV1EWoS5GT=K0ScbJe)ir8
%]j"Q'N?EsnN*bq]OJF$F1EM8Xgo??BEikN,#,np<U:tlR9^ZIOGo2YGRE&'^lqB;C]F%@HOD'Ss1DohSiaG44-*1g(ATFMZ:gY#b
%Ah'-]<+'O2_Ra(-;]'bO$rt63X;WC.X(VO5"PXh`*jmBe+sO8$e%3_HX)X_:;?^USW]LFJ10h-=$3Dp1X`Y"6#4"T=?u;WQKP"Mc
%'*d4fcMOT@g,[m*hp&$#*I8,PEU'"B^8GERIpD3D_>Fr$`u)_WS*md7;iP]diSm)`,`J6b@<gRb63-<B#&j.K@ahr<liH^&-k"L=
%rh`mX_j@=#nLM?re&M]XT[EPuoe+j%rO3u#H[*R-"#fQUaa*XG_7oPIhR,6uOdII''*%P$_8d6ch9aHoIm"#9pgemSj4_dE.`,$"
%-kn?sA5A/7PkZ!<*5k$)WPq!6Nc&+2/RglRiPH&dH9l%H6HKf+%pIC_SGI2F+dR>2H[N'4HM?soZ0Ugdd=P(:K_cMR%mI2]fdGjI
%TKT1/DsP2aTit^N1=Gc4[Lh\-&kppWZ+gnbR9<+T`$m2bS>qfM@kZu.C,NV1QKhpS"JXJ5Wjo14\=+!YLj=YQbQhtT$6\IDi];d'
%/uZ9sS^gt^i?Tag&,ec;Ln)u/M*MY4l"(\<'H1@eih>UA]Qo\gMu:K*3S-5^`8qmh1l]&MHu7cc8kn]tMJQ!)_pHr*RJN-i<d67J
%jfh$K8cc5*XR09("dlj>"qn.fG?Dm+IE`<\RHfMul7$BL0:bQ2%^npt&K"kMA;[NE!me;(M\UUBQE`'H$8Bq+,OfqjSC<96OHXsQ
%RUMH_O:eDSW#7?jNPP=0,%J/%iGjk'hKE7X341Z+S*mY]P(Rh52q@)0]B^JCRU:;4Z%&!6HgU9oTNa-W'*mLTMQZ.qak&[eq_<)d
%N]Pr^pD[/P\%^6'3#[<7E6rMp3T6bGE8mX<-Z[*)d#2Sn<"a*m:Y^gGQdY<:`I$*]M?GTk+[XiIB0%Sc1Q<0hf+FVj>%Fm;'^O<$
%i>Scu*g_(72fn!f3prbfC3a+%i41H#Ol0NC(XClQn!;.9dsjui_,pNB2:8`fD1#Va-knLD((e:+D6/_ZD^&YEe8=iR/u-7'iltN7
%=s2iO5?'&OMOLGRc+?"1hXe+Ob5O(h>bBL['j=?'EEUWEHs_Ig(#-7;:HZ[=9(s8W]\$2/<Gl,)deq=1r,)+-;kaS\fMVNW_j"WT
%okWkXVQ2YYT?G*$89Rm*k#s$R'+T9qbp-?C6jb^s_,t(mi+bZbC/<4cpI`LV$RL*W@/F&r<^1c-hE#'r.TE60&c9H@,Ss$;bA<)i
%7@_$u<8QlR,(sa---$CF+2=h';tgsng7%l!a2OV[bP+!Oobna9F='tR$e#dI73#(7:V[Ck+J3&ZI?1D"JCfM79\jdTe%2dOTrt_h
%m5E-G:H"K\dXr9*:I@o4"neN>Gp(\@VembsH(#JWWf1#?2%eM@lotK?lD,;1c2:=V[B-k!G?.FfkjquM^%8r@\a#c)]j:'<X^6T\
%hbZN/ruK;2KEDc5-kiQp*&`rd!XfDAO9oaOq@$ln`s/H$@\QXf.GQ&cWES[b(e-5Ibmt(Ic;jH<_*`mkG/<VihkIU"L+b;$7L\)9
%I9>??a+Xt>-ote'Y82pPFSTOhO<\rl1'$MJi3EX(-NlGI+VY<)#Aa^Z)1FJYh^uRF=2b@q:Y+D;N`dRWRbe'JqI/WhpOjcWBXjp`
%!;:D\:WMdZ<!pn'?OjF.f:-;$QD[]f3H\%OR0MJ^VBl7,/4[]50>"^rcC06a?eiRH;US5Yl.5)03EDXPEraE!_\)csAXOBWV2K@B
%MK`[S1./]!"gUmFlV%3>8-hYY`78$Yr<ZdW#@1E5_$kNDIc7YGVrl#kKqMW,M1QO"'&o3=Uu`;KpJ6..SEdl'mdnlP[p5pNUu#9u
%KIY19'IaU+kB3toAToPGNm54W.,%N4Lu,iIMAgUl;"$N.n-W?\qIYmZ.'f"S[Kr._W8MPdHMIeAY"pJ&_7O:e:f3ZcbSMQM&<A5j
%Fj/dL:&Tpup%*d,I6rAhdUOm%2U6c%5ig.V9&G`G?+91_%RY*_ZGF)#ZmjVa^WW?n(@mQN?,k^c=(t4$QHVEoa&1q)#IWf`(SJh8
%N<b-RfoiB;X"e)@lYQX6ar1d*j&!2IN<b<.DN`7ZM^CD]NNp#g!FIbSe1)YT:&hZ\PI7`iIGG;qgP+JVFi^e"TC0VN:?YA^LTq_%
%s1lGRFGe>%(cmofZ8k;#OqN.qnYU7iF`\J<]5n`o085#)1>_!L6ZY,U[%c-%4#U/IBZbu&>1o>Z,&?534Y$2:ql\>[F0g.cV67NV
%1i$DspoA?'C!G_05;2<T)sL"7)H08;hq"M>h]V=]#J_"!THJ<--Q-)VPPjT]?6Q86qp/P[F?6(di$i5U/!Ft#b%08&+<@,!:59cC
%)khHqU8o_#q%lq7j?q/iPrNX)eh7koF/X\Y"/GE<iLTJB^b7C!$=bbAWK#<;e0pS3FcaHF%"f8X#,uDG466WYPfbF[nC]L\;Lld>
%35'B^G5uKQasgOqfGgjQ9H"5S);OZ";).p8K9_UK]bEA,nKcXXiUc?+%b;FVon(d4_Fm1<ST<Z2)O7SE$e.BcLYSLJ+_.8$cngk8
%H#6Snb,q`D:rk((O'%,;.$No9716Lm&[(6\`d:_1W<nB[b-38QI$Zhmi_KPs=05I\!7tT.G>ZW4SPpMq,;lS84VN-TU"6.`CUP^,
%X_Q/"RB-a50tp<E=35jK@;TZJn_ak,eg-N'1$P7J)"RR!LF`NqBl9KF%dSV;k-U5=oEt0CV;tAU9NReT5GEHhrSUQiWf@^7^r&.!
%4;g-snf6/iG,cnaAs!U^9aQN_i[%5[E_VBTK%hF=-S!^9EBR)]q"E<I*7&S.J*GjnpA#1Glo%ZsF2ma]J2uXL+DLV7eNW;nQnlUj
%k[)am$.))>b(*0\,=W$Gf7cqkXA^bU[GBPH]-lSoV'idfMX6-jD(/J<5.-1:;aMmA./!l2Xq%e]VBa&:["l=?4sDI-C<n8CPgpAk
%e'(SObGH4RfZ*]H-ndAh5#M3;.QDKu>iWB7QM1dlBg"a>WocUa[;\2/<&1Cgr^K8nD3%XLjr^UPKVGFX<;an.C/.e(B`t/:b!jM)
%cUrY+lXd3+fEcT[EiWq!8D9"f`5p#U3SOfp>[`AKRkt0eaj;e1C7mBbV\77YUO8mVjbG]W)o=6o5$iI4>HAY>\!eu"MWa/H$Gn,o
%;CXX0.fV*nH4?-X&_msF,T*jH=qP^MV<C(2OY+<cLe0HJa,&[om4/[5fdg.hf^5.W^6$dPp&L4^;2`A"L0=$-:pc-W9PWrT=!qZK
%kc)uO8)#e<2/"&%U4,@Kp4?5N0<Not@FhJB8i`@3iu67?[YQ4Vnth>XU]lS-l[qe@aQTSj=&J]CPoH"0[KXEJ:n&XUS*]LtE:b^a
%JVg*%0Zd:RWrsadJBbZK2o=,Gg3DQs;u9D)5F&b*\8^!,!Eubm<L$E`1gX4p<<TU9"*?0sL2Ngg*nU.&oY(GKH%^4]1Rq)CiW[$o
%q,VngAn3cU)!7t\E(K<AQ$.9%K#3:k_3^R\PY@-;BhmbJ3)iM-!UQ[sC>r,e=TJ=F;&:RF^1Cr3?1?e.X)ZYXS'#s_`Ft42LoIAp
%dY#dZV,HDBi7CSX6.3[W3MpVPd5UJm]V.)u$HP:,.A`61Yq/S9.Z-3#CkBX)k$6M\:?ZY)Lrtro?h"25cKa3pq'`7I6%IHAZ>rZ5
%,$A!DEh]i6<Qe#'+cVO8+UiLZaSR)AaudfS%49qH;&-lmX5Ot-_t9\[PU5p7LNQVZbDQb&3%cZ&Bo,ul#b'&2f(<d/^';P9KQ6>B
%6=%g%r([0G7&\&8(Mq(r7*VZ#\Ch]V&T.V^K2c*6$EN:te2riN"^9@ZWn_\)4WCAEn@7D?5+npo^:b=@<i#t;089p:abUc*Rh!66
%Dq!c2!..4o`SM(DZ(KWnAj*tS=E%pqR(ZEthRJ[hTTt,?A'%OtMM9C="1d_r*=1d4FL=(OC1Glfh'3^?J_-JuY_1)L??l\LMo+C&
%[<6u_*tT2NA+bX"(tRS@YDWkLc`;FSMI.VQom/%c"2$P6_FTqk-adil_1NrFL8K/"ZS<o8+iU_oJJWVF)2\%d],fXpq,roO;>VQZ
%$5Cc`1,kgl8UuK80F3cUU'T#X9iI!Dq]b@u@;^4&?VqDhLP:f$g8iHS[9aHq:j]`Q2_+ORmXk5GFfVTl?K6kFA^2T\MQUqXkuF8H
%PX&h[o)t?_fqd;):_u9jQu5T_PXTd38N-09r2ZA#Z)4.hO5A[>OKGo7k"IeIa+`3TPsjcVBnW11^=:8_NIYEBFE(.4X4>e;hb*%,
%Lt`g1K0)(L<$eag&0KKuC^e'H%7+76bZh4d)7Xpjp5.Z<;uZYKXA"TrFU#+.lP?Ao#E"fC0MlU'.pK8T2(gjh$:h<]J?3Ta3'<9R
%-D,g2L9`r(KZ!u9EmCo@`s2-M<Ge`@RZ.K<CoR`1D$uk3a`'@lZ/,kh;)Tb[HpY4,o`U<XdWZ'tL]2kh]2X$d$j@X#HU[4?TNVb"
%"5/F:mC>Yl"s:A+VQMNVYh/N"FZGO8-0<Z'I6d\Ss+57t5Hqg>%Y($cE.>.LVka,XG3G9GG8NgmWt2D4:M'K-J$q,!,H3f_8%#W@
%M*.qJ1BARpEu1R"89MQ1i**3_SCjgpo+T'_HMs'?c(MS*oAh%TUp>*\TH^,3S@&IqM5597[Q:'?1S7]hdSGE:*"cJa:UO<43'Td<
%:D-YaRB$q$3F#m[0+q2?#;&-s:WkgiTm8R"BS#ptOi1l!n<8dsch@<fUASE577K^DG\^_^gh[1>ZgbYgp'>GJ!#.(TF->/>_7YFG
%P(jG8Ai5:PG="*oX$K"=-J=AGr<_=rHFdB9J:dN0:QN.,;?+5,;VX3=Q9MD=g!G/(EhJroXc5t6:qt(Y`:#+R`s:)?)WY]52/n?(
%*.0?aRa&^Hb$3PVa[Lh."&e7!Na*ukK0YAOE=552U07*\;E%f!V*1r'<O$eG@+6)r2U[F88Tt[b?/2Fro3#Sq<`&=:`i$hP8c(PG
%s%r!ER_UW$Y(t`_@?"LHfc$#P[&1W8F+%<J)7HgFrlc]H]"PDJ0hfE[U&nL4`FZ.?1'pqI97rCGRE&08^$*HU<b\K";JAN>\\!e9
%R3A-hO_CQfS&d:W:VueP\eAe>6l0&Wh3%/6Ap)i`#jK<?`]gU*V"6EUp`B'W>hZLrq[sW0WRkA"QeV#>BXIL*%6:1Aa,r/m^?ano
%$"Ei!8Xa0b%Bs$B&I!9"/2!6O'ASB,aq\OK6S<V>*J?eN#QnQj89#N&[Fli"V:-Q2.L]q-GF"l#9L9$"X:$+s;n#%D[$=>6"e.U,
%oIAE:*LS01jrF?T.7+07dd&?,:ae,"-CAY32&m1JI<JmSh$rIS]pJ5SPhIkT<J=0=Vh(L@_p!\mXLX$]G>.rdhRYEjE]&bt8MomW
%>@D0NpOS.JZ=qaf+kS0!+>XfHBRR$P_Un5/N<hObcipS-)5C$YTIpO*p9*m"Ic#6=#j\;EENWR&`X"R;-8.-@\n!A%RJ[leI5:]"
%^I4&X%_),n^[/sQC]j<Z4D7Y",B0084fW#P!4G4$Er"Cu*^+Fd3NNP=FDlZ%HD(()`U*\@\BAW:`q5)Drd_A/TP/ft=ofgoOnbH3
%U@Ip^T(*WdqK/A$iu68>V$mhOhur0S*JOfb8VROL#F*@%32/TuXKnb`bVG0N)C"Zmi0^`I6PK$@YsO*R^]VRN5mVrFLuF6g]Aj"2
%\>u$cd=s?fC!H-4nDbFZ%cCF!$ATEcE=%C5A8.-2XiCA'8KBR[&nd&ZW0bgYB<sW6P7T?E=[H^IaL6Bl@TsPe7GNS`Zk;0.e@!nr
%"W3d_n(c=53oU%YPTGLH/OUq#<mG;aXfgu]*'3G":6\`ej+MRd?dY\4O3s<L[4r)b^\(7DYm]t\A)=bNXuTOr'C&PV_<5rI!aMt/
%`k%\9p!/\KKn]EF(?6qs$[OgQ8_,(3o>GK+]9$'JUH.-!o?DEXAG*a]V)A!Pb7/qJo#]8CbU>#?9ne$tCEB6#UlO&<)GLWG8??-c
%/sHjRX>8ihg[;Ia80qcX')1\*%qGQNZ-XG5gUq>KV(:6'LXeTc`;LSh7d\dD[D;!@VYg8nG9:U98;^H[[`nk+Z3`9T#hblr#2KY1
%Witg,OI,m-YmC_+$HA#4U2_N8]Nu:ORYenR45;?D!2iCdjN7A4RAr#&<b,#%JZJbn>%7uY7)qeRGkN58P0-)bSI8f/`\PseaKm4'
%Xg;\B>nJj6D6,TM<M`s*es6dUcI(WJ7r+X*3&9+3lT-hqK59GMI21@BL2Sh\^G+5=&8RkI=g"Ne#B`^AVOi[V>;WN/3MprbNWIip
%lE96YAJp&9$2r'Yc&OCmM_=TVI*R4\#a1sO/<hpV0K`F2Sr1+[EY*C1ItVRmo<a@Voiq0GFZk*?I>p:_(2l(\9==25hp(-U)t+j[
%KGI.?$`HbaX<=aj''fch.]W'Uq\$ZEHQeD:%_!<C%s=<#f;F4l,`Qnl_m^JImU0jjdoM[$9pFMYVB<qm/#osJeNdBqYe-(r35)/e
%/A[WkB]2L0D>dr4jLW]rl8G\)I/[ZaFOrC@forB%E2tY)7dRRfIcqJ0+<XfIYh*\8chBb<#FYA2)mF)n-!D<s:"K)G]gr7AFj`/r
%.8+/3=kgRF+\>md)et;TA<CPA2Z;o&*1D]sA[]$0=j<-X>HG)?jjBU:K9aC)>(X\h+4g'pJ<#tp=@dSiB"?W$T)h!FO3cZM*qBs/
%&U,6tp@HYI=MOX*>5NI'6E]S=D)=4=&5'BZZll$S%T@t=CkBfg-9?>=S+TGR#6kraWZelA33cA1D$YnQJ2G-4=@?g71'3K-!e6G4
%Z>HMf%aRc$Or7j\&<2SO=$j,Wi*L2ZpL16*^6@G/$04/e+%'F'W@?]/nRI6-24i+3ZDaQMinh?C:8XLkH7>\KVAXoajEeii*ZNmG
%^A?f=\V+\%ZdOH5QW%fV]1Y#rF$*PPgSjeG^!=pWnlZ1.n(],L2!'7>>V5?BF`ah_i!"s>Ta$Df_K%Q2!K\q[d:pj*&]p7Z=8:id
%n9Be!L">C'Nc[bZq&%nZ?Y9>YJTk]2iu,L/gD;7J#C'm%1`kSo*1j?]5Cn"_a5R-V1&D0<2'9.G5WYQ"VN<c$OLnQR08g:pBc/G-
%bB;agj:a_-4*03GMGNR8$FhlR/l'3Q8[+!m^n&kmE<)?9X9%Z>Z@P*JA<Z+8O?8[j>,TgO\Cel@*,XK6JJ_dDi"d=6HW+b9o!$^G
%p8ZoX<NU\2=0>=qEWbVGro8!P:C$<G`2(3:4cU>q0!88eH^!Z4B]]#@l;+]Ai(N"Z7Ib55/ii9DINk5O6QZ/OFH.%T`]G2^*ElC[
%g+\J8=/o1Ch$ZA8/&5GS4=idkN%@oEAq!j10:Gi.WeNG>"3(P8o!jiTmPH-X!gRJ%@j3on7_?IICjAKb?&XFJ/\def8!^%$kCoI'
%97@We]S3V50JtAb$$.R06=L#G7)BaU>u@8Gq`FUVI;-pf_"TI,km!WFE;OtHlQ>F$NSf,8g(bO_p#b\/'WW2($`0po%(TSdK(&$u
%U/8J56a4qD,^rc'j`hk$0a5W2Q%S/=R+[ofrCo*7ZERs`O^Fi[.(+G<nJZ4)-[4<(>[bOg/^@hGQ+A\]J9IL#HEEokr;0#bOtt`o
%Y@:uO<&(p`G#YQu35j&ronjb<Jh^Ud>3?Hp&`0T)[M1@"_t,V2:*\?-GuGq!#Rs(K=4p&f2u8^!J_/4E,="s[8Xo"m,15tL+ZDZG
%n:oP$Z5IZaZlDub2FGcQ)W>[q-e+<,%HNf8)LrJ5%mX_(o%OMS;hL\`6>bKjA=4"R'=@%"5!?(`[kB-gH/6#B3%Tsk,.4<;33Bm>
%m*40/&Cf5/hVFVW.^_Y)?mKfJ+C;/C#\=.bSZ*/fU)V%],iFHVURWUF[aaO_f(eUfp*GTVEc7S0_"*1VQ2Vs&)<M6$[4]5ADGFRb
%EV6JhKe/iUe<AI1_.mVjR?<D-HVTaOX3t!1(SmEtD/1;qWV-L(["?Kuo_+e,G:HM0!49cpXI)GS\*)\:9gR1]fAL_!Zap4GLMX(Q
%PHn3c)L]nlCV1p4aXL-j4E3C(?73gP#MUs^;NZnbS'-]jG4OA5P1$q0:cY:c"Qblk!_]p/^.(q=7VG0N^`%cH$p7$Po+@5c7EBN:
%]/UgEKTV-PBBhep,\Q?te>^(t-ZVcHVIU^k2$2Y.RN_TBNUXHtB1)GoWYNZn*FUR_jRY!/i]eW?7G]skSM2UPPsK/;=NX6jWJtB7
%UdWQi_q;$S>5Q+?GXd;8!G!EC$!/K">7H*h*ZN8fUZ??SNTE%Q1d]V.bUP'?Ql$fV<pEU^4lH7WHES$`kjUV6=qu[0h7Gl_Xg1(*
%j++L==,*pmVXIXXWlkEXX4%X"2QF//"5+"3GA,'-rU<!iXW4IS*5K9e)JSZ''=.(kHj8$V#INr5J_8^fA,D2W4rrE3EZ9HjFEdA9
%'Zk+Ln&T9-=E+rc/7U_r?R2H=>=HAA8-MW#ajgq@dI.tEJI8`o',-OTA+T?2+GO?jVs>.b/US4J&0i$BmYW_o[R!<((t?U#4D?g9
%.&l9,'X5t-Dbda>lPI9!NA_&tHKAM4BH1&_bGNTZ7o)$t\jH%#V@^?rL'S?Zl/2WB,gPFj0AqTK=l^bTSZ?E7,9sWj":?\:!@;nR
%\T#@0&t+^0A"Wp*&"Z7q*eRpYY-,:!jK<Hf]tY,.<Y#<_8*oiG,uP7q,%F[7]"!YOZ,30<IHf=8=J9>Ea=c%ROG$Bo8f\0FK0J^A
%ld'?p2R$P_PbHW3]LXp3E_67Z"&%[87($P<\"VFZXS(m7Hl]^T$U@)3#.F(H#JrC'n%/O6YM?q-bEd18/?0)En*Le^!URG@g3KB.
%?s=.gTkn8o^rIC*6X)e/[FN50[P]WmWW$AWmpDbmSYZmAJ[]Ce*,-AL+sI7Jo@jNes%<I-T-:@O%Rc]qN%<N@j(sf%E%)O7$cok:
%q^<EEG?s2SBWt@:a8#1FfeC/S^Pkn?4ib*Hm/D<V>kZX/rZYRV_#@e^0<&$V>CscQ0sgF0fPNPbo!MqHBHkJ.Pd![!,>*hJa?=3b
%5_MTFOUCOmRM4aO=P59Gd>=TC_X='co9iX#Be<pg8U5C@RrUi?1YjUiLBr]4*c=D]Sg4W#\0]`.MII1'glB-oGgC%X?Hos%DbeiT
%-N(Bf1[d[tHe#,5-/?K!dF'Tb@BN7SNIXl&_X\*C;;@$SdR?Q-rL"$jBk2'Z;u\0u&RB;2^D.#T:u&)FL\u^"h(B0D_k'Yfi2-0<
%ZqGI-RSs+WD*GS>,5U><Y.<fC63#!54Zg7R'"(B-VVCrm?".:["5iPq'..k-%=J$g]M!a4rE+hlcUQSYC^tLsPfG@"1miHcGTJ5G
%d<)Y#Otm8gMe_,tB+6)SL%MVCNBf6+0f##cEq>/p3_3G3rNVJ`NQhSdJ/K7^NB"BM5B=7,5Z,ZD*L7u<)61r[-oIHVC>ZtK`9T?P
%=7RKCUcCZ@n['H`)1&F0XC2N.fcgqlk"O1X_?Qh;kXNRB?6@,iP(1DZOXeJMiagdR)(eb!^u@2&UbjC0#LSMCE%TXAfLE(W6uXYY
%g-gpt&_7?cQSITu2RgV9Z5GRN?e[TQX!!7&7F!`Kd$5T8`S7a3*nU2R^%Wg&P\-Mr'WrFYZPZL:N`:%Ni\/r]JLI;/4I`-[fC)h>
%CC4;l6i//?A-<"W(l2!WQZ\pd[H.2-=^B"G<Qp5@`lf(XenLirgma!2fT/DE)%8mt0P&&2g.r6i;CUD74mFhOiQ8Tqd;l7O+b_o^
%<i`oc_m)cN17GGfLd#=20@[X+Ui+GE5`j\ih.eH?_iH<1D7q-na=[dFFc1Qs&[<7B_Q;lY!XKbi4"J+Z:oEeabnL:XVOT2QMi`[R
%nO1)K!n*Wb?")>45!jsUM8POar:82BXMQ`"82["D8IMZf?^0a$I=t4T8>GB_7WVh0A+geci$/fHdgX2c&a0"!NR-I5?_Wor4b?lu
%eKuG1IQf^jA&J%97DJ>3`\4f+iFCo7UoiQpi0Wd"L=:]\?1g%k!FQG>V@NZ"Ak$:#&ZjDg%C..Y:p@r!0RQB-DSJ%=&1[mc5n4Up
%m`HYZ/G/lK(u)//>b5rJ7d1,X"3;6S*o_<(P4'fS#b#BS/)kEeg/u(QRhi@@0UpX#1J6;NB!ZQ?[*XR!*>&D4o>%]F0f8b`TTsHH
%.qA`cbY[I$`G2$Y,EEYO%0PngK6\nJY9-_>8&C-(mQqlgR<(5c7t'3Z<!]S:!G[k?!2it"]IKUJC1UpBVK=X7_VD&s-g@%Rks8fR
%B&^5.FAXb'pn]@-h,oX4))WN*oI5Wi+*&GDh$O;F;7XnM6.)8XEebqi+#M]Hc)3#>&MJGZf]%o\>qa/`2!88>)*b:nZn(="'F$#Y
%Y-J:<LfGGFoHAc?ML^eQ--o81&H?,QV%egm#P[#MR]2!=-"XRJ4k?.&'d6ka<NG/+B2Ou5@k6;eXPpJA/NMSf@OK"hTq'(d=@K?f
%U'jpr,H52Z-*nfi6#_`c.7CHudrd)/Nh9DJC]qL@iDQf<Q7o`,EX$GUhk4nU;AmI$>M%c^p?016Q6dsd2IH7iP];AYXaGq!dt60$
%[8*D%gTJ^QB9^[:pQ.73BQ\h*5pas-D'[+c<e5m;ZsjZB+=u8?[6!!*K3(QO`Bs&sB!uG]L2XXpq[7,i!ZgmZ[oId&$I)8D9k,;E
%GiTL>T9aas0sB_6A281)4%rAAN":ak7BMd6"^3o#9W:3HkD)0>-=i"Ym"<Q$G>tX/>%8]*Rnt0!^pr@L3/^"g9RN>hhWYX;[=DU0
%!fT6t`dhqRd2bZbXf@6KD9Z%0NuYiTRZ^E?'m=a-WY[9oEhtjCBKs45mZZTl?_YanhIaBmq;N81nItkV6Sj<,WdsmFoAI)-+?Gh!
%'cO)1P`a`4$oa?gIgu[_"3@$2=ZcFs*;;(LbVP2>"qh!2UKI5uK&?iQ-]5q1*5h4l-a2.AL+p4.p6sY?rk,TGk:7ARcM5Auf-%<f
%M]@Nr@)J<=]V4PB?<Q_(6lWd0kSi58G4dDT32%G@m1:`Np'k:Qi=5)XEcEY=(WHckgo_+P)n-f9UoAOQp2Q3j8*u3SUY"Q$D\9U.
%MjbXDU028\m)2gD54c,p:TunI.d/t!C3\HD,K9u;[dmoMVHh4Sl.b]dc2,2I[pb/VKZR^CSi-@>IVco#[O7DYGd?@C+$[3m=mHi9
%s0Tf?YI<DhA9)FOD0Q]k[Jb&__iokN4n[H^28sAonrIX4P!tP<rn`>X5-d?EfS,.t$<Q\o?$IR\A"3MTKnm0Kdd5VUYl5?]\E"a$
%n0BH"#*?P(:VL-?LrZne3R"nXS6c<B\,0/Pn%SlOqd+D7o!&XB+<TA-J`C5ZrdaOqKb"k>S+$Gfhh)FJTD.7QiF<B^&:Ei\*rt/E
%n:BJ,%mJqKH!OeE_.W6YHgh'm@h1c-HgJR]kT5*?7ddMb+2C%Ji%o83/bm-KYlu5R4a,a>C6'B[KD*rJ&'R5?nG+#BILXB(!P]Uh
%s*j921Bp<KEOlH=)\@^Dd&%G0%e+J3%OlgYc<AE^[7;Mj7of,F3,Bg);.`EJ.sU\ip7KFtPiO!+fU`1.`Sqs3m%e0X+c']O.Mr3&
%$>$/tgsQIP3A%ZgWMqr&&a`n0J-QI.$XI7h`XL7pZ\\@n)UCA$"oXZ9`J2Kj&3Kr[cB@HY&U3G>h2P9c-D!Z$$eaZWqObI3<dg57
%;Np7(,e3=<_a'k===7Pl'i\q?9/q_G'O"3[&Rg6Fq9+2r_^J\t(5F5>+K[5)hq;$*;>#c*VSh"R2=1nF]r?B7g708:phUe^KM4X)
%rDreaKr80l8\Y;C>mAq@/Z#OP`DXiPfm/s5B:(qfmU)Fg;pl%X!)o#&ZL\24jJ$09K.?<gg($W<f4HQI^VFNbWE\*SL6AL/j5u%Z
%(=oo?9kuDs'XG-skn$[af7mh4o':ua'e@:mQkG)ie/E)2#-=e.lVTi:`)W7(%'DrX69)oeC#>&m+<19`\eB7&TVRZBmCJGjHZr')
%H%`9d?='[4StOPLf&V5kTlDp.daau#"?/Lj$G?YJ<)dS5WaTE]%>1bZ/7+))hC8oM.8Fq_Oj@c.H$aM$jUoT(650o-kL',VV<7&m
%S\.lH0@#/*IkhVAIQX_!foUW=U>pAq\W)N.@CRF<QffS/5D#c]E=6V>VUrSOJD;Q"WkZ=5Oqh57=;9bXm;:8VQu$\CDj-nF;+AFg
%C5V]X68>Kd;Cn\nP9[^JPXFW.I9XJTL;tW0;K?A_&OCX:"08h4J+mj:WjT!=9@rul,j[Q^j5Nc>nN&*DEiJbT(7R$!-2q"@I9eXh
%d>]LbO@LVT@=9NM@N2$%-pmKq'7hgNe/%0/U-'6+=>NYaX,A`Fc4p3FDZ,tqp*:AO;1BXAp/Gj)4,e>[[n-V("#E#Sfo*%F]l73"
%2?K+V=XN\6"/:@&7e\@hF7n/5LWtiLXo:EkmANbTBZ'rof(X"A^.,Btg2,6g^>\ED)P:BYPfMKem=_!!F.q8:&^$^]RY<"<P@uH2
%\"uuE/d.db*FABZR*<o\LIHl*@#Y_7?:3A5O&peG8$$S`"`uAWDNr[?Yn8rRbN^5)!:O5#.)(EQ+(G4F.%R6<2iY.o<t\G"gi\V7
%g:$=r1/YS)Z#$cZ_D59Fh`+;cHL\5bcQs(T+S>r,fi(E)M.J4>$^?r2/4R*d&4J7Xfk.^S)O_SM98UR<"3$EUi]i:K6-0d'A=]Sf
%;gb?FTB+?]q87!CiA1n=7I`=Q*qn=A.WWW(am+u[kW?A+\u8<g+FX6j"<,5moO(g;g0P)+?0S[?<\I<l>k>)DFP2>n:nH!gEa=I-
%jB,aWletV?3pc]!r\\PaBI`CK+mbiig1)%&ZBgVkPi@r7R("nHA86@!>"E[>lssneLlQGhC>QJ:$:^#fHfJ-kI^OS_QIqs-daje+
%$Ib@4`jF)lheh(^NU+%8$A?p!Z3X1uEG6fUZAkU673r!,iEpHG9&1((,W8<G$h>9^(F\d*n7L4;W]*5MFfq<"J+Y/:el;V,]l>m*
%WiT4dD3(\nB>g!2Dho9^;6op;2D(Ms3qH'0/"X:t:S/A]eGJj3SrM'_-ne7=h9r4TKm5d-InP@Ok[IJmZfd_0F1LT(qEgNmmma/O
%EjN`W$n`6,]QJD*10HGE"r=abA(<l(\4i7VQF9O;kb)a\8X7p.]^DcDV<hpplI;FC8]Wk2EQ1XD68jWr3764.8cmD[>3G@Gm#3?1
%i&]So+!U/=AWPFQUtLkded/];knL`f_f]A:&5%AZ[F_a_CmrIgIHR8&GBl@^i6p@inJ'#fI).RU_ThZ$CQ,..E[61=_h^?A8c9)O
%em7m@#;6iAj%olX%VliWc3%R>k.R3Ihj]<#=7aH.&`tGO]p;4[I"@9a/3sH=%lTpFRltL)oC-R,.I*W1Pa[+!_s3g&gQs<K>(=5n
%Y?h@>g0'F`IKOEPg-PVe^.Wp]FlBqef"Z=5?/T"$e1^(3brkUi"7%Q@=5#rO7]Qh58RtTd#GY*Q`GEb..FjjRJ9,Q00bN[K#A5fe
%[F'b%:/eAO:q',mph$Re1(hO:RETs1+Ji!Q=1uUZK>;;h'VB'_adC&#atubtg(Z%T-=aCqgLc(#Y4Pu,+D%V@[NH0m?X8N:N2"lO
%nf)5+L'``rU<NWN@Eb.q>@G)N)3\,4;5JE4-mYFk/Y#mJ9+iV?H)i)Z.?D3=JRfJ61R#:/cV-L?ei$%W0s$/s+G)\WnX!,a:<]0>
%S6jHM1dmi2(X%7#SbFE[OBO<era$hnkFFS^6P89!K]k.sWC*6X9aOH]N:Hu@<5PH=%mZ>3PVM=T$.*/u)B=!VM7i8qnUU4Ee!)N3
%BI5]C:o$4h4A\8'\U7df*8Y(4*s\+nLoj:C%HTl-`Sf;<H%fT+R;B6`/'g1e#_UT\0kBOu<06/h(=ThEGl]XB9;<_7ZnX*V,@P:R
%(uZ(K=.U!dUa.I[E!J'c;legN_!f'(31"l@n!%f*EW6JTr\!omGZa"T_>>E-/)g6!cjN`WeroWG.Joid5Zfop^JUbV\PePaV*)&4
%2<.A57q3CL::-Rr(fm:TqE%c\DJbN9Wn!Jo`+!CbF;^<FQ8L!VdWhggDN4J&ahA./!Gs8#_CW?@<3Q:,kY%]Y)q_n5Z;iUhAl)\=
%)V7!;W=kJiEQ',\mLRK%h/SRrY)2g'1aUVqig>g@:M*b=C?A.QUG=]<]`<N'b/[P+a(gGO7"7Iq['o0.3D*=-"RT;AeUaP5i@]?#
%#%?B,@iuhQ"rMgJJ^]UnXe[_<8S]X<r?e!Mc&9f2]%:We_VeYS+-uS9JA+F"?qUB`a$j+*TA_fF_%/M!FrZE-jlH;S[b^R'.u?`$
%4-V,lAIA"/'a3brR%Z.jlqW7,_n[MC@_n`NR^Ff")REga=,^p/?cYQ5hqbBIDR7t+E5eT#`_s>-_e_U*1Js\q=h&25iGp?6K`7Ip
%Mt58mVi7O]LFQ_R-C?^A/GkqZep,4$U_]prLWK2[@#O+P\c?3:KiBr#4d,?!Mk>qI#^a\j0/X^-c&O-6OiE)H,8@D>=U-6M;A3#T
%(:)B+?QhHZOD(e"%S.LhB5&iG@2h-nJ%`*TNBfAKF>7Ke]emTP:"]sNlY2$m2*Mtq02YHn;SCUc/s53f/RX&,NOKAa.cgLs;(<ui
%(ejRm#h::?bHKC*Ae]c@G;6E*!\uc;qi&IW,!cZ]*q%K5>%i`C<B&6sfVQGR,7X#DlUXJT32q%3^d/_\2VB5B!P^[LL8Qo3.U=@Z
%Mm+_6X)-4i5#?*8Y%C8pDT:7Bbs%oEb&j-dp];sE(A?@FSRBWjC?n:jLI:E%GOq+*TSOUe&SXouR2Q-(UiuBeWfJqjWU<\nDe<#8
%?)%uK.Zg!rWS.W*iVJ,X#Jl;YahGprY:;o"2`LA%-)WIu?iYUa-.YJ]P!<W'BP'Q1M\22pAV+*Idc$g"puEi'$nkI6P[hA.=6E"Q
%UO7"VVleieZM\RTJ:4&IHfJB/=+mY#R*H/@\:FI[<Y/RL;;u=,W5Pf+/Vib(gc3mt]1N,g\ai0DmfTTYXZ^;SM*Ao;m3sZI/P2tA
%'Qf\bl-Qn7hJ-sVDZ\8,RbJjNF"3HQW3oPNY:4N.-P8`-0%8F:Rq+!fE66A%r4'\oNOC9@76%Al/(^'8i&X2Dl)'5l`Q1pdhF'2i
%kgksc;73MuoSX<rR%noB-lQb%RKZ[RGo7&tXc8,qOT:2>.^rt0A8\r#lfBo74J7Y*bCoXoV/Ua`2T%#5G0ddD?S`tC?mDabRNW7C
%NUXHtVaL2)#`g3jgH*XXB')"rkL6>DX=8EWWkihbbO)4GmI*BOU=$of7-l:SmPe?&O];$'jAUe>m5i=J&^9'dXZ%@cN#52_-Hj2[
%C(JS'<]5i$Xo5?SCdolm9emfj@TDXif%*,dmJ3uL%;NJQTu*#LhPYA66tD^qR-%)_>cmsT@E=t.A:0JX>sDG:NBFB6b^1>4f.gg9
%>G[YA_Jj&e?iZmqZ,t+hRfb,3/.ThhV%S@(jq,Uh;MCY-Ts?qBnm\JL+km!u?OW41\Rmr`1gNroi'WK#X*\um-Ucri+)$,#IZplU
%`JLH3lgBcJjad"l1j'8s\ABU8R+HW`'bK.j^>1H1h0CV68GsL;(OmQXQ&-):c3W"!!ltCNj]R;!"2j?+Cd]9\VHQu0*#PQ55XQM.
%-=s7jc5>\2NGr;#hVA%t_!kVIAUA24(qtn<aUe]5`Dt>'?S(h"(uNI!$<CdZlVld-!4!5-K'!)F8\I$g'g83`HJ<gG2jA;#F_!Ls
%q.(`9J?fST_<(c0r)eWs"3W$=e!0)\Y\_1`9`"grk3oL7LP7o6c7]f?#17M3f7J+JX]rnSR%ZH+G9XJc5@VjOIg>+tB>UaU,N:V[
%ZfJ]9i@5?]2Kl86U9#ag8-2m3d6*NrdB=a6^Ql-l9=CbJXYK+C.eQ@FF6ObQ<`$']jLVXDCIkpMs29Z.)@+R>lSo?M:sBZV@aeGp
%8WB^)eP)6JV(o!MRd0'YSSu:I-"eQ#M3!3h_TGDb@c<UaP)2L2;R6q'WIVbo!b#lY<W/?-+DnPn%kPX'+Ikp76_[[K"%;/J&pS73
%5YnGMYU6*N2?9qAk4W@)!&6%%`tMJQ\*Z,.eJp@!%"Q^2VO)V<!?ThdFNhH'Oh$f_]35;toDLUr"('1I0i--[DB`Wf<-[oEE*YE1
%F^&0+UY970:Z7emS2*LoBg>[$K][e^O:*h;ZYU]R"@of'iY-24Le1UE!G.Y,dU==<)^t#Fe!d=P.%8dM.TC"HMI\2W=ZYnh@S_"0
%5'?IZ[q_MmZ<(>Vq_g"NOKaI]Cl))iE:NPr:A\pt*D'ImDjj,3$+X!@J;%6H_rP@76::)5:FYh$W`U5Va6r0c"nO]>j[t-6-8aDE
%C)CIMROO4]`F>=JS:i,-SqG6!mDbk4&u#RQ'Kn+/JA7di3)[3tGhJd1bmXgl%?-BpZPdqO>Omf!=Q@lXq\n8Ocu.lQGr@=ABAX96
%)XG<ipYYYdc%MBuLkMulPk(C^5n];ONmlNF>$q/u_;&I3,;QiR&?E>pWggmH+E/g,Q#qZ3F4nApY$+3/J>ie$2C3:tX_a'^.ufCj
%M#C"87C579C.IngI4GULr]G>r`eB62ib#II;L#A,=9WBDqR0l#iVtW8$I>PH:+K'4EG_V5G9%tGr[G@M]P/DS[;\kC6uCE(QVI5[
%k,^iX<>`WHBV8IG[+d"3ANH<ts(;>b]`D;jeJVaC/5?im>8cAT>hdmFVr+:qKF@SM+C"T6KN/Tp<P@9`,f/or6_.AWVC#YMH9\S"
%l*u-J:3-h`h"nNs]D5_.([L\G(k36?n$mrfS5.Fr=k:I=$+t#_&6054hXMU$U/(3k@tJD#2#Ks!Ac]+X!*4f8+_i7Sl@INH43@lI
%C:GtM5!U[H(X;M9YuMrIS)oC0WclrEo*:;j=Qu799[V5(7_'XeIG0@7"3UHi_;i>:.Z)[8!;!gLQ,RkT51",CDbW5HLU4@)=-%O@
%Z]*Z&YlUt^WX]uqWk21+%I&)'0Ntt=)q.u2bM+SY82]R=S^0h!Mqieh&CrGZjt[kQT&"$&H=c"q;WV#0s#Ai19EV[>:'+TP"ELI:
%lND6!b>p/(Js.)'c_h='lDUGPe.NA5.Al80J\L&MP1NcUfGmejMB3,j.eP<4d^.65'rs(cEpDJ9'-WI,i2\,sL([a`+5_cp!]*4$
%_nM)HIi;>QrOB-HIapCj,iZbS:89RG+?_(JF@5G4RQlA:KKp5icAloqm5;F_DIaao%,0`[/=%\!o4ic1__(H^T#FMOCn8\C&[q(_
%bKZLTE`1!04F0;8-^$r7E(`>$?Pa='TeqCr6S)_$^JI)b*FC&%4$5(`l*u.u;MDM7gh&UdTeEdondW`#A_*tbe[sH(`_T,70IL'"
%H4QmM^5]O9&_([Nd\$rA">dd<\]TdtktQuJ1*+28Rb!!GRWUK2*AjWs+"7I8:"8s@gaJRd/:H%GhWUQN:4]F_4c4aZU[iIR[CNN>
%-kr)o[Pk<23SRf(s+KaDVA=$KPf$QB=9rh$eVAjL:<qpG:#D]arB]u9eZP)^K'itG6cDcVkk-ShQ))Xji%CFuok)T;qA`Jr>Ao?/
%FGck:H7V$eebVko"37cW!A!Mk)YjKWOf\T&,G)P#@%#DL7Ok-EAF'2+?;$_+^.n7>lpu2-/#W-Zb+9*mQ`*/OQb2"Nf37!OYc9p[
%,MD,R4(e_q=rlE@Jp,rarsH)iSYLgO>^rJLXWmEbDJk5.2#6)_r/duCW>Ho]?+4Jg3Fs45h.E+.ibFK*Qgrn`042uUktXof$-T;.
%U(?#,(Q0BC8'N62oegP98\b(0UkcZ)J>$Uh_Z!l7H"1dCI"QJcem+V^qsh21oBo3VH2TI!F,lg/(,+p@X>sg9,@/U/,`.9);EBsV
%,&AOjcP?ga.]@BR8qN!r;)aXD;Bi!!f@MN!.L!i>3a1>lfZ2l@OoXDum'IV-oI:YsG`k$#"m`@0fgH'+Bd)K!?(&7KieM7J4g+8<
%/<-"S2:%_/.:#>Zi]/75^S,uJn%e:\FFc]!#-B^_KqaQ1h)u3i)n+0n2&r0+.iT-&B`n+4]TLi9)nFC>'pR"j]jm``ltu+GaYX<N
%#C,^U9'pJ86LR'q\i;q4]@mFXkCMMDep>'eia!s#S.WDG&0)<%_e\=BQoI?Y-S_AKB,KM><PtPhD&f`48_2u'np2(h\f=8lZO"O]
%**Cd7=^;Lk9Cl.hc>[*<Rrpa\Hr$K[&9Qf[raNQ:hh>FVpZ,Z#X+>SfDY]]&"lQ=L/^_.io;hZbHkCh_;#0E<SV[G7aop;`\hpOA
%@^5L2]Qo/F%76k0cp:Y.M@s4%1-hWHe\8&LPnRVM6X#U&4-]Q.XM';6SEBoJ<r8j7,*h)KjYR_q'fB[`-p&X$Z63k(J>mkfC6]Xj
%3[Z8NVXfsW;I/Vcn[QS3c3P#r2,cAN\h9*=OuQ0Q<L\"q\rD#ZlDs2dQ@rN[cmhq'6Q&\qZCsDr$R>=?P8aV5MTEDl'GC4Xl/qLu
%9Uq.hP&tE:Q_Jta-qX5_>q^i\J(X@2,&:`c8*cKu4%LFX:Z=sOK2k5YjGuL.mch60M>DmJWP%>=aVOPjI7!rDM:WY\pPUXn[78R]
%+jV5pQg3t<Y%uf,f?(/%Bb$N7"P@ZEb*8^*(n4Lc-6.j7Wh72_ZZk\/n!To<E4^aHK]ih"_KK.[//DZ`U"VeS(<PlAbHl;`97&,r
%6V#`G9WCR6@\8m_/3qb"-K!8dV]h!g,llY\'%L,(R2@*[AKmCdO)$kMUGHJ0b]muZg"<$)"o(XE_+D`oPEQ6$T_lnQW1sVg#bMo)
%WE,u@rCi(M7(cW#*lH3[R'P4ULKqo[mB,e=2,K5[A<h)eYRI##n"DSV!*oVRY0DOAP1;"#-7?(SU?k\-S;L%D=_J1sThh_92K[tP
%<%4o^j-D>1WaEKPnG_lGY"j<FhANojbR"kgZp;\"3q,"Zh>uJU@Z,u;"24/p-kc:bpe&/*kWA:7m#g4M#4NNC3kjlX*PlrF7]UWS
%6hh-Y6rQ6YGb&HE:%\MVSP;mY4])'qH7u11Q1f2A3!";a/2Q;s+DVZWj$</rQk&G%L@Q@cDfs`@^;D!jNs!Y<V5VFckBC"/UW7pu
%4Yuaj!.BW[V&j8;lYs!Z)q0"E2X5:4qMVaF+4dW9P0W[<OBn`4Y!Vj!;7&,:*6IcXD@*8@[VXfdF8MP>q&W?c5KVXo/&n>>[nTbl
%Fc.M4qf-Q"47X"-'ii&k/>Z2cm.Q_:^SA;n0djopE;U'TN"7D7&TfC8)qtLhW'2p9(%;"1g(+9`\=!-$CfW&c-0i[JPpq/gf.$E@
%%l2*5[bj"oF@Js;fVs?3!XFN2;fpn49)e<FB///ZpKjq<Ke6>Y+)@sq/'Mj@)ek7dl;!JnC>T0#Weh9Mm&O7:FBUY`<G^aa]m!/c
%BjG?FFE4e?Ko4`dB_SE)4WUIS;/-el\`Hk@RjFKooB@/.fa2P?%9!*6@[2(CXRi2lnEYbqqO)j<Ho1$_lRPo>NlZ>Yj!tln#E<bk
%d>ZWn;*]&!r]k$mbtTnKSSA4?56D]Z6EFu)ZXrrie0nHiA0>hSWc5/Sj4^Y/W2gg6@i,HA@Xm*1RkuD\Na?^j>nV4GDH*704dA4s
%*CVd(7r=Ei3HKXSj1.jFlAE`66u-u5a*)4CY(07Q$TeVhc+Gt,4a(VVmA/Z`,6!j'#:BRu??:S7!elp($r?EC)M*c5fFk7f98=.m
%bbCR6\i`fnKA_D=eiQCJ;Fc`oc$8H<Cr+)_SD738onG,P#>12ZdK6@`7e<)-iu4PMh3TNF>0F\:A,&*sS'!rBE7]7o$l<R;hP&s;
%(^G/Znge5jfX3IR7QH);M*qenJ/:L>K@0t-9L4P[gu)`[d0Ku%742Jr"2#0g1r:-CGK#8tXk_jJMclnN`T';"K'tkF^qgj:#C]ZJ
%,sWLOk.:\X('fBY,$bAqkA1.)Ns^sRJCujba905%Wc"kMDE!+-,7#D&!:r<#U)4,cV7<L=^Rl&g*B['nJ?VH?2!lq3qKrjha@R6h
%chTme?@V_6.a<AQD:'(X^o7*4Fe#l.M%`9f<+]61`sKaGO>mo.<On<T6(Dn_)a.NWC6!>)=?^Zc(Hp0L.B&=q,KMaRGs,je!nbZg
%Y3&87%6*T<[78F&We,U-i\G7U&W8sP"oVkuF#IA=SegH0f"B"3';h9cLJFdP7%k^SG62c%a[i$43g*b^-oWjYN#4]Y>js&5g,>[F
%-dQ]<CQZRA:)il!HVhL>\AoJZFHT4LCb6l.\KK$BO%gjt^qp!$$;N=7J3A1YB]VbmRY<Um_OK5GBEUJ:_Vm-3V\/\l1T\[UYI""b
%a#-%$^+W>p<6Ml7c7:R=]8a8NjY.4#Db8(N=^8T7k8Y/6[4?$r<bW(R(:rafZ[aJA)AuPVis9e;-<8l$R1Q03iY?tq\_`!VecgR"
%S8F3HQ##SOJjChLX\[N-'toD3UUn#oAji$gVGpkl_GQ7u]rnJkT-;J^nlpWYa?7kOlIGfe,gNtr%X^<S$jeLAcO=S$eYb(OHD*C+
%^km><j&.u:8Kb7daHNm"<`siKl'']1$lLKA;.G0C8$O^7j&,,F\.:RJB3^HCcjYP3?'mtHP'ght!LpBPS5&Wg;(8'Yp;1$0+PY%[
%="\C>25OI*@^AR_R\fl?*ic\eTmfYhEHIX0%pY=u@_L*"GJogr5\fgio0lUKl5J<H+21p6Uu;LTV.D#Mr[k@WQu,_FMQU*`q%2JG
%_&le-O-KETd7,pD*R\]rp>AJ1XY:ZW\'GUPU>/PWIA+_Og.f]DQZ]>K`AC2D&ue%:2u7f_p/LpPLRgl1j$S1cj##pXdu[H(P'kQ_
%H[CG/2!;n:T$U0J(YO%FS5SXL+d=tUA-qiR8skH*aTe_4Zu&\1K!bnBZ6UB>aUm1#$Fs[hJDf/"Lo"W(JF#"bn]Y)5p"1\$6B<Mj
%!/QBOjsa(JJ1%/gj_4hDYP@`8s2P+maY^[nI"7"F4ag7XM'Aa%b,no3N9]Lu*W+=544?5:l#Jma-bk>Rj2e5e>.]j=EUZ3IDkEso
%>?XP$c-FJ6)@ds-gg9nTW<.;g:VB9O:oZY^03dI@,UqHfk%:*e.+CFQW!Qf&kgl>)b%>7Z$"3/:7]PTOC$ecB9aN_7ZRSPrltqeX
%8+"D]g&#C+8+!"#C!McT4J/VcJEB@^JT`PEHc<_,%QdP:OeaSlOGob74JrhFNsTu>A<<a<AqYAT!)i.s^J,qL5;`Z<rRFEjk%R]l
%UK2];oN.eg&rnss_"hZ"E)>Pj&YO2YL3POh"FgE?+k9+%JQmh?(jW'=n@6K9Dn[l%\$.cR>FY"HkdXS2p#g8.$ab04/DRN?)p*,k
%8Gf8db4AOt/hY:RMf$\8iqL"?jX+tPXX^3k\2PTVJT0W\X!?ODM4skn!C@ucT-"@^>':aG\64D))['L8A.2(Si.0GjO)IlM%.PdG
%YsZDCG9g6/K?CbjStqkA%r"qLjBFGOWpFO5[MZ*Rc>,G:Mg/B\f*lZ/[;>(OGY7J?W+M4'->D(S4RW%M7>.m)PF?'LQ*=Q5f=/9%
%k1X#sK!O'_Tr<NGB4'6UP!KXDEqY/f,1]"8*!7o+9tZ`0TsIp="S>6\^Y-^5LYt3?`S<hSX(qjP;)8ocUBPuf?J"uEIJ+te(.nkA
%=OQ=%4&.L.%U\)cf*KCQW!f,m[K.kQLqega;9/Lo(;!o?'uia35E;:+MT5RNf1V[8Q`:9_F:146G87Og-b5Bc7LJJ-)"FO8X$&DA
%SCr]Hq'jS<<TRmAJ`T"qN*!VE)b&*(Su\mV,M;//5/Ogaf>1I3SVE>5Lbra&F[abWPQHg+bZ.X0UYHMZ@=D>=$+h1FCLLdcRf=O8
%lr\5#*bepT&[Ph+5/)fY]AoL\WRi"kp4YJpBS:R;pN8AM@c(()be9Es[`.LC93G=9(X56Ce&f+d;a/1n<$Q@n+!GcJ-uJfkfF0@e
%?lA)>K?[5!/(2'=m[tSs,-M[Qk;>GOMg^HIKf\L9]ur(+$'uTKG^eFnh.g]\iMqS"Qd3O?dd<[>iNA*=UsdktREW>LNO_M93\mI"
%h8<A2r[ofJ.TG$ENV3MtGemH:a0[HiJ'52T\J?COd9VE3LqlQm@d)G9'-rmEeu5)X0/3lNc*s,<-Q?*1#7oj;^gp@/ZG<Zs<`-cu
%VR(h#H!T/2\<WUJTXKlu9/a6q7Z]3@l,gskHc30-Q]l$Wc>$6@7HQ,:DRQQ\oGO.'0X!1_?_r(Z"BYO)h5+N?`X)&,NA<[MUl3L]
%1tu$'P\)0(C<I#Y9f@Uk[__u5\ABp$e7d*GmDV!#iu4O"gm9-FY8@,=jD2[o?:)r`hf[OfAl]SR8i&kZ52ebcgbZls3ua6:]#N>F
%B.fqJ$+L_0@8_2kS2rA2@Y5O#8VWh<(l""Y_$H3il]mpG,ID('`]I.QQoskI#%3t`p`ZLW<]q22)58L*MZt<i8Ris?aAG?]rVEhZ
%EER\81q01bGg=,CQ=s%ZmYUjA1JUh@$RX"L&U&V*h)WJ[[>e?fV$/Nb=qD;W-.cNNJG7"$Hqq<69+c6];XI'BBNl0>N98'8(<AYf
%Cs<8"A^mUFm&R8XbU@Vj2-7n5-q35lQkFG)?@P_(o1TY#->Qu>"^MX.<467:a6PGIg%8=IrH`!J\bp\Wij2G)kp>Q=Og+E,Wp!?[
%OQ/:\Mq3s$3T7MC5<Pk92se,GBB<-V<BjlKMMOt!ot%$+#\kM)e.Jph`ZV5D'J.fh.ZW!AIQ/4Hk(K'prJZr7>#Qj]LIkIE2([P2
%gtpl;efmOO#fL[WVDWD6RFi;k6*rP*?N70?Xm\B)FZ.H!;MZOf#5+=ucDS(@J;[6_*Y[dS5Ai0.p+&Ff5TIKcUi\<H,;B@WA%d+*
%Ue@7`[=Vq6;P]</&=Fu3VjpAm;&ta9::&fk!XnBi5NT`_+cXCo:;'57Q_[s0okX&XYZ&%:fjlMY@DgK\;uGg$4WUUW_2ZZIgt&?D
%EDX/Qp%^nPF`TiKd;li2[3tqE;^LAj+-C.(WmYjsL"KOjg]sRK#W*g3Nn55!_KippHL5E98l0ja>B<E&boh:(HNYOg6ctNhEL%pP
%)b@bTCM6M54?Nqgl'1m@#Bs:tniW%X9c`@T5T@+dVklDSA%)*T?ZW@_A;-aWMTts:NTVRKf_SP[YC0B1@_^Ut>e=U3TX5%4'$2"o
%Cj5(Z]Ml&+7r:ZmI219P[+1X84i*,p63oJ)#N`AX(V,4"^J<E`Qq_oOjG>)X!8l'r5>bYtL<U07#5*JP^QP(6X#H$hHeM^HN&gj@
%[\lLe-)cqh``pS%!VUWTDOTI5h0"p%\LOt)gtX\bf;nbINODNeIjQ\7bR:#d]g<_cR-6'rKb/>`/!_/$<Pcp7GB7jQ_E3sh`[r\S
%S0?BsWROH>4Tg[Xm5ZBb,;?4M$D[):,X'YG1UE7Z`o9h%.s_PTk_iVcDU`KbE;!9$Yh=J3gGu-9ZUM(K0A?Q3/lSlH]>/1fLbWp1
%%?(9^+tI?p+FuP?7UZ7[5Wn>7P-\cT+7`VV9#,0E1,=`s.F,j;D\g<`*Iei2(5sBlK?4cnP^j@m4O=L0c8L9(ULm&C>9cP[/tsD:
%[1OJ3piPT2"JI<SE\%*?gi?0gjQGE<s*itHSR:#18X[;<TZ6\,Q]kB'*u/F/WfpB[\k=u1jQ?,7";^)mqCh_*L)QSpl4@7.K#!D6
%11rf7d-F\!:ZC15;UIl'_m543<6>GGOs.cU>/.Sa-Q:tcEV6Fp[<E!8lXgHm=F0:IltSdj^R:rU,X[^2gZPtNpf'dN.HE)G7^@A)
%YF6YC/B"QshP;h1M,sBd;\Z;#KOW6VMIIMP.at4ca:UBNfp^n,aq:n0P7P3X]eKbEY=VNGiPIgA[41*Y_G;d6='e45G*k>[82P=5
%L7KASDbWs]<'[DpM.DDKI!i3MB8<S:95pkF\b1!F"?]2Ub4FGJrdID5)K$F[';EkX(+p(^%nSXCq132VRgiOK3)?8H6IplIT,=dj
%SB%.kANHM&.j?M,G;,dtDTs3F6ZTC_ImBE"KfT)(Z'!6XpA3E,IU(h<a$Y_!nI"<MgH0r>.$bu5#WtA2m""'ZK])s@#lniKX4RaV
%D$4?2DG]$ek,D4DV74GKnDq:kp'q(4Nc"6D'7TK8f)-$Q8q3?+*U%oViR9aHnfe5E0t\W\4#O[*i*-!H@bqFgib+/`J;T:mdH*$!
%-U94!X4Un$#=tpec4I\nUj-QMC;#YEU+JGW9!&hY_(?A'(,_.WHkAdf[21>Q=HP2o:pl'#/`QpgU,mB0Z80up$B_]nmY9u?R<bp'
%_r''f]2o;8?mG'Yc\jk`WPl:np<@eu.TnK3S`0^QR-a)h9HbJW5PJkMioj':A,J]DQG+jEgM/SMl]/.ND%>-hKo;tT]1)nLOd*DJ
%:ND.iLfJU2-K<$0d.bu\es"YbU0gWa??>'K4<uaHioP6&T$N=A3c&/T"'K]ZNGsI8`NqM2muZ*kH$^6*hgN=R56H)-+TLcS(&GYo
%OWh1\D?Z/l)XWmCUg6D#Aq<PT:20sor_kb""7:h8nYn:V)#4e$@;k,K9eD:2+40@SeB\_hlLO1EN&S)5eo.b6SQGNS:,B[l9P-]s
%G7iOB^F9lL_G>]iJO_G8[$:_Pp7#em=^Z/Ip-5YKSEF0JpTX?j<Um%28$P.'3]3pY[,_p];]<n-!`c(B_%4M6)F<\&`Z2lX/Q!3J
%Z[fnl6OF+n67R[9On9F%kfDd\^$*Qa)aX<?fVHng,ER*#%%D@q9tQh.K4`bTE2%;=Y0%nl,coqNppe>A"8F0%OR!^&9==f'^Ej1*
%j#6rtM\']oDVJL3Br?0Q1;86,euC)Rc!c5N1]+3\JM6f(H)2spE:JEcAP`P`-G%pJad?[,eAYko_='"Oa?#6e`P!%q;C<GQ><!P^
%AEa3NLt5+?7.UWrZO+SZd4ho7KoHZqa+CE)VIe.eaT#4D'fN-R5-3qScZU"Ca8tC5q,"29D=k%K3!YWcKiOKY/jd\0[h,lG^)"/s
%HInOUe?m^WHjs4A_&Uq'^0,@WX^p<Z]K$k3WDB=.(<T%L`b%bF<Hod73im7p6[0O"aIdlkRi+m/H=JJ%RH8%o+4g,WC[FdA+(oN$
%dDI9OHq*<Ykc:nR/[\di/GF:Zbh$CnLF3.T<aTdN3=u[RY))%-0`l:=anD*TPm5nXI()EUae,;t[>1N)WqL.>?TB!^dE[M%fq&3T
%f@hTEDJM,u4PD%S,SlVrXi&ns+1>]ri;'C$<oMFe%jhA5[-*6JI94=49C40ceXSGiA_Nn[WB!2GnU*BPMqP%.i,T\%FNbf,JfLrT
%#jB'K<97@s1@%,mMPSX"DP6E,+W!^$F/r,]SjJgdr;4tcJp5=5rc(`<lY08q:sUVaTK`r6:`kL$R.iNMVo4.=mU"D:\P_6SpDet7
%D9Z,[+4g/X^%E\mO/7P7MjM+7Sr(YVCAIc8D,^^8Hg>u\HUR.;Z0,E-pN:"&aVZboTJ%P"N;a6%478#_o]MrmHKGqrS$cf`SB5=!
%\<G;WB91J0+,3o,"WmLQC^?<(dMs"\:#f/@0@:K)B"8C)^o9=$&3)5/FUu`dIZc$Qfk'>LPqgj+Q*m0[oV1S6/F??b[sn#".P0MS
%3\?oW/W,PtMX&_,-:>R=#C;f1Xf\ghhj,FJVhVE)6C"eb&&Uou7b20%nOed+json1=pq_MhTS2`fC."K._'Gp@!.:T&SM;^nsCIg
%#S"Sl]ptZ\!_)#r"BGO.[o^.*XR>>"m7XZ)f9Ph@Hb>l'057-Vr0"d:<D:4@]3a1PK)dp21`2_]pj6N[G]B5lfAHFkg:*c!YUZln
%:F8uhM@:_6hi(;Wk#S>P1Zm_FgQY&NGYG?0iWnniC-P8Q?p<9m8Yc67khpt-#GXonQFuB7o5&9/3bK*U71<&\1""c(h2:sB+I<5Y
%?HR@$8/1pFg9+.9qRXZSG[9uf*Q7?#Xp4r8):JYikZj0g:RP>q&`o?;J1WCDTP1;%cE/%+YRA+f!250+Ga_2nSCpAFZ:A?G0KU80
%U9nIT<4Y.12^sXBHqNp9jGejh-o7Cg<[8?hYLD<a-W)BBU/VZ(Qu>O4A=BjuFcF`(Fn87f+%PP(Eg9[D-O>3W;T9d`i&`q)iT#mT
%48YQKE^9C0)+/r.&AF@.EBkNU-98%K%LCs'm)KYBL8>Nf+a&<;^4.'^5d<^bmDZ>=I)fZB^GucDhoU@MmJ7$mI/PnE(Q85!b'/`+
%KWHtqV;l"3[127[1^g#K5dN5^>K$JjZag*K`NL9-GNtCrY63-La4U/J&?TcQ`Rm)EPu8Df%ntkn5Les/9]$G]@dXJun'F-RpFfSE
%HrRjOIL'?%n5@UcF`QfT8CdRuq/L_MI/]X>"qnXhL8BN6@M':i-r%mAFfI-ml4sf!M4GQB"H=kMD3ct0UK_Ms2:N".pD$Y&ZW_X6
%F/6u4,8k3OEZ\KFLm\=/5Z4$p1IKMZ#H.91bn\g7KJ;j42=FBuXY@1;(*jYJ&:\$;)8aqChJti`rl@2pP,<I9I+;'qY&Z3<6OX<D
%%4?9UCd^au')7Qj]*bPl+s_T=rcO.Pc$ipp0o1o&NIhJ4Ff;^m$KbQ:8<6f=26=:^PgebA>8c*_7%5-+.XF=\m-.o+#tf7d/!M[Q
%Wc@RZcJNT"?3a*c1p7^=NfI:$iCa2<\(pD<0roFi>1_r:9l#]&WEdSF<VEjI%h!M5"eUj,63Xd0:a4#R<XGI&aHp'io-l*U.8.dN
%b'q:=X_Fe3E4(bTUf.JaNa-e1E3>Yf+]V-)qhTUfqTm`a0fA,QcU?5'd:gcBnLV'aUR4&+Y43L<C<cllarsjf+I,<J'JPbc;p[i`
%@n:Mk>7E\*Bp&TLW38"/(Z7o\X&,tF#Xu.^P:&)4K]9XAVQ:@lUK#?T6OU@8Wb6g].6eR[:'4(lb#T"WgadS+6f`SN!np#1+\G!<
%iGjiQa7)`@S*M''olMgUmH#hqHtm_,-T1*e$T8+#`#oiOBB?\<nCR\t$^m0fa=iWZm4%9..0D:R\40OH`:qF"FQUfm0mV4(#lKjE
%i".l3[jN:$3=kR2ZV)Ii;PRs5W]`AaeGCEN3`0ibp!a%)q^gIFGTO]O:4"cMd@BHWa,/:aV)X6s(\RC*94>HQg\YuM-R?$YeCV^r
%6uFat>ggU&8W"*G>nargEZWqP$u!T1Ujg8e:gf8N9f*fs[7q<(C*jaTnYSc`)*P*S#1d>8-A1>ed:HIVCm)&D3`@J^gJ/;(>N^lY
%\_L_E9gnXY%^1j"6B4Vl4]@98lq&FL?K'@Ar";E\1%R!iMeQ&#(aPp?>E+nj$grHe/n'!]6D;!SB9cgaQ-joOE&P<;bP.3)PWN4B
%;aQTM5pU>L+uhO0*U/Z3PHR-/ak._L3eq&eful.E?im.&7`(4&FqnS8CY\`kZgd@si>("I]6ZirXnjMeMTd#)\^a8p3&S<.@cY<`
%I9t?uQH44nRX4TYUUrtN/nIXj9;a\Q1O?=.PURnQBt]tV!/X/K+tte2D_TiKf`cAOJb'b(rNOCe>J=J>H(W/>SD+<V"lF[7?Dh+U
%6\d3LL=F:gR1Y\1cGjdn)\KOO/h5,[kjs\'*H'.U_,sI?ho=47raLfT/WO:[`i[CrNg+udrWL@#k?]8fN$9c4dd$Z]]^*O09Mh8;
%!2(pH$9JluqCSJVV"SJmWJD:\!),W2_rVQ^&H7@]p4HEY_IZPjjXXWoL"qmG-gl(1*"\B5H]k?(=a$(h;&V_9QT<N7TgA(fE,*\b
%H>5)@9BQ/^`Y3j%mo!XH!2Zs\f";03BagFsT-ffAY*l9t:Qpd#TFRii]2lHe9+>Dc/(FVr3@#T(TcaG.6]1eC6E%K+JNYl?C;o$]
%E*(K>]WIXqa(s3NK0lgD[$`kB?D`lhc$3`4k3K6KLE/shl[/Kbq@_l0RE)GK$[c0lA;e/f<5%t"jC%q%A7oWS%H99WgD32<L+4B)
%c'+@?<6"Ba$tPH"fRTfPSuZdCFTsWFGdkN=I(1E!CcBlae^oXX+A<!.bKmm?'2R`'C+i;j.Q&._&7I.Tckik4pM(`<L?UoX(sO!W
%lfK@ZXZ8i[Ak)Es^@P*X!8NqM&F:^\ijIH[aPMY>`-UOF*Taqq6mo@$Ng((W]NMWqEd(4];Iio:784X3U2YZ^.B26]'$]oIP%&G?
%<ed,C)1Yjic45!<).NQ2ipT-l'MZEX(:--_:La8qFmfYToELL%\utMdd!Z5Sj#W^cf$h@SgKYKD^Hn3doWh-WbM\/TA+:pFmGG*)
%JGWZ*"[2&Fr>DZ7Ggn]F=ciA92=OaG+8Nu)8M!39`NGt<+Y$G726SKcK,;K'?G<b!DBN"Xi'VQ@/*l21)Q_$_`rIZ&1fuce_KQ9'
%,YO@N+HK"=9G;l]g&O!#Vn#f!QUWp*`C(VZe\h7/d4$&SV6%=5'nYtj\fe)U4K/i67Z4.(aXola:3&DZ[YGNLed-23LnOP5bVk(:
%>gSs2DOD\(ljd_[90gpG[@BO[gcT5R&]E[li%e^gj:q@kkhJIg9d@;TH&"hN(]H8n410ajH+dmEa#-%$^Fqm1XC9n)^)2`5!mCp)
%5?edVXpqFhW*Eujp=TKHGs6(5V>c@52Z0-`aYEL$H^$#,.1%2L$a5&n%XpZnWd*BpJ@&(S<_-uV6&PPC?BY`p;T[heqjWbaJJg^b
%FX.oWRW8/Ph=md@7l%=\qsS>HN.A-B8TNSE-dN><`g]=.d@t&0:$RWn`B/91L5<-J?kVg;%.UjK'8@Ys=]KJ99ZjOsl9MnJ0m)]X
%=j8gl9+V]BGk_<u<()mT=)L7QZ]KuhFHlJTILK>p1l,2PM;jrI,LaQ*;u=1?>MYaI4haFD&s?oddj([ZR.Iq0e'ssRQKB/[\+VZ-
%S0-AXF:>ne4`]p8[lH(Zk'X9OHG6dhY2Vii3$WS`'ZMkO?Ee0lAhL!%oDCANS2h3+#-g*,@T.%eZTJ^ADM\^dl5mC^N.=<I2jj:d
%;EZfqdqDj)1s;/MBun-qZdLN`Ch-4RT#I<U7^0=$R\PSZ4[<54g*8f/VgEbKfaeL\YW)r4D6Ss6'4qcQ\^W!<p\h>1F')Qt>9oi)
%(GN(<0rdgAig6Xo$5c2K/dHDQ=m&u=<M4Z=!OR[AK!#q+A@Z-PP7/'d<"1S_1%DNocmB3+mI%b7P55q!$4Y?)M'36S5tX`D,b#k'
%\/IW.R'>[WUCDb%O60Mcgb=)klh[1_h3[%kXrkH]Hr<_S0UoTf5Pt3qo%X:f=]K$bk5%*)rfbCc4%,d1;<`:]7B&ZFKBLT.iVb<B
%eN3]++,S.6/np6*9`U>kK6:R?0&P#d)hckQ7Z_p`0Je;s;GMEoQ?>>8"BB;t2coR+S0I`+ZQABm!Y3b]L*RKEW.iG.^3pBdhP>(T
%ooPCREDM2@+HH_WLn`AY3_pS.*Jr9#`<1N/9&5_GIB(LHj:RT"jGS[Ir-bS)>groGg'P8)=RkgM_o\:n^+GQ+^2rX;%kS<*9;P$^
%P-i'".psJd8JcaiU,3ocrE9@IeV(*%]>;[J154jnEXjqlF*k'Yq&RL$g?T9k`#k?BCcIcJTM2e6CZuJPR[4r.D`CJCKo=4'=9+rk
%8t,Yq1af=S^l\^Z.?gDt(uq?U$7N$p%]K[M8sjt,?+idR?gW[W9.*V-_Hi>6%abl*f;O:@mZ3KobM";kes4I4OL%O*@9B8t)#d\.
%+C$;Jk<a/QY82SCW^Y]XO`+:5DXC<B@a6uUD_IqJk5;I''9\c_C''RJ3fGL:]+LDO<;Tc_HMV3;)CQ1YdjR\Wi5ME&\=S9jZSr:V
%668VZb`i?H";O*j].7ZM2fi%34,$ak7YjUpE8ah4eW>qcZPi?.d0P-[H@slZ<>UrP0Q&[?I?3lCNDG?!92Mc`U"6/KkSdOFeapa9
%`nHSp*(!d^VW:O(qVI6InS7Q9rWmL0#r=iUbM%FaX@hP*@+%Bc=FY+01n8U6<U&'iX0g4'i/e`a`,3*OY!FFqEo?!@NEdnUCSaE+
%@Z.?lH'+#d;.<$?$nc6g1#(nmDPY:f6o3rZ8-l>eV1LkY>_A,([[E"#k5)<`'2giKF8=+O,DOTC#3U).n92@()CJXjK*;<7/'1.%
%9pm7TAJ',lN=j<3-+t9(W7$K.ctIRDBO8O"U_5_301q[Fq81C.!K98mpWd.K_#GB:58%"GEUS\tW%L*A@na,Kkm]m0o>B:R%a^R#
%;luDDXnIZ"o4Spa`q/H<4W'/.p.hj0,?C;IgjYtO@9oaZOdZW=,.JdHO).M_2=*A1klO@#C<1e#8>._^F10e1@:S@.eQQF#YiW.&
%;tDCrNMKdXkpAa,0Rl>)Jnc;Pq^MrY[8tfZqMC$5X#[GPBdNluY,F4&d;72F=*+08bk>I^k?'MajOEfp8_),-n/54P5nI_:An(;-
%&;^c#"gqS\Fgu"',<MN])[hO-eH\@B;%@0B*<M64b.?Z1p>MB#W2_(=N77i@C>,/;S1bj$Bklp=0l;G"o3]o;ipZum\!.d&[O!Cf
%XmbMII0oVs\l@L3\qHL;7@^o9_o]D=rb<2BP8L@Zp-[QRLf@a)@W6OE!AV4.6tFIk,]W_5eI^GbM)hMtW54ong0c8J9G'%K91pCD
%8fC)E@5NZn@&#u?m)JEH1.(Vl8YfaFU0iSD)'pe:ZedlH8tKjJibo6pM$iR(e0oo+ja1g.o6O1$KFf>]EY;>\?2\MrY;H`2ceQQ<
%"OX'/K6?4W%(F)%>qst;:8Q<eAU56q.kcmteQ4!fFa]O,\i^L/=I$p'3!/W02EpO[gn)'qgDl[ZMK(?%#l]h[Y<7&hJ,kBpi2WF^
%*nU1/N4oFOC:85bo7GAj#]onR/_@a!Q.o6!+fr*fr=:?R2;.5R8Mh+_'8JIDleR'`!EF:AMdj?UKn!kh>"pMP):OC?ecTn2)_2fK
%O)O!lnFaE:0s<Cn.<YLoSn>W".<="-@X!gqG.$nWo.So!;_(*W5q11:L.aFDqAADjjB0h"M0.`lr:)KO=6D#(!I`T!T3C3FcdCmB
%o.eO5?-d+3QIhcieSr]5PNmUo&3h7C\`h<^Gc_XT>qN=:Kmif])X$[Y+a2&bZ0+L?)chPGXg3AmnHNp$Fab!XMC;;RfNY@uIlB#Q
%76g3:#3_\f%gGceoZ&>b8U7j:om\dJ(3(s_<-n2TCm`Ht?7m5(BQA<M%lF@EL[J>H,q=TUo!Mt'/geTn1rdH0c:QUPf0830\g+M*
%.VRcf8^H)8LRgSs#VpU"D7CQ1e`1Q8Jp*\XC\q'AKo%UE,9fG=E@7]<*E.iEs2/_G=%,G<K[+7\QQ&<#UT<,+\[P2u&t(l9h\H+[
%lfpNuW]cq<RQ%Ko[D,B3ME'J13hHo?QQSBO&T>!_ZSe(:m.7:Jr^[/fgaH(8+F$5HC]57QJWm0e+QWm#PtFiqp29rW3XedhJ1'b,
%$VgqWf-P=PklC3@mO7s.SCXV>gZu`H3sK/h7]tD-?,q&VlN,kMheK;)/,K[cPA8r^1#2rDLc6912KY(:0GJBbngteL#B7_"2St%"
%8JNHfRLS#.Q&:4XJF2DsTQeA0mDQb<YDNcnT&G,s*3c!0<Z0kHm3D[cD<\qFT9%\BWH\ZXpZqMD]7J^(R)r:-@FX?2fs`t<>?AK:
%p$ED_\_*kG,UsC@gue/OkZY?K@a<o.Rs9qBK[D"_8@1&6/nV^?(&7:L*Y'@0%TlQ7cXPs3DT\Z8p)+CoC!K[;Iu&]8E*62WlHIhN
%>@6X5N4B/A*g:`k=d6_[m0f_!9\Gi?g;Bjg`oLQfkGT!%5C)<5(e&kG(lJ!QF[n\&EOZ5jeZ@gg#dhToPPAQu]bMQtAg;O?7l5Sp
%eJb,Xg6?>Mr^e>jEZsO5ptCZlljMDdlk=I73Wn/-"'HGAqD88>L72OR.#]c]+X93`a<0I[5r5=M7X/1ue$#UO_,-Zf>+.'A;R'Kd
%^#.aO]oJ4_1ifoQVV]r8o4ge`n+p\fK,<4ETHI`Q:H1u42kVqo8gTsU^Qbt]Kr[fZ"N[hPC@P[Zo#jmGWn??&9jB!P0!KCR:_2-K
%C2P7"M'Pc1IW0uoiS1GaNmf]H6?"E7:-OJjj=Jh"n8#HMc%_tMI^7XU?J?@-aI<DS.JY`[-_^,[2:EcHbq+96<>"dOZ[<HsbGU-<
%^u1sJ(^T*h"'S^Xe3'F(;RHP`Eoi.3DU(a/M78q<>)VH-]'QuZ16P=K2*a?qLnp)<O7-S)]H5Uq>`GU^i*7tOj8,>Wg6\HXf$\GO
%?b+ejS]_)K_%ruIR<fGS,+Iq=(p/7eH#N]^J'[pKP,Ts4^,`c]HLp)DZ@"UId5u&hWUJ!b*3*3gYUQFI/tkh"DGY+4>2<U'H<X?M
%OjAP2CgX'3WX0_(q_$<`Ln7+beW8i$]EB^_kpH@B)\k5R;s&UG_aZ(hZNJ>LE)V!de="C2A0gh%r(!SkJ(9<?7KB2eb!T1>dTNq^
%#l@^hI2E8]?Z!,cN+i+qYo$-_?s"VW9mr->X%Y6Pj`HD&fnOM!:g*@R@=`!HW0Zi5@$%8Sbfkq,R"JTM%5fan,ghP.EE,eil:Xqb
%f3..B:0t^&EVg4)WpAFr!d/[o2UR;.B0?=2_uB0PDg4=nQU#1?o=5p@ng`dF)'s>gLl8PD8D+e/CX#=KQUFMkV8\\DkbiM0YUa:2
%`S.)/,g4knlWY$p)#kDcD`(&+84rlTH?4Q&PRKB;L78XVY'$n"<mBk6C@@U32^o!c=2gQSPP`#01NAdeCULa^4H-:oUkR+e<LM[+
%j`8^%d7/#R,?'IR7uQ3")dV)5_JtL`gQCBmfE<=:M280(M\n_i!^'VQ>+QR"dmD+Op&8BM0):B`O*3hX8ij,FUBd2lb(<muK<hGl
%+W,q>"#SG?bYOC!%.LL:B;;oL"Oh;ji3j+EQW*FBC"WIcbbtHaoD6qNr6'ThlP>28&*N_Ns7u<Us7G3N%fbL;W;lZXrp0UXTDnK_
%r:r#?qtf6Crhi!Zo:Q&L^\m?2r6(`4o'cV75QBK1ri\Qdps["WWuf+WZ2W45J,[W`s6]jaYCHB>O+7&as6K^0-ZhC1r6mn/a8b\E
%s7cQ]rrkCs&Np~>
%AI9_PrivateDataEnd
